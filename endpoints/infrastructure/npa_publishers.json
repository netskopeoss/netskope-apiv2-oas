{
  "openapi": "3.0.0",
  "info": {
    "title": "npa_publisher",
    "description": "NPA publisher CRUD operations.",
    "version": "1.0.1"
  },
  "components": {
    "schemas": {
      "publisher_post_request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "publisher_name"
          },
          "lbrokerconnect": {
            "type": "boolean",
            "default": false
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tag_item_no_id"
            }
          },
          "publisher_upgrade_profiles_id": {
            "type": "integer",
            "format": "int32",
            "default": 1
          }
        }
      },
      "tag_item_no_id": {
        "type": "object",
        "properties": {
          "tag_name": {
            "type": "string",
            "default": "tag_name"
          }
        }
      },
      "tag_item": {
        "type": "object",
        "properties": {
          "tag_id": {
            "type": "integer",
            "format": "int32"
          },
          "tag_name": {
            "type": "string"
          }
        }
      },
      "release_item": {
        "type": "object",
        "properties": {
          "docker_tag": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "publisher_put_request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lbrokerconnect": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tag_item"
            }
          }
        }
      },
      "publisher_response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "not found"]
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              },
              "common_name": {
                "type": "string"
              },
              "registered": {
                "type": "boolean"
              },
              "lbrokerconnect": {
                "type": "boolean"
              },
              "assessment": {
                "type": "object"
              },
              "stitcher_id": {
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "type": "string",
                "enum": ["connected", "not registered"]
              },
              "publisher_upgrade_profile_id": {
                "type": "integer",
                "format": "int32"
              },
              "tags": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/tag_item"
                }
              }
            }
          }
        }
      },
      "publishers_response_400": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 400
          },
          "result": {
            "type": "string"
          }
        }
      },
      "publishers_get_response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "not found"]
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "publisher_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "publisher_name": {
                  "type": "string"
                },
                "common_name": {
                  "type": "string"
                },
                "registered": {
                  "type": "boolean"
                },
                "lbrokerconnect": {
                  "type": "boolean"
                },
                "assessment": {
                  "type": "object"
                },
                "stitcher_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "apps_count": {
                  "type": "integer",
                  "format": "int32"
                },
                "connected_apps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "string",
                  "enum": ["connected", "not registered"]
                },
                "publisher_upgrade_profile_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tag_item"
                  }
                }
              }
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "publisher_bulk_item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "common_name": {
            "type": "string"
          },
          "registered": {
            "type": "boolean"
          },
          "lbrokerconnect": {
            "type": "boolean"
          },
          "assessment": {
            "type": "object"
          },
          "upgrade_failed_reason": {
            "type": "object"
          },
          "upgrade_request": {
            "type": "boolean"
          },
          "upgrade_status": {
            "type": "object"
          },
          "stitcher_id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "enum": ["connected", "not registered"]
          },
          "publisher_upgrade_profile_id": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tag_item"
            }
          }
        }
      },
      "publisher_bulk_request": {
        "type": "object",
        "properties": {
          "publishers": {
            "type": "object",
            "properties": {
              "id": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "apply": {
                "type": "object",
                "properties": {
                  "upgrade_request": {
                    "type": "boolean",
                    "default": true
                  }
                }
              }
            }
          }
        }
      },
      "publishers_bulk_response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "not found"]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/publisher_bulk_item"
            }
          }
        }
      },
      "publishers_alert_get_response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "not found"]
          },
          "data": {
            "type": "object",
            "properties": {
              "adminUsers": {
                "type": "array",
                "example": ["admin1@abc.com", "admin2@abc.com"]
              },
              "eventTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "UPGRADE_WILL_START",
                    "UPGRADE_STARTED",
                    "UPGRADE_SUCCEEDED",
                    "UPGRADE_FAILED",
                    "CONNECTION_FAILED"
                  ]
                },
                "example": ["CONNECTION_FAILED", "UPGRADE_STARTED"]
              },
              "selectedUsers": {
                "type": "string",
                "example": "abc@xyz.com,def@xyz.com"
              }
            }
          }
        }
      },
      "publishers_alert_put_request": {
        "type": "object",
        "properties": {
          "adminUsers": {
            "type": "array",
            "example": ["admin1@abc.com", "admin2@abc.com"]
          },
          "eventTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "UPGRADE_WILL_START",
                "UPGRADE_STARTED",
                "UPGRADE_SUCCEEDED",
                "UPGRADE_FAILED",
                "CONNECTION_FAILED"
              ]
            },
            "minItems": 1,
            "maxItems": 5,
            "example": ["CONNECTION_FAILED", "UPGRADE_STARTED"]
          },
          "selectedUsers": {
            "type": "string",
            "example": "abc@xyz.com,def@xyz.com"
          }
        }
      },
      "publishers_alert_put_response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "not found", "failure"]
          }
        }
      },
      "publishers_release_get_response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "not found"]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/release_item"
            }
          }
        }
      },
      "protocol_response_item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "port": {
            "type": "string"
          },
          "transport": {
            "type": "string"
          },
          "service_id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "service_publisher_assignment_item": {
        "type": "object",
        "properties": {
          "publisher_id": {
            "type": "integer",
            "format": "int32"
          },
          "service_id": {
            "type": "integer",
            "format": "int32"
          },
          "primary": {
            "type": "boolean"
          },
          "reachability": {
            "type": "object",
            "properties": {
              "error_code": {
                "type": "integer",
                "format": "int32"
              },
              "reachable": {
                "type": "boolean"
              },
              "error_string": {
                "type": "string"
              }
            }
          }
        }
      },
      "private_apps_response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "not found"]
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                },
                "use_publisher_dns": {
                  "type": "boolean"
                },
                "clientless_access": {
                  "type": "boolean"
                },
                "trust_self_signed_certs": {
                  "type": "boolean"
                },
                "host": {
                  "type": "string"
                },
                "real_host": {
                  "type": "string"
                },
                "protocols": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/protocol_response_item"
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tag_item"
                  }
                },
                "service_publisher_assignments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/service_publisher_assignment_item"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/publishers": {
      "x-netskope-params": {
        "serviceConfig": "provisioner-pycore-ws",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "npa_publishers"
      },
      "get": {
        "summary": "Get list of publisher objects",
        "description": "Get list of publisher objects",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Return values only from specified fields",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_get_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a publisher",
        "description": "Create a publisher",
        "parameters": [
          {
            "name": "silent",
            "in": "query",
            "required": false,
            "description": "flag to skip output except status code",
            "schema": {
              "type": "string",
              "enum": ["1", "0"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/publisher_post_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publisher_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      }
    },
    "/publishers/{publisher_id}": {
      "x-netskope-params": {
        "serviceConfig": "provisioner-pycore-ws",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "npa_publishers"
      },
      "delete": {
        "summary": "Delete a publisher",
        "description": "Delete a publisher based on publisher id",
        "parameters": [
          {
            "name": "publisher_id",
            "in": "path",
            "required": true,
            "description": "publisher id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["success", "error"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a publisher",
        "description": "update a publisher based on publisher id",
        "parameters": [
          {
            "name": "publisher_id",
            "in": "path",
            "required": true,
            "description": "publisher id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "silent",
            "in": "query",
            "required": false,
            "description": "flag to skip output except status code",
            "schema": {
              "type": "string",
              "enum": ["1", "0"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/publisher_put_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publisher_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Patch a publisher",
        "description": "patch a publisher based on publisher id",
        "parameters": [
          {
            "name": "publisher_id",
            "in": "path",
            "required": true,
            "description": "publisher id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "silent",
            "in": "query",
            "required": false,
            "description": "flag to skip output except status code",
            "schema": {
              "type": "string",
              "enum": ["1", "0"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/publisher_put_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publisher_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get a publisher",
        "description": "get a publisher based on publisher id",
        "parameters": [
          {
            "name": "publisher_id",
            "in": "path",
            "required": true,
            "description": "publisher id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publisher_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      }
    },
    "/publishers/{publisher_id}/registration_token": {
      "x-netskope-params": {
        "serviceConfig": "provisioner-pycore-ws",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "npa_publishers"
      },
      "post": {
        "summary": "Generate and retrieve a token for publisher registration",
        "description": "Generate and retrieve a token for publisher registration",
        "parameters": [
          {
            "name": "publisher_id",
            "in": "path",
            "required": true,
            "description": "publisher id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": ["success", "not found"]
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      }
    },
    "/publishers/{publisher_id}/apps": {
      "x-netskope-params": {
        "serviceConfig": "provisioner-pycore-ws",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "npa_publishers"
      },
      "get": {
        "summary": "Get all private apps associated to a publisher",
        "description": "Get all private apps associated to a publisher",
        "parameters": [
          {
            "name": "publisher_id",
            "in": "path",
            "required": true,
            "description": "publisher id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/private_apps_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      }
    },
    "/publishers/bulk": {
      "x-netskope-params": {
        "serviceConfig": "provisioner-pycore-ws",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "npa_publishers"
      },
      "put": {
        "summary": "Trigger bulk publisher update action",
        "description": "Trigger bulk publisher update action",
        "parameters": [
          {
            "name": "silent",
            "in": "query",
            "required": false,
            "description": "flag to skip output except status code",
            "schema": {
              "type": "string",
              "enum": ["1", "0"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/publisher_bulk_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_bulk_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      }
    },
    "/publishers/releases": {
      "x-netskope-params": {
        "serviceConfig": "provisioner-pycore-ws",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "npa_publishers"
      },
      "get": {
        "summary": "Get list of publisher release objects",
        "description": "Get list of publisher release objects",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Return values only from specified fields",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_release_get_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      }
    },
    "/publishers/alertsconfiguration": {
      "x-netskope-params": {
        "serviceConfig": "provisioner-pycore-ws",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "npa_publishers"
      },
      "get": {
        "summary": "Get list of publisher alerts",
        "description": "Get list of publisher alerts",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_alert_get_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Configure publisher alerts",
        "description": "Configure publisher alerts",
        "parameters": [
          {
            "name": "silent",
            "in": "query",
            "required": false,
            "description": "flag to skip output except status code: \n * `1` - Skip response data \n * `0` - Do not skip response data",
            "schema": {
              "type": "string",
              "enum": ["1", "0"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/publishers_alert_put_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_alert_put_response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/publishers_response_400"
                }
              }
            }
          }
        }
      }
    }
  }
}
