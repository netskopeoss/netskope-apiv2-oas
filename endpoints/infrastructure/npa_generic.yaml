components:
  schemas:
    "400":
      properties:
        message:
          type: string
        status:
          example: 400
          type: integer
      type: object
    resource_validation_request:
      properties:
        resource_attributes:
          properties:
            attribute:
              type: string
          type: object
        targets:
          properties:
            field:
              anyOf:
                - type: string
                - type: boolean
                - type: array
                - type: integer
                - type: object
              type: string
          type: object
      type: object
    resource_validation_response:
      properties:
        field_count:
          format: int32
          type: integer
        mismatched_fields:
          items:
            type: string
          type: array
        result:
          properties:
            field:
              $ref: "#/components/schemas/validation_result"
          type: object
      type: object
    validate_name_response:
      properties:
        data:
          properties:
            is_valid_name:
              type: boolean
          type: object
        status:
          enum:
            - success
            - error
          type: string
      type: object
    validation_result:
      properties:
        is_vaild:
          type: boolean
        message:
          type: string
      type: object
info:
  description: NPA generic operations.
  title: npa_generic
  version: 1.0.0
openapi: 3.0.0
paths:
  /infrastructure/npa/namevalidation:
    get:
      description:
        Checks if the name provided is valid/duplicate for the specified
        resource type.
      parameters:
        - description: resource type to check if the name is valid.
          in: query
          name: resourceType
          required: true
          schema:
            enum:
              - publisher
              - publisher_upgrade_profile
              - tag
              - policy
              - private_app
              - local_broker
            type: string
        - description: name of the resource to validate
          in: query
          name: name
          required: true
          schema:
            type: string
        - description:
            tag_type required only for resourceType tag, 1 for PRIVATE_APP
            & 2 for PUBLISHER
          in: query
          name: tag_type
          required: false
          schema:
            enum:
              - "1"
              - "2"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/validate_name_response"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
          description: Invalid request
      summary: Checks if the name provided is valid/duplicate or not.
    x-netskope-params:
      apiGroup: npa_generic
      customerFacing: true
      serviceConfig: provisioner-pycore-ws
      version: 2
  /infrastructure/npa/resource/validation/{resource_type}:
    post:
      description: Validate the values of multiple fields for specified resource type.
      parameters:
        - description: resource type for validation
          in: path
          name: resource_type
          required: true
          schema:
            enum:
              - publisher
              - publisher_upgrade_profile
              - tag
              - policy
              - private_app
              - local_broker
            type: string
      requestBody:
        content:
          application/json:
            examples:
              Private app example:
                value:
                  resource_attributes:
                    clientless_access: true
                    is_user_portal_app: true
                  targets:
                    host: 192.168.0.1
                    mood: happy
                    name: test-private-app
                    protocols:
                      - port: "80"
                        type: tcp
                      - port: "8080"
                        type: udp
              Tag example:
                value:
                  resource_attributes:
                    tag_type: 1
                  targets:
                    name: test_tag
            schema:
              $ref: "#/components/schemas/resource_validation_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Private app example:
                  value:
                    field_count: 4
                    mismatched_fields:
                      - mood
                    result:
                      host:
                        is_valid: false
                        message: Enter a FQDN. 192.168.0.1 is not a valid host.
                      name:
                        is_valid: true
                        message: ""
                      protocols:
                        is_valid: false
                        message:
                          Clientless private app doesn't support port range
                          and multiple port.
                Tag example:
                  value:
                    field_count: 1
                    mismatched_fields: []
                    result:
                      is_vaild: true
                      message: ""
              schema:
                $ref: "#/components/schemas/resource_validation_response"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
          description: Invalid request
      summary: Validate the values of multiple fields for specified resource type.
    x-netskope-params:
      apiGroup: npa_generic
      customerFacing: false
      serviceConfig: provisioner-pycore-ws
      version: 2
