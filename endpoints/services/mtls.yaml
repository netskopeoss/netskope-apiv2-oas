components:
  schemas:
    ginhelper.Error:
      properties:
        datetime:
          description: date time
          example: "2022-08-31T11:14:23.000Z"
          type: string
        err_code:
          description: error code definition
          example: "310101"
          type: string
        message:
          description: error message
          example: some error happened
          type: string
        trace_id:
          description: trace ID
          example: 547c581b-b779-4770-8b73-aeece0742252
          type: string
      type: object
    mtls.createMTLSChain:
      properties:
        description:
          example: my first client ca description
          maxLength: 200
          type: string
        name:
          example: my first client ca
          maxLength: 100
          type: string
        pem:
          description: PEM could be multiple certs as a certificate chain
          example: "-----BEGIN CERTIFICATE----- PEM content -----END CERTIFICATE-----"
          type: string
      required:
        - name
        - pem
      type: object
    mtls.deleteMTLSChainResponse:
      properties:
        status:
          example: success
          type: string
      type: object
    mtls.listMTLSChainsResponse:
      properties:
        elements:
          example:
            - create_by: user@email.com
              create_time: "2022-08-30T11:14:23.000Z"
              description: My Client CA description
              id: "19"
              modify_by: user@email.com
              modify_time: "2022-08-30T11:14:23.000Z"
              name: My Client CA
              pem: "-----BEGIN CERTIFICATE----- PEM content -----END CERTIFICATE-----"
            - create_by: user@email.com
              create_time: "2022-08-31T11:14:23.000Z"
              description: My Client CA description 2
              id: "20"
              modify_by: user@email.com
              modify_time: "2022-08-31T11:14:23.000Z"
              name: My Client CA 2
              pem: "-----BEGIN CERTIFICATE----- PEM content -----END CERTIFICATE-----"
          items:
            $ref: "#/components/schemas/mtls.mTLSClientCertChain"
          type: array
      type: object
    mtls.mTLSClientCertChain:
      properties:
        create_by:
          example: user@email.com
          type: string
        create_time:
          example: "2022-08-31T11:14:23.000Z"
          type: string
        description:
          example: My Client CA description
          type: string
        id:
          example: "19"
          type: string
        modify_by:
          example: user@email.com
          type: string
        modify_time:
          example: "2022-08-31T11:14:23.000Z"
          type: string
        name:
          example: My Client CA
          type: string
        pem:
          example: "-----BEGIN CERTIFICATE----- PEM content -----END CERTIFICATE-----"
          type: string
      type: object
    mtls.updateMTLSChain:
      properties:
        description:
          example: my first client ca description
          maxLength: 200
          type: string
        name:
          example: my first client ca
          maxLength: 100
          type: string
        pem:
          description: PEM could be multiple certs as a certificate chain
          example: "-----BEGIN CERTIFICATE----- PEM content -----END CERTIFICATE-----"
          type: string
      type: object
info:
  contact: {}
  description: ""
  title: REST API for mTLS Certificate
  version: "1.0"
openapi: 3.0.1
paths:
  /services/certs/mtls:
    get:
      description: List all certificates for mTLS
      parameters:
        - description:
            offset of the first item in the list to retrieve, from the beginning
            if omit
          explode: false
          in: query
          name: offset
          required: false
          schema:
            default: 0
            type: number
          style: form
        - description: number of items
          explode: false
          in: query
          name: limit
          required: false
          schema:
            default: 10
            type: number
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mtls.listMTLSChainsResponse"
          description: successful operation
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description:
            This is a licensed feature, please contact Netskope support
            for enablement
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Internal error occurrence
      summary: List all certificates for mTLS
      tags:
        - mTLS certificate
    post:
      description:
        "Server side will use uploaded certificates to validate client's
        certificate in mutual TLS.

        Max. number of certificate chains per tenant is 2."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mtls.createMTLSChain"
        description: Payload
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mtls.mTLSClientCertChain"
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Invalid format
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description:
            This is a licensed feature, please contact Netskope support
            for enablement
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Name already exists
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Internal error occurrence
      summary: Create a certificate for mTLS
      tags:
        - mTLS certificate
      x-codegen-request-body-name: request_body
    x-netskope-params:
      apiGroup: mtls
      customerFacing: true
      serviceConfig: swg-api-service
      version: 2
  /services/certs/mtls/{id}:
    delete:
      description: Delete a certificate for mTLS by ID
      parameters:
        - description: Single resource ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mtls.deleteMTLSChainResponse"
          description: Deleted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Invalid format
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description:
            This is a licensed feature, please contact Netskope support
            for enablement
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Resource not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Internal error occurrence
      summary: Delete a certificate for mTLS
      tags:
        - mTLS certificate
    get:
      description: Get a certificate for mTLS by ID
      parameters:
        - description: Single resource ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mtls.mTLSClientCertChain"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Invalid format
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description:
            This is a licensed feature, please contact Netskope support
            for enablement
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Given ID is not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Internal error occurrence
      summary: Get a certificate for mTLS
      tags:
        - mTLS certificate
    patch:
      description: Update a certificate for mTLS by ID
      parameters:
        - description: Single resource ID
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mtls.updateMTLSChain"
        description:
          Payload (Supporting partial updates. Only parameters specified
          will be updated.)
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mtls.mTLSClientCertChain"
          description: Updated
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Invalid format
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description:
            This is a licensed feature, please contact Netskope support
            for enablement
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Given ID is not found
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Name already exists
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ginhelper.Error"
          description: Internal error occurrence
      summary: Update a certificate for mTLS
      tags:
        - mTLS certificate
      x-codegen-request-body-name: request_body
    x-netskope-params:
      apiGroup: mtls
      customerFacing: true
      serviceConfig: swg-api-service
      version: 2
servers:
  - url: /
x-original-swagger-version: "2.0"
