components:
  schemas:
    IntegerItem:
      example: 1
      type: integer
    Link:
      properties:
        link_bw:
          example: 1000
          type: integer
        link_id:
          example: 1
          type: integer
        link_name:
          example: link1
          type: string
      type: object
    Policy:
      properties:
        bw_classes:
          items:
            properties:
              max_bw:
                example: 1000
                type: integer
              traffic_class_id:
                example: 1
                type: integer
            type: object
          type: array
        bw_policy_name:
          example: policy1
          type: string
        bw_type:
          example: absolute
          type: string
        id:
          example: 1
          type: integer
        link_ids:
          items:
            example: 1
            type: integer
          type: array
      type: object
    TrafficClass:
      properties:
        traffic_class_id:
          example: 1
          type: integer
        traffic_class_name:
          example: policy1
          type: string
      type: object
    TrafficClassRule:
      properties:
        match_criteria_action:
          properties:
            traffic_class_id:
              example: 1
              type: integer
            traffic_class_name:
              example: Class1
              type: string
          type: object
        rulename:
          example: 1
          type: integer
        user_col:
          items:
            example: user1
            type: string
          type: array
        web_categ_col:
          items:
            example: "101"
            type: string
          type: array
      type: object
    changes_get_response_200:
      properties:
        count:
          example: 1
          type: integer
        data:
          properties:
            links:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  last_changed_by:
                    example: user1
                    type: string
                  name:
                    example: link1
                    type: string
                  type:
                    example: created
                    type: string
                type: object
              type: array
            policies:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  last_changed_by:
                    example: user1
                    type: string
                  name:
                    example: policy1
                    type: string
                  type:
                    example: created
                    type: string
                type: object
              type: array
            traffic_class_rules:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  last_changed_by:
                    example: user1
                    type: string
                  order:
                    example: 1
                    type: integer
                  type:
                    example: created
                    type: string
                type: object
              type: array
            traffic_classes:
              items:
                properties:
                  id:
                    example: 1
                    type: integer
                  last_changed_by:
                    example: user1
                    type: string
                  name:
                    example: class1
                    type: string
                  type:
                    example: created
                    type: string
                type: object
              type: array
          type: object
        status:
          example: 200
          type: integer
      type: object
    changes_post_response_200:
      properties:
        data:
          properties:
            links:
              items:
                $ref: "#/components/schemas/Link"
              type: array
            policies:
              items:
                $ref: "#/components/schemas/Policy"
              type: array
            traffic_classes:
              items:
                $ref: "#/components/schemas/TrafficClass"
              type: array
            traffic_classes_rules:
              items:
                $ref: "#/components/schemas/TrafficClassRule"
              type: array
          type: object
        status:
          example: 200
          type: integer
      type: object
    changes_response_400:
      properties:
        data:
          example: error_400
          type: string
        status:
          example: 400
          type: integer
      type: object
    changes_response_429:
      properties:
        data:
          example: error_429
          type: string
        status:
          example: 429
          type: integer
      type: object
    changes_response_500:
      properties:
        data:
          example: error_500
          type: string
        status:
          example: 500
          type: integer
      type: object
    deploy_post_request_items:
      properties:
        links:
          items:
            $ref: "#/components/schemas/IntegerItem"
          type: array
        policies:
          items:
            $ref: "#/components/schemas/IntegerItem"
          type: array
        traffic_class_rules:
          items:
            $ref: "#/components/schemas/IntegerItem"
          type: array
        traffic_classes:
          items:
            $ref: "#/components/schemas/IntegerItem"
          type: array
      type: object
info:
  description: bandwidth control service config changes related CRUD operations.
  title: bandwidthcontrol-service
  version: 1.0.0
openapi: 3.0.0
paths:
  /services/bandwidthcontrol/deploy:
    get:
      description: API to get bandwidth control pending changes
      parameters:
        - description: Provide comma separated list of fields to be displayed
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changes_get_response_200"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changes_response_400"
          description: Invalid request
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changes_response_429"
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changes_response_500"
          description: Internal server error
      summary: " Get bandwidth control pending changes"
    post:
      description: API to apply bandwidth control pending changes.
      parameters:
        - description:
            Value must be true or false. If true, all the pending changes
            for that tenant will be deployed. If false, a request body must be provides,
            which gives a list of link, traffic classes, policies and rules which have
            to be deployed. Defaults to false.
          in: query
          name: all
          required: false
          schema:
            example: false
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/deploy_post_request_items"
        description:
          If query parameter - all is missing or false, the request body
          is required.. Must contain the id of the specific links, traffic class,
          rules and policies to be deployed.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changes_post_response_200"
          description: Successful operation
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changes_response_429"
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changes_response_500"
          description: Internal server error
      summary: Apply bandwidth control pending changes
    x-netskope-params:
      apiGroup: changes
      customerFacing: true
      serviceConfig: qos
      version: 2
