openapi: 3.0.0
info:
  description: API service for DC configurations
  title: device-classification-configuration
  version: 1.0.0
servers:
  - url: localhost:3000
paths:
  /deviceclassification/options:
    get:
      parameters:
        - description: Option type filter
          in: query
          name: type
          required: true
          schema:
            example: av_prod_name
            type: string
        - description: Option os filter
          in: query
          name: os
          schema:
            enum:
              - windows
              - mac
              - android
              - ios
              - chromeos
              - linux
            type: string
        - description: Option key filter
          in: query
          name: key
          schema:
            example: CrowdStrike
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Get supported antivirus product list:
                  value:
                    - key: Any
                      os: windows
                      type: av_prod_name
                      value: Any
                    - key: SentinelOne
                      os: windows
                      type: av_prod_name
                      value: Sentinel
                    - key: Microsoft Defender
                      os: windows
                      type: av_prod_name
                      value: Microsoft Defender
                    - key: CrowdStrike
                      os: mac
                      type: av_prod_name
                      value: crowdstrike
                    - key: Carbon Black
                      os: mac
                      type: av_prod_name
                      value: carbonblack
              schema:
                items:
                  properties:
                    key:
                      description: Option key
                      type: string
                    os:
                      enum:
                        - windows
                        - mac
                        - android
                        - ios
                        - chromeos
                        - linux
                      type: string
                    type:
                      description: Option type
                      type: string
                    value:
                      description: Option value
                      type: string
                  type: object
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "500":
          description: Internal server error
      summary: Get predefined options
      tags:
        - Option
    x-netskope-params:
      apiGroup: device-classification-configuration
      customerFacing: false
      serviceConfig: deviceclassification
      version: 2
  /deviceclassification/rules:
    get:
      parameters:
        - description: Only rules of the specified label name
          in: query
          name: label
          schema:
            example: customDcLabelName
            type: string
        - description: The (zero-based) offset of the first item in the list to retrieve
          in: query
          name: offset
          schema:
            default: 0
            minimum: 0
            type: integer
        - description: Max items to retrieve
          in: query
          name: limit
          schema:
            default: 0
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Get rules:
                  value:
                    - conditions:
                        $and:
                          - $or:
                              - av_check:
                                  product_name: CrowdStrike
                                  signature_up_to_date: "false"
                              - av_check:
                                  product_name: Symantec
                                  signature_up_to_date: "true"
                      id: 18
                      label: label 1
                      modifiedBy: ochao@netskope.com
                      modifiedTime: "2024-01-25T07:46:00.000Z"
                      name: rule 1
                      os: windows
                    - conditions:
                        $and:
                          - file_check:
                              file: "2"
                          - file_check:
                              file: "4"
                      id: 12
                      label: label 2
                      modifiedBy: ochao@netskope.com
                      modifiedTime: "2023-07-15T07:46:00.000Z"
                      name: rule 2
                      os: mac
              schema:
                items:
                  properties:
                    conditions:
                      description: Detail checks of the rule
                      example:
                        $and:
                          - domain_check:
                              domains: []
                          - $or:
                              - av_check:
                                  product_name: CrowdStrike
                                  signature_up_to_date: "false"
                              - av_check:
                                  product_name: Symantec
                                  signature_up_to_date: "true"
                      type: object
                    id:
                      description: Id of the rule
                      type: integer
                    label:
                      description: Label(group) name of the rule
                      type: string
                    modifiedBy:
                      description: By whom the rule was last modified
                      type: string
                    modifiedTime:
                      description: "By when the rule was last modified; Pattern: 'd{4}-[01]d-[0-3]dT[0-2]d:[0-5]d:[0-5]d.d+Z?'"
                      example: "2024-03-18T07:46:00.000Z"
                      type: string
                    name:
                      description: Name of the rule
                      type: string
                    os:
                      enum:
                        - windows
                        - mac
                        - android
                        - ios
                        - chromeos
                        - linux
                      type: string
                  type: object
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "500":
          description: Internal server error
      summary: Get rules
      tags:
        - Rule
    post:
      requestBody:
        content:
          application/json:
            schema:
              items:
                properties:
                  conditions:
                    description: Detail checks of the rule
                    example:
                      $and:
                        - domain_check:
                            domains: []
                        - $or:
                            - av_check:
                                product_name: CrowdStrike
                                signature_up_to_date: "false"
                            - av_check:
                                product_name: Symantec
                                signature_up_to_date: "true"
                    type: object
                  id:
                    description: Id of the rule should be provided for update
                    type: integer
                  label:
                    description: Existed label(group) name of the rule
                    type: string
                  name:
                    description: Name of the rule
                    type: string
                  os:
                    enum:
                      - windows
                      - mac
                      - android
                      - ios
                      - chromeos
                      - linux
                    type: string
                required:
                  - name
                  - label
                  - os
                  - conditions
                type: object
              type: array
        required: true
      responses:
        "201":
          description: Rules successfully upserted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Rule information provided is incorrect
        "403":
          content:
            application/json:
              examples:
                Reached the max number created:
                  value:
                    error: Forbidden
                    message:
                      You cannot create new rules since you have reached the
                      max number (50) of rules in a label
                    statusCode: 403
          description: Forbidden
        "409":
          description: Rule criteria already exists
        "500":
          description: Internal server error
      summary: Upsert rules
      tags:
        - Rule
    x-netskope-params:
      apiGroup: device-classification-configuration
      customerFacing: false
      serviceConfig: deviceclassification
      version: 2
  /deviceclassification/rules/{id}:
    delete:
      parameters:
        - description: Unique identifier for the rule
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "404":
          description: Rule not found
        "500":
          description: Internal server error
      summary: Delete a rule
      tags:
        - Rule
    get:
      parameters:
        - description: Unique identifier for the rule
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Get the rule:
                  value:
                    conditions:
                      $and:
                        - $or:
                            - av_check:
                                product_name: CrowdStrike
                                signature_up_to_date: "false"
                            - av_check:
                                product_name: Symantec
                                signature_up_to_date: "true"
                    id: 18
                    label: Group of Migrated Rules
                    modifiedBy: ochao@netskope.com
                    modifiedTime: "2024-01-25T07:46:00.000Z"
                    name: backward rule
                    os: windows
              schema:
                properties:
                  conditions:
                    description: Detail checks of the rule
                    example:
                      $and:
                        - domain_check:
                            domains: []
                        - $or:
                            - av_check:
                                product_name: CrowdStrike
                                signature_up_to_date: "false"
                            - av_check:
                                product_name: Symantec
                                signature_up_to_date: "true"
                    type: object
                  id:
                    description: Id of the rule
                    type: integer
                  label:
                    description: Label(group) name of the rule
                    type: string
                  modifiedBy:
                    description: By whom the rule was last modified
                    type: string
                  modifiedTime:
                    description: "By when the rule was last modified; Pattern: 'd{4}-[01]d-[0-3]dT[0-2]d:[0-5]d:[0-5]d.d+Z?'"
                    example: "2024-03-18T07:46:00.000Z"
                    type: string
                  name:
                    description: Name of the rule
                    type: string
                  os:
                    enum:
                      - windows
                      - mac
                      - android
                      - ios
                      - chromeos
                      - linux
                    type: string
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "404":
          description: Rule not found
        "500":
          description: Internal server error
      summary: Get a rule
      tags:
        - Rule
    put:
      parameters:
        - description: Unique identifier for the rule
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                conditions:
                  description: Detail checks of the rule
                  example:
                    $and:
                      - domain_check:
                          domains: []
                      - $or:
                          - av_check:
                              product_name: CrowdStrike
                              signature_up_to_date: "false"
                          - av_check:
                              product_name: Symantec
                              signature_up_to_date: "true"
                  type: object
                label:
                  description: Existed label(group) name of the rule
                  type: string
                name:
                  description: Name of the rule
                  type: string
                os:
                  enum:
                    - windows
                    - mac
                    - android
                    - ios
                    - chromeos
                    - linux
                  type: string
              type: object
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "404":
          description: Rule not found
        "409":
          description: Rule already exists
        "500":
          description: Internal server error
      summary: Update a rule
      tags:
        - Rule
    x-netskope-params:
      apiGroup: device-classification-configuration
      customerFacing: false
      serviceConfig: deviceclassification
      version: 2
  /deviceclassification/tags:
    get:
      parameters:
        - description: The (zero-based) offset of the first item in the list to retrieve
          in: query
          name: offset
          schema:
            default: 0
            minimum: 0
            type: integer
        - description: Max items to retrieve
          in: query
          name: limit
          schema:
            default: 0
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Get labels:
                  value:
                    - description: low risk
                      id: 12
                      modifiedBy: ochao@netskope.com
                      modifiedTime: "2024-01-25T07:46:00.000Z"
                      name: customDC label 1
                      policyNames: []
                      priority: 3
                    - description: mid risk
                      id: 18
                      modifiedBy: ochao@netskope.com
                      modifiedTime: "2024-01-25T07:46:00.000Z"
                      name: customDC label 2
                      policyNames: ["policyName1", "policyName2"]
                      priority: 6
              schema:
                items:
                  properties:
                    description:
                      description: Description of the label
                      type: string
                    id:
                      description: Id of the label
                      type: integer
                    modifiedBy:
                      description: By whom the label was last modified
                      type: string
                    modifiedTime:
                      description:
                        "By when the label was last modified; Pattern:
                        'd{4}-[01]d-[0-3]dT[0-2]d:[0-5]d:[0-5]d.d+Z?'"
                      example: "2024-03-18T07:46:00.000Z"
                      type: string
                    name:
                      description: Name of the label
                      type: string
                    policyNames:
                      description: Names of policies relating this label
                      type: array
                      items:
                        type: string
                    priority:
                      description:
                        Order of the label with the lower values having
                        higher priority
                      type: integer
                  type: object
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "500":
          description: Internal server error
      summary: Get labels
      tags:
        - Tag
    post:
      requestBody:
        content:
          application/json:
            schema:
              items:
                properties:
                  description:
                    description: Description of the label
                    type: string
                  id:
                    description: Unique identifier for the label
                    type: integer
                  name:
                    description:
                      Name of the label; If id not provided, name will
                      be used for existence checking
                    type: string
                type: object
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Upserted label ids:
                  value:
                    - 10
                    - 13
          description: Labels successfully upserted
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Label information provided is incorrect
        "403":
          content:
            application/json:
              examples:
                Exceeds the max length of text:
                  value:
                    error: Forbidden
                    message:
                      You cannot use a name or description that exceeds the
                      max length (80) of Device Classification
                    statusCode: 403
                Reached the max number created:
                  value:
                    error: Forbidden
                    message:
                      You cannot create a new Device Classification since you
                      have reached the max number (50) of Device Classification
                    statusCode: 403
                Reserved name:
                  value:
                    error: Forbidden
                    message:
                      You cannot use a reserved name {labelName} for Device
                      Classification
                    statusCode: 403
          description: Forbidden
        "409":
          description: Label name already exists
        "500":
          description: Internal server error
      summary: Upsert labels
      tags:
        - Tag
    x-netskope-params:
      apiGroup: device-classification-configuration
      customerFacing: false
      serviceConfig: deviceclassification
      version: 2
  /deviceclassification/tags/{id}:
    delete:
      parameters:
        - description: Unique identifier for the label
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Created:
                  value:
                    status: true
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "404":
          description: Label not found
        "500":
          description: Internal server error
      summary: Delete a label
      tags:
        - Tag
    get:
      parameters:
        - description: Unique identifier for the label
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Get the label:
                  value:
                    description: mid risk
                    id: 18
                    modifiedBy: ochao@netskope.com
                    modifiedTime: "2024-01-25T07:46:00.000Z"
                    name: customDC label 2
                    policyNames: ["policyName1", "policyName2"]
                    priority: 6
              schema:
                properties:
                  description:
                    description: Description of the label
                    type: string
                  id:
                    description: Id of the label
                    type: integer
                  modifiedBy:
                    description: By whom the label was last modified
                    type: string
                  modifiedTime:
                    description: "By when the label was last modified; Pattern: 'd{4}-[01]d-[0-3]dT[0-2]d:[0-5]d:[0-5]d.d+Z?'"
                    example: "2024-03-18T07:46:00.000Z"
                    type: string
                  name:
                    description: Name of the label
                    type: string
                  policyNames:
                    description: Names of policies relating this label
                    type: array
                    items:
                      type: string
                  priority:
                    description:
                      Order of the label with the lower values having higher
                      priority
                    type: integer
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "404":
          description: Label not found
        "500":
          description: Internal server error
      summary: Get a label
      tags:
        - Tag
    put:
      parameters:
        - description: Unique identifier for the label
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the label
                  type: string
                name:
                  description: Name of the label
                  type: string
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Created:
                  value:
                    status: true
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "404":
          description: Label not found
        "500":
          description: Internal server error
      summary: Update a label
      tags:
        - Tag
    patch:
      description:
        Move a label priority to either top, bottom, after position x or
        before position x
      parameters:
        - description: Unique identifier for the label
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              move label after position 0:
                value:
                  operation: after
                  position: 0
              move label at bottom:
                value:
                  operation: bottom
              move label at top:
                value:
                  operation: top
              move label before position 0:
                value:
                  operation: before
                  position: 0
            schema:
              properties:
                operation:
                  enum:
                    - top
                    - bottom
                    - after
                    - before
                  type: string
                position:
                  description:
                    0-index position, required if operation is 'after'
                    or 'before'
                  type: integer
              required:
                - operation
              type: object
        description: JSON object containing new position of the label
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Created:
                  value:
                    status: true
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input parameter
        "404":
          description: Label not found
        "500":
          description: Internal server error
      summary: Move a label priority
      tags:
        - Tag
    x-netskope-params:
      apiGroup: device-classification-configuration
      customerFacing: false
      serviceConfig: deviceclassification
      version: 2
components:
  schemas:
    ErrorResponse:
      properties:
        error:
          description: HTTP status meaning
          example: Bad Request
          type: string
        message:
          description: error message
          type: string
        statusCode:
          description: HTTP status code
          example: 400
          type: integer
      type: object
