components:
  schemas:
    ActiveUserConfidenceScore:
      example:
        startTime: 1693267200000
        uciScore: 500
        user: test@netskope.com
      properties:
        startTime:
          description: The latest day when the user did some activities
          format: int64
          type: integer
        uciScore:
          description: Current confidence score
          format: int32
          type: integer
        user:
          type: string
      required:
        - user
        - start
        - confidenceScore
      type: object
    ActiveUserSearchRequest:
      example:
        ratingRank: moderate
        watchlist: watchlist-A
      minProperties: 1
      properties:
        ratingRank:
          description:
            It must be one of ['Good', 'Moderate', 'Poor']. If it is set,
            the API will load confidence score for users whose UCIs are in this rank
          enum:
            - Good
            - Moderate
            - Poor
          type: string
        watchlist:
          description:
            Name of the watchlist. It is optional. If it is not set, the
            API will search all users' confidence score
          type: string
      type: object
    ActiveUserUciResponse:
      example:
        results:
          - startTime: 1693267200000
            uciScore: 300
            user: test1@netskope.com
          - startTime: 1693267200000
            uciScore: 600
            user: test2@netskope.com
        totalCount: 2
      properties:
        results:
          items:
            $ref: "#/components/schemas/ActiveUserConfidenceScore"
          type: array
        totalCount:
          format: int64
          type: integer
      required:
        - totalCount
        - results
      type: object
    Anomalies:
      properties:
        results:
          example:
            - activity: ActivityForUciImpactAPI
              anomalyCreatedTime: "2023-02-28T21:06:24Z"
              anomalyId: 63fe6cd01db8c9064613f9e4
              eventId: event_id1
              markAsAllowed: true
              reason: login failed in OKTA3
              reasonForAllowed: Not an anomaly
              score: 20
              source: OKTA1
              time: 1677618382070
              user: hello@netskope.com
            - activity: ActivityForUciImpactAPI
              anomalyCreatedTime: "2023-02-28T21:06:24Z"
              anomalyId: 63fe6cd01db8c9064613f9e5
              eventId: event_id2
              reason: login failed in OKTA2
              score: 20
              source: OKTA2
              time: 1677618382070
              user: blah@ms.com
            - activity: ActivityForUciImpactAPI
              additionalProps:
                extra: test
              anomalyCreatedTime: "2023-02-28T21:06:24Z"
              anomalyId: 63fe6cd01db8c9064613f9e6
              eventId: event_id3
              reason: login failed in OKTA3
              score: 20
              source: OKTA3
              time: 1677618382070
              user: hello1@netskope.com
          items:
            $ref: "#/components/schemas/Anomaly"
          type: array
        totalCount:
          example: 4
          format: int32
          type: integer
      required:
        - totalCount
        - results
      type: object
    AnomaliesSearchFilters:
      properties:
        filters:
          properties:
            anomalyId:
              $ref: "#/components/schemas/StringEqualCondition"
            endTime:
              $ref: "#/components/schemas/IntegerEqualCondition"
            source:
              $ref: "#/components/schemas/StringEqualCondition"
            startTime:
              $ref: "#/components/schemas/IntegerEqualCondition"
            user:
              $ref: "#/components/schemas/StringEqualCondition"
          type: object
      type: object
    Anomaly:
      properties:
        activity:
          type: string
        additionalProps:
          additionalProperties:
            type: string
          type: object
        anomalyCreatedTime:
          format: date-time
          type: string
        anomalyId:
          type: string
        eventId:
          type: string
        featureValue:
          type: string
        markAsAllowed:
          example: false
          type: boolean
        reason:
          type: string
        reasonForAllowed:
          type: string
        score:
          format: int32
          type: integer
        source:
          type: string
        time:
          format: int64
          type: integer
        user:
          type: string
      required:
        - anomalyId
      type: object
    AnomalyAsAllowedRequest:
      properties:
        reason:
          type: string
      required:
        - reason
      type: object
    Confidence:
      properties:
        confidenceScore:
          format: int32
          type: integer
        start:
          format: int64
          type: integer
      type: object
    ConfidenceTimeSeries:
      properties:
        confidences:
          items:
            $ref: "#/components/schemas/Confidence"
          type: array
        userId:
          type: string
      type: object
    ErrorInfo:
      properties:
        errorMsg:
          type: string
        parameters:
          additionalProperties: true
          type: object
      required:
        - errorMsg
      type: object
    HttpGenericResponse:
      example:
        result: Success
      properties:
        result:
          type: string
      type: object
    IntegerEqualCondition:
      properties:
        equals:
          format: int64
          type: integer
      type: object
    PolicyScenario:
      properties:
        scenario:
          type: string
        subScenarios:
          description: a list of secondary scenario
          items:
            type: string
          type: array
      required:
        - scenario
        - subScenarios
      type: object
    PolicyScenariosResponse:
      example:
        - scenario: Potential Compromised Credential
          subScenarios:
            - Failed Logins
            - Rare Event
            - Strange Access
            - Shared Credential
        - scenario: Potential Insider Threat
          subScenarios:
            - Data movement
            - Data destruction
            - Sensitive data movement
            - DLP Violation
        - scenario: Potential Compromised Device
          subScenarios:
            - Malsite
            - Third Party
            - Malware
            - Ransomware
      items:
        $ref: "#/components/schemas/PolicyScenario"
      type: array
    StringEqualCondition:
      properties:
        equals:
          items:
            type: string
          type: array
      type: object
    UbaConfigsResponse:
      example:
        userConfidenceRatings:
          maxThreshold: 1000
          ratingRanges:
            - maxval: 350
              minval: 0
              rating: Poor
            - maxval: 650
              minval: 351
              rating: Moderate
            - maxval: 1000
              minval: 651
              rating: Good
        watchlistConfig:
          maxLengthOfWatchlistName: 128
          maxMembersInWatchlist: 300
          maxNumberWatchlistPerTenant: 100
      properties:
        userConfidenceRatings:
          $ref: "#/components/schemas/UserConfidenceRatings"
        watchlistConfig:
          $ref: "#/components/schemas/WatchlistConfig"
      type: object
    UbaContainsCondition:
      properties:
        contains:
          type: string
      type: object
    UbaEqualsCondition:
      properties:
        equals:
          type: string
      type: object
    UciThresholdConfig:
      properties:
        createdBy:
          type: string
        createdTime:
          format: int64
          type: integer
        enabled:
          type: boolean
        lastUpdatedBy:
          type: string
        lastUpdatedTime:
          format: int64
          type: integer
        threshold:
          format: int32
          type: integer
      type: object
    UciThresholdConfigReq:
      properties:
        enabled:
          type: boolean
        threshold:
          description: The value of this field must be in the range of (0, 1000)
          format: int32
          type: integer
      type: object
    UciThresholdUpdateResponse:
      properties:
        result:
          type: string
      type: object
    UserConfidenceRatingRange:
      properties:
        maxval:
          format: int32
          type: integer
        minval:
          format: int32
          type: integer
        rating:
          type: string
      type: object
    UserConfidenceRatings:
      properties:
        maxThreshold:
          format: int32
          type: integer
        ratingRanges:
          items:
            $ref: "#/components/schemas/UserConfidenceRatingRange"
          type: array
      type: object
    UserConfidenceScore:
      example:
        confidences: 500
        start: 1693267200000
        user: test@netskope.com
      properties:
        confidenceScore:
          description: Current confidence score
          format: int32
          type: integer
        isObfuscated:
          description:
            Flag to indicate whether the value in 'user' is a string after
            obfuscated or not
          type: boolean
        start:
          description: The latest day when the user did some activities
          format: int64
          type: integer
        user:
          type: string
      required:
        - user
        - start
        - confidenceScore
      type: object
    UserCurrentUciResponse:
      example:
        goodUserCount: 1
        moderateUserCount: 1
        poorUserCount: 1
        results:
          - confidences: 300
            start: 1693267200000
            user: test1@netskope.com
          - confidences: 600
            start: 1693267200000
            user: test2@netskope.com
          - confidences: 700
            isObfuscated: true
            start: 1693267200000
            user: "[obfuscated] ................user: 1"
        totalCount: 3
      properties:
        goodUserCount:
          format: int64
          type: integer
        moderateUserCount:
          format: int64
          type: integer
        poorUserCount:
          format: int64
          type: integer
        results:
          items:
            $ref: "#/components/schemas/UserConfidenceScore"
          type: array
        totalCount:
          format: int64
          type: integer
      required:
        - totalCount
        - results
      type: object
    UserKeyScenarioResponse:
      properties:
        scenario:
          example: Potential Compromised Credential
          type: string
        subScenario:
          example: Failed Logins
          type: string
      type: object
    UserRequest:
      properties:
        user:
          example: demo@netskope.com
          type: string
      required:
        - user
      type: object
    UserUciImpactRequest:
      properties:
        reason:
          type: string
        score:
          format: int32
          type: integer
        source:
          type: string
        timestamp:
          format: int64
          type: integer
        user:
          type: string
      required:
        - user
        - score
        - timestamp
        - source
        - reason
      type: object
    UserUciSearchRequest:
      example:
        ratingRank: moderate
        user:
          contains: demo
        usersActiveInLastDays: 14
        watchlist: watchlist-A
      properties:
        ratingRank:
          description:
            It must be one of ['Good', 'Moderate', 'Poor', 'All']. If it
            is set, the API will load confidence score for users whose UCIs are in
            this rank
          enum:
            - Good
            - Moderate
            - Poor
            - All
          type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UbaContainsCondition"
            - $ref: "#/components/schemas/UbaEqualsCondition"
        usersActiveInLastDays:
          description:
            The window range for search. It means to load all users who
            are active in recent days. The maximum is 90 days
          format: int32
          type: integer
        watchlist:
          description:
            Name of the watchlist. It is optional. If it is not set, the
            API will search all users' confidence score
          type: string
      required:
        - usersActiveInLastDays
      type: object
    UsersUciRequest:
      properties:
        capPerUser:
          description:
            It is an optional parameter. The default value is 7. Be notice
            the parameter with the size of users will affects the performance of the
            API
          format: int32
          type: integer
        fromTime:
          format: int64
          type: integer
        users:
          description:
            a list of users. The length of the list should not bigger than
            512
          items:
            type: string
          type: array
      required:
        - users
        - fromTime
      type: object
    UsersUciResponse:
      properties:
        usersUci:
          items:
            $ref: "#/components/schemas/ConfidenceTimeSeries"
          type: array
      type: object
    WatchlistConfig:
      properties:
        maxLengthOfWatchlistName:
          description: System configuration for maximum length of the watchlist name
          format: int32
          type: integer
        maxMembersInWatchlist:
          description: System configuration for maximum members of watchlist
          format: int32
          type: integer
        maxNumberWatchlistPerTenant:
          description: System configuration for maximum numbers of watchlist per tenant
          format: int32
          type: integer
      type: object
    WatchlistCreationRequest:
      example:
        name: watchlist-test
        uciAlertThreshold: 600
        users:
          - startTime: 1687884960000
            user: test1@netskope.com
          - startTime: 1687884960000
            user: test2@netskope.com
      properties:
        name:
          description:
            Name of watchlist. The length should not bigger than 128 and
            match the regex '[a-zA-Z0-9-#:/_ ]+'
          type: string
        uciAlertThreshold:
          description:
            The threshold for lower UCI alert. If the UCI of user in watchlist
            is lower than this defined value, a lower UCI alert will be sent
          format: int32
          type: integer
        users:
          description:
            a list of users. The length of the list should not bigger than
            300
          items:
            $ref: "#/components/schemas/WatchlistMember"
          type: array
      required:
        - name
        - users
      type: object
    WatchlistMember:
      example:
        startTime: 1687884960000
        user: test@netskope.com
      properties:
        startTime:
          description:
            The time when user is added into watchlist. It is the milliseconds
            since 1970
          format: int64
          type: integer
        user:
          description: user in watchlist
          type: string
      required:
        - user
      type: object
    WatchlistNames:
      example:
        userExcluded:
          - watchlist test3
          - watchlist test4
          - watchlist test5
        userIncluded:
          - watchlist test0
          - watchlist test1
          - watchlist test2
      properties:
        userExcluded:
          description:
            An array of watchlist which do not include the input user.
            The user can be added into them later
          items:
            type: string
          type: array
        userIncluded:
          description: An array of watchlist which include the input user
          items:
            type: string
          type: array
      type: object
    WatchlistPatchRequest:
      example:
        field: uciAlertThreshold
        op: modify
        value: 500
      properties:
        field:
          enum:
            - uciAlertThreshold
            - users
          type: string
        op:
          enum:
            - append
            - modify
            - remove
          type: string
        value:
          description:
            It must be set if the 'op' is 'modify' or 'append'. It should
            be int32 for 'uciAlertThreshold', and object WatchlistMember for 'users'
          oneOf:
            - $ref: "#/components/schemas/WatchlistMember"
            - format: int32
              type: integer
      required:
        - field
        - op
      type: object
    WatchlistResponse:
      example:
        createdTime: "2023-02-28T21:06:24Z"
        id: 0ec01edb50b30f91c30df9bc
        lastUpdatedTime: "2023-02-28T21:06:24Z"
        name: watchlist test
        uciAlertThreshold: 600
        users:
          - startTime: 1687884960000
            user: test1@netskope.com
          - startTime: 1687884960000
            user: test2@netskope.com
      properties:
        createdTime:
          format: date-time
          type: string
        id:
          description: Watchlist Id
          type: string
        lastUpdatedTime:
          format: date-time
          type: string
        name:
          description: Name of watchlist. The length should not bigger than 128
          type: string
        uciAlertThreshold:
          description:
            The threshold for lower UCI alert. If the UCI of user in watchlist
            is lower than this defined value, a lower UCI alert will be sent
          format: int32
          type: integer
        users:
          description:
            a list of users. The length of the list should not bigger than
            300. It will not be in the response if the scope is 'terse' in GET API
          items:
            $ref: "#/components/schemas/WatchlistMember"
          type: array
      required:
        - id
        - name
        - createdTime
        - lastUpdatedTime
      type: object
    WatchlistResponses:
      example:
        - createdTime: "2023-02-28T21:06:24Z"
          id: 0ec01edb50b30f91c30df9bc
          lastUpdatedTime: "2023-02-28T21:06:24Z"
          name: watchlist test
          uciAlertThreshold: 600
          users:
            - startTime: 1687884960000
              user: test1@netskope.com
            - startTime: 1687884960000
              user: test2@netskope.com
      items:
        $ref: "#/components/schemas/WatchlistResponse"
      type: array
    WatchlistUpdateRequest:
      example:
        name: test watchlist
        uciAlertThreshold: 600
        users:
          - startTime: 1687884960000
            user: test1@netskope.com
          - startTime: 1687884960000
            user: test2@netskope.com
      properties:
        name:
          description: watchlist name
          type: string
        uciAlertThreshold:
          description:
            The threshold for lower UCI alert. If it is not set in request,
            this field will be remove from the object which means there is no low
            UCI alert generated
          format: int32
          type: integer
        users:
          description: a list of users, no more than 300 users
          items:
            $ref: "#/components/schemas/WatchlistMember"
          type: array
      required:
        - users
        - name
      type: object
info:
  description:
    The UEBA's DataSvc application is inteaded to house various support
    services related to the function of the UEBA Anayltics engine.
  title: UbaDataSvc
  version: 1.0.0
openapi: 3.0.0
paths:
  /incidents/anomalies/getanomalies:
    post:
      description: Get a list of anomalies. It will return anomalies within 90 days.
      parameters:
        - description: activity for anomaly
          in: query
          name: activity
          required: true
          schema:
            enum:
              - ActivityForUciImpactAPI
            type: string
        - description:
            The zero-based offset of the first item in the list to retrieve
            (min 0)
          in: query
          name: offset
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
        - description: Max number of items to retrieve (min 1, max 10000).
          in: query
          name: limit
          required: false
          schema:
            default: 1000
            maximum: 10000
            minimum: 1
            type: integer
        - description:
            The list of object properties to be returned in the response.
            It is split by comma. AnomalyId will be always returned.
          in: query
          name: fields
          required: false
          schema:
            example: user,source,score
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnomaliesSearchFilters"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Anomalies"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Get a list of anomalies
      x-netskope-route-params:
        enableAuditLogging: false
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/anomalies/{id}:
    get:
      description: Get the anomaly by anomalyId
      parameters:
        - description: Anomaly Id
          in: path
          name: id
          required: true
          schema:
            example: 61b2e6a1364e11747c40fbd9
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Anomaly"
          description: successful request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Anomaly not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Get the anomaly by anomalyId
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/anomalies/{id}/allow:
    post:
      description:
        It is a generic API to mark anomaly as allowed. For UCI Impact,
        it will revert the impact ingestion.
      parameters:
        - description: Anomaly Id
          in: path
          name: id
          required: true
          schema:
            example: 61b2e6a1364e11747c40fbd9
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnomalyAsAllowedRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Anomaly"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Mark the anomaly as allowed by anomalyId
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/contents/policies/scenarios:
    get:
      description: Get all cyber scenarios from policies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyScenariosResponse"
          description: successful request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Get all cyber scenarios from policies
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      nsBeta: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/uba/configs:
    get:
      description: Get uba config items such as UCI range
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UbaConfigsResponse"
          description: successful request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Get uba config items
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      nsBeta: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/uba/getuci:
    post:
      description: Get a list of users confidence index
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsersUciRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersUciResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Get a list of users confidence index
      x-netskope-route-params:
        enableAuditLogging: false
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/uci/threshold:
    delete:
      description: Delete the configured uci threshold
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UciThresholdUpdateResponse"
          description: successful request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: internal error
      summary: Delete the configured uci threshold
    get:
      description: Get the uci threshold configuration of the tenant
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UciThresholdConfig"
          description: successful request
        "204":
          description: no content response
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: internal error
      summary: Retrieve the uci threshold configuration of the tenant
    post:
      description: Create a new uci threshold configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UciThresholdConfigReq"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UciThresholdUpdateResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: bad request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: internal error
      summary: Create a new uci threshold configuration
    put:
      description: Update configured uci threshold
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UciThresholdConfigReq"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UciThresholdUpdateResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: bad request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: internal error
      summary: Update configured uci threshold
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      nsBeta: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/user/getkeyscenario:
    post:
      description:
        Get key potential risk scenario for user if UCI of user is in moderate
        or poor range
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserKeyScenarioResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: user not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Get potential risk scenario for user
      x-netskope-route-params:
        enableAuditLogging: false
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      nsBeta: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/user/uciimpact:
    post:
      description: Trigger the uci compute process after receiving uci impact request
      externalDocs:
        description: considerations and recommendations for UCI Impact API
        url: https://docs.netskope.com/en/using-the-rest-api-v2-uci-impact-endpoints.html
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUciImpactRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Anomaly"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: duplicate alert for this user, source, reason and time
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: internal error
      summary: Ingest the uci impact
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/users/getactiveuci:
    post:
      parameters:
        - description:
            The zero-based offset of the first item in the list to retrieve
            (min 0)
          in: query
          name: offset
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
        - description: Max number of items to retrieve (min 1, max 10000).
          in: query
          name: limit
          required: false
          schema:
            default: 1000
            maximum: 10000
            minimum: 1
            type: integer
        - description:
            The field for sorting. It should be one of ['user', 'start',
            'confidenceScore']. The default value is 'confidenceScore'
          in: query
          name: sortby
          required: false
          schema:
            default: confidenceScore
            enum:
              - user
              - start
              - confidenceScore
            type: string
        - description:
            Sorting order. It should be one of ['asx', 'desc']. The default
            value is 'asc'
          in: query
          name: sortorder
          required: false
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActiveUserSearchRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveUserUciResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary:
        Search active user within recent two days. Either ratingRank or watchlist
        should be set in request.
      x-netskope-route-params:
        enableAuditLogging: false
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/users/getuci:
    post:
      parameters:
        - description:
            The statistics information about user rating rank will be returned
            if it is true
          in: query
          name: statistics
          required: false
          schema:
            default: true
            enum:
              - true
              - false
            type: boolean
        - description:
            The zero-based offset of the first item in the list to retrieve
            (min 0)
          in: query
          name: offset
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
        - description: Max number of items to retrieve (min 1, max 10000).
          in: query
          name: limit
          required: false
          schema:
            default: 1000
            maximum: 10000
            minimum: 1
            type: integer
        - description:
            The field for sorting. It should be one of ['user', 'start',
            'confidenceScore']. The default value is 'confidenceScore'
          in: query
          name: sortby
          required: false
          schema:
            default: confidenceScore
            enum:
              - user
              - start
              - confidenceScore
            type: string
        - description:
            Sorting order. It should be one of ['asx', 'desc']. The default
            value is 'asc'
          in: query
          name: sortorder
          required: false
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUciSearchRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCurrentUciResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Search the users' confidence score
      x-netskope-route-params:
        enableAuditLogging: false
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      nsBeta: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/watchlists:
    get:
      parameters:
        - description:
            The flag for whether to load the members in watchlist. 'terse'
            means to return the watchlist without the user list
          in: query
          name: scope
          required: false
          schema:
            default: verbose
            enum:
              - terse
              - verbose
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WatchlistResponses"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: List watchlist for tenant
    post:
      description: Create watchlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WatchlistCreationRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WatchlistResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Create watchlist
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/watchlists/getwatchlistsbyuser:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WatchlistNames"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary:
        Get the watchlist which include the user, and those which do not include
        the user
      x-netskope-route-params:
        enableAuditLogging: false
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      nsBeta: true
      serviceConfig: ubadatasvc
      version: 2
  /incidents/watchlists/{id}:
    delete:
      description: Delete watchlist by Id
      parameters:
        - description: Watchlist Id
          in: path
          name: id
          required: true
          schema:
            example: 0ec01edb50b30f91c30df9bc
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HttpGenericResponse"
          description: successful request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: watchlist not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Delete watchlist by Id
    get:
      description: Get watchlist by id
      parameters:
        - description: Watchlist Id
          in: path
          name: id
          required: true
          schema:
            example: 0ec01edb50b30f91c30df9bc
            type: string
        - description:
            The flag for whether to load the members in watchlist. 'terse'
            means to return the watchlist without the user list
          in: query
          name: scope
          required: false
          schema:
            default: verbose
            enum:
              - terse
              - verbose
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WatchlistResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: watchlist not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Get watchlist by id
    patch:
      description:
        Patch the specific property such as uciAlertThreshold, and users
        in watchlist. This API can be used to modify or delete uciThreshold, and to
        append/remove a single user from user list in watchlist.
      parameters:
        - description: Watchlist Id
          in: path
          name: id
          required: true
          schema:
            example: 0ec01edb50b30f91c30df9bc
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WatchlistPatchRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WatchlistResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: user not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Patch the specific property in watchlist
    put:
      description: Modify watchlist by id
      parameters:
        - description: Watchlist Id
          in: path
          name: id
          required: true
          schema:
            example: 0ec01edb50b30f91c30df9bc
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WatchlistUpdateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WatchlistResponse"
          description: successful request
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: forbidden request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: watchlist not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorInfo"
          description: Internal server error
      summary: Modify watchlist by id
    x-netskope-params:
      apiGroup: uba
      customerFacing: true
      serviceConfig: ubadatasvc
      version: 2
