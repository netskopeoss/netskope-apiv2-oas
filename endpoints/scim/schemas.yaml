components:
  schemas:
    Attribute:
      properties:
        description:
          type: string
        name:
          type: string
        required:
          type: boolean
        type:
          oneOf:
            - type: string
            - type: boolean
      type: object
    CustomSchema:
      properties:
        attributes:
          items:
            properties:
              caseExact:
                type: boolean
              description:
                example: Custom attribute for user.
                type: string
              multiValued:
                type: boolean
              mutability:
                example: readWrite
                type: string
              name:
                example: customAttribute
                type: string
              required:
                type: boolean
              returned:
                example: default
                type: string
              type:
                example: string
                type: string
              uniqueness:
                example: server
                type: string
            type: object
          type: array
        description:
          example: Custom schema for user attributes
          type: string
        id:
          example: urn:ietf:params:scim:schemas:extenstion:tenant:2.0:User
          type: string
        meta:
          properties:
            location:
              example: https://<tenant>-goskope.com/scim/v2/Schemas/urn:ietf:params:scim:schemas:extension:tenant:2.0:User
              type: string
            resourceType:
              example: Schema
              type: string
          type: object
        name:
          example: Custom Schema
          type: string
      type: object
    GroupSchema:
      properties:
        attributes:
          items:
            properties:
              caseExact:
                type: boolean
              description:
                example:
                  Unique identifier for the User typically used by the user
                  to directly authenticate to the service provider. Each User MUST
                  include a non-empty userName value.  This identifier MUST be unique
                  across the service provider's entire set of Users. REQUIRED.
                type: string
              multiValued:
                type: boolean
              mutability:
                example: readWrite
                type: string
              name:
                example: displayName
                type: string
              required:
                type: boolean
              returned:
                example: default
                type: string
              type:
                example: string
                type: string
              uniqueness:
                example: server
                type: string
            type: object
          type: array
        description:
          example: Group Schema
          type: string
        id:
          example: urn:ietf:params:scim:schemas:core:2.0:Group
          type: string
        meta:
          properties:
            location:
              example: https://<tenant>-goskope.com/scim/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:Group
              type: string
            resourceType:
              example: Schema
              type: string
          type: object
        name:
          example: Group
          type: string
      type: object
    Resource:
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/Attribute"
          type: array
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    Schemas:
      properties:
        Resources:
          items:
            allOf:
              - $ref: "#/components/schemas/UserSchema"
              - $ref: "#/components/schemas/UserExtensionSchema"
              - $ref: "#/components/schemas/CustomSchema"
              - $ref: "#/components/schemas/GroupSchema"
          type: array
        itemsPerPage:
          example: 3
          format: int32
          type: integer
        schemas:
          example:
            - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        startIndex:
          example: 1
          format: int32
          type: integer
        totalResults:
          example: 3
          format: int32
          type: integer
      type: object
    UserExtensionSchema:
      properties:
        attributes:
          items:
            properties:
              caseExact:
                type: boolean
              description:
                example: Employee Number
                type: string
              multiValued:
                type: boolean
              mutability:
                example: readWrite
                type: string
              name:
                example: employeeNumber
                type: string
              required:
                type: boolean
              returned:
                example: default
                type: string
              type:
                example: string
                type: string
              uniqueness:
                example: server
                type: string
            type: object
          type: array
        description:
          example: User Account
          type: string
        id:
          example: urn:ietf:params:scim:schemas:extension:enterprise:2.0:User
          type: string
        meta:
          properties:
            location:
              example: https://<tenant>-goskope.com/scim/v2/Schemas/urn:ietf:params:scim:schemas:extension:enterprise:2.0:User
              type: string
            resourceType:
              example: Schema
              type: string
          type: object
        name:
          example: User
          type: string
      type: object
    UserSchema:
      properties:
        attributes:
          items:
            properties:
              caseExact:
                type: boolean
              description:
                example:
                  Unique identifier for the User typically used by the user
                  to directly authenticate to the service provider. Each User MUST
                  include a non-empty userName value.  This identifier MUST be unique
                  across the service provider's entire set of Users. REQUIRED.
                type: string
              multiValued:
                type: boolean
              mutability:
                example: readWrite
                type: string
              name:
                example: userName
                type: string
              required:
                type: boolean
              returned:
                example: default
                type: string
              type:
                example: string
                type: string
              uniqueness:
                example: server
                type: string
            type: object
          type: array
        description:
          example: User Account
          type: string
        id:
          example: urn:ietf:params:scim:schemas:core:2.0:User
          type: string
        meta:
          properties:
            location:
              example: https://<tenant>-goskope.com/scim/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User
              type: string
            resourceType:
              example: Schema
              type: string
          type: object
        name:
          example: User
          type: string
      type: object
info:
  contact:
    email: eng-provisioner-dev-blr@netskope.com
    name: Provisioner
  description: API spec for Usermanager API service for Schemas
  title: UserManager API Service for schemas
  version: 2.0.0
openapi: 3.0.0
paths:
  /scim/Schemas:
    get:
      description:
        All schemas are returned in pages, with default page size being
        fixed.
      parameters:
        - description:
            The zero-based offset of the first item in the list to retrieve
            (min 0)
          in: query
          name: offset
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
        - description: Max number of items to retrieve (min 1, max 10).
          in: query
          name: limit
          required: false
          schema:
            default: 10
            maximum: 10
            minimum: 1
            type: integer
      responses:
        "200":
          content:
            application/scim+json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Schemas"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                properties:
                  description:
                    example: Invalid request
                    type: string
                  schemas:
                    description: schema of the resource
                    example:
                      - urn:ietf:params:scim:api:messages:2.0:Error
                    items:
                      type: string
                    type: array
                  status:
                    enum:
                      - "400"
                      - failed
                    example: "400"
                    type: string
                type: object
          description: "Failed "
        "501":
          content:
            application/json:
              schema:
                properties:
                  detail:
                    example: Internal server error.
                    type: string
                  schemas:
                    example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                    type: string
                  status:
                    enum:
                      - failed
                      - "501"
                    example: 501/failed
                    type: string
                type: object
          description: Internal error Failed
      summary: Get all schemas of a tenant with paging
      tags:
        - Schemas
    x-netskope-params:
      apiGroup: schemas
      customerFacing: true
      serviceConfig: nsscimserver
      version: 2
  /scim/Schemas/{id}:
    delete:
      description:
        Delete Schema for the tenant by schema id. Only one custom schema,
        urn:ietf:params:scim:schemas:extension:tenant:2.0:User,  is supported which
        can be modified using this API. The schema will be deleted only if the custom
        attributes are not in use.
      parameters:
        - description: SCIM Schema ID should be specified
          in: path
          name: id
          required: true
          schema:
            example: urn:ietf:params:scim:schemas:extension:tenant:2.0:User
            type: string
      responses:
        "204":
          description: Empty response, Successfully deleted the Schema.
        "400":
          content:
            application/json:
              schema:
                properties:
                  description:
                    example: Invalid request
                    type: string
                  schemas:
                    description: schema of the resource
                    example:
                      - urn:ietf:params:scim:api:messages:2.0:Error
                    items:
                      type: string
                    type: array
                  status:
                    enum:
                      - "400"
                      - failed
                    example: "400"
                    type: string
                type: object
          description: "Failed "
        "403":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: You cannot consume this service.
                    type: string
                type: object
          description: Not authorized to execte the specific API.
        "501":
          content:
            application/json:
              schema:
                properties:
                  detail:
                    example: Internal error
                    type: string
                  schemas:
                    example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                    type: string
                  status:
                    enum:
                      - failed
                      - "501"
                    example: 501/failed
                    type: string
                type: object
          description: Internal error Failed
      summary:
        Delete schema by ID. Only one custom schema, urn:ietf:params:scim:schemas:extension:tenant:2.0:User,  is
        supported which can be modified using this API.
      tags:
        - Schemas
    get:
      description: Get Schema for the tenant with a specific schema id
      parameters:
        - description: SCIM Schema ID should be specified
          in: path
          name: id
          required: true
          schema:
            example: urn:ietf:params:scim:schemas:extension:tenant:2.0:User
            type: string
      responses:
        "200":
          content:
            application/scim+json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/CustomSchema"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                properties:
                  description:
                    example: Invalid request
                    type: string
                  schemas:
                    description: schema of the resource
                    example:
                      - urn:ietf:params:scim:api:messages:2.0:Error
                    items:
                      type: string
                    type: array
                  status:
                    enum:
                      - "400"
                      - failed
                    example: "400"
                    type: string
                type: object
          description: "Failed "
        "501":
          content:
            application/json:
              schema:
                properties:
                  detail:
                    example: Internal server error.
                    type: string
                  schemas:
                    example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                    type: string
                  status:
                    enum:
                      - failed
                      - "501"
                    example: 501/failed
                    type: string
                type: object
          description: Internal error Failed
      summary: Get schema for {id}
      tags:
        - Schemas
    patch:
      description:
        Update existing Schema by ID. Only one custom schema, urn:ietf:params:scim:schemas:extension:tenant:2.0:User,  is
        supported which can be modified using this API.
      parameters:
        - description: ID of Schema to be updated
          in: path
          name: id
          required: true
          schema:
            example: urn:ietf:params:scim:schemas:extension:tenant:2.0:User
            type: string
      requestBody:
        content:
          application/scim+json;charset=utf-8:
            schema:
              description: attribute to be modified.
              properties:
                Operations:
                  items:
                    properties:
                      op:
                        enum:
                          - add
                          - remove
                          - replace
                        type: string
                      path:
                        example: ManagerEmail
                        type: string
                      value:
                        description: value either string or object
                        example:
                          value: updated manager email
                        oneOf:
                          - type: string
                          - type: object
                    type: object
                  type: array
                schemas:
                  description: schema of the resource
                  example:
                    - urn:ietf:params:scim:api:messages:2.0:PatchOp
                  items:
                    enum:
                      - urn:ietf:params:scim:api:messages:2.0:PatchOp
                    type: string
                  type: array
              type: object
        description: attributes to be modified.
      responses:
        "204":
          description: Empty response.
        "400":
          content:
            application/json:
              schema:
                properties:
                  description:
                    example:
                      Invalid request / Not a valid json format / Mandatory
                      fields are missing / Cannot update existing attribute. Attribute
                      is in Use
                    type: string
                  schemas:
                    description: schema of the resource
                    example:
                      - urn:ietf:params:scim:api:messages:2.0:Error
                    items:
                      type: string
                    type: array
                  status:
                    enum:
                      - "400"
                      - failed
                    example: "400"
                    type: string
                type: object
          description: "Failed "
        "403":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: You cannot consume this service.
                    type: string
                type: object
          description: Not authorized to execte the specific API.
        "501":
          content:
            application/json:
              schema:
                properties:
                  detail:
                    example: Internal error
                    type: string
                  schemas:
                    example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                    type: string
                  status:
                    enum:
                      - failed
                      - "501"
                    example: 501/failed
                    type: string
                type: object
          description: Internal error Failed
      summary:
        Update existing Schema by ID. Only one custom schema, urn:ietf:params:scim:schemas:extension:tenant:2.0:User,  is
        supported which can be modified using this API.
      tags:
        - Schemas
    put:
      description:
        Replace existing SCIM schema record for schema urn:ietf:params:scim:schemas:extension:tenant:2.0:User.
        Only one custom schema per tenant is supported
      parameters:
        - description: SCIM Schema ID should be specified
          in: path
          name: id
          required: true
          schema:
            example: urn:ietf:params:scim:schemas:extension:tenant:2.0:User
            type: string
      requestBody:
        content:
          application/scim+json;charset=utf-8:
            schema:
              example:
                attributes:
                  - caseExact: true
                    description: Country for the user
                    multiValued: false
                    mutability: readWrite
                    name: Country
                    required: false
                    returned: default
                    type: string
                    uniqueness: server
                description: Custom Attributes for User
                name: customAttribute
        description: Custom Attribute to update
      responses:
        "200":
          content:
            application/scim+json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/CustomSchema"
          description: Successfully updated the Schema.
        "400":
          content:
            application/json:
              schema:
                properties:
                  description:
                    example:
                      Invalid request / Not a valid json format / Mandatory
                      fields are missing / Cannot update existing attribute. Attribute
                      is in Use
                    type: string
                  schemas:
                    description: schema of the resource
                    example:
                      - urn:ietf:params:scim:api:messages:2.0:Error
                    items:
                      type: string
                    type: array
                  status:
                    enum:
                      - "400"
                      - failed
                    example: "400"
                    type: string
                type: object
          description: "Failed "
        "403":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: You cannot consume this service.
                    type: string
                type: object
          description: Not authorized to execte the specific API.
        "501":
          content:
            application/json:
              schema:
                properties:
                  detail:
                    example: Internal error.
                    type: string
                  schemas:
                    example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                    type: string
                  status:
                    enum:
                      - failed
                      - "501"
                    example: 501/failed
                    type: string
                type: object
          description: Internal error Failed
      summary: "Replace existing SCIM schema record for schema id: urn:ietf:params:scim:schemas:extension:tenant:2.0:User"
      tags:
        - Schemas
    x-netskope-params:
      apiGroup: schemas
      customerFacing: true
      serviceConfig: nsscimserver
      version: 2
tags:
  - description: APIs to retrieve schema data for a tenant
    name: Schemas
