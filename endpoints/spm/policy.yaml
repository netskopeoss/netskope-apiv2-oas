components:
  schemas:
    AppSuitesList:
      example:
        - description: Azure Active Directory
          instance_hierarchy_supported: true
          instance_label: Account
          is_saas: true
          region_supported: false
        - description: GitHub
          id: GitHub
          instance_hierarchy_supported: false
          instance_label: Account
          is_saas: true
          name: GitHub
          region_supported: false
      items:
        properties:
          description:
            type: string
          id:
            type: string
          inst_group_label:
            type: string
          inst_subgroup_label:
            type: string
          instance_hierarchy_supported:
            default: false
            type: boolean
          instance_label:
            default: Account
            description:
              Label for the instance in the current appsuite. For example,
              in AWS instance is called as an 'Account', where as in GCP it is 'Project'.
            type: string
          is_saas:
            default: true
            type: boolean
          name:
            type: string
          region_supported:
            default: false
            type: boolean
        type: object
      type: array
    CSSummary:
      properties:
        cs_id:
          type: string
        cs_name:
          type: string
        cs_type:
          enum:
            - predefined
            - custom
          type: string
        sections:
          properties:
            controls:
              items:
                properties:
                  control:
                    type: string
                  control_id:
                    type: string
                type: object
              type: array
            section:
              type: string
          type: object
      type: object
    CSSummaryList:
      properties:
        compliances:
          items:
            $ref: "#/components/schemas/CSSummary"
          type: array
        next_cursor:
          description: Get records from this cursor. Empty if there are no more resources.
          type: string
      type: object
    Category:
      example:
        description:
          A rule category which indicates whether a rule is mapped to a
          specific control of a compliance standard or not.
        name: Compliance Standard
        short_name: cs
      properties:
        description:
          type: string
        name:
          type: string
        short_name:
          type: string
      type: object
    CategoryList:
      items:
        $ref: "#/components/schemas/Category"
      type: array
    Email:
      properties:
        frequency:
          description: Frequency of notification. 0 means, immediate notification.
          type: integer
        from_email:
          items:
            type: string
          type: array
        notify_netskope_instance_owner:
          type: boolean
        notify_selected_users:
          items:
            type: string
          type: array
      type: object
    ErrorResponse:
      description: API error response
      properties:
        body:
          properties:
            errors:
              items:
                example:
                  - We encountered a backend error. Please try again.
                type: string
              type: array
          type: object
        status:
          example: 400
          type: integer
      type: object
    FilterOperator:
      enum:
        - equal
        - like
      type: string
    FilterOptionsResponse:
      properties:
        data:
          description: Array of filter values.
          items:
            properties:
              id:
                description: ID of the value.
                example: key
                type: string
              name:
                description: Name of the value.
                example: s3
                type: string
            type: object
          type: array
        next_cursor:
          description: Get records from this cursor. Empty if there are no more resources.
          type: string
      type: object
    FilterPolicyRequest:
      description: Policy filters.
      properties:
        filters:
          $ref: "#/components/schemas/PolicyFilters"
        limit:
          default: 50
          description: pagination pagesize.
          minimum: 0
          type: integer
        offset:
          default: 0
          description: pagination offset.
          type: integer
        sort:
          $ref: "#/components/schemas/Sort"
        with_count:
          description: If set, total count will be sent in the response.
          type: boolean
      type: object
    FilterResponse:
      items:
        properties:
          children:
            description: Child filters for this filter.
            example:
              - instance_subgroup
            items:
              type: string
            type: array
          display_name:
            type: string
          fetch_options_uri:
            description: URL to be used to fetch the filter values.
            example: policies/filters/getappsuite
            type: string
          key:
            description: Name of the filter
            example: appsuite
            type: string
          type:
            description: Type of filter
            enum:
              - SearchFilter
              - DropdownListFilter
              - MultiSelectFilter
              - MultiSelectTagFilter
              - DateTimeFilter
            example: MultiSelectFilter
            type: string
        type: object
      type: array
    FilterRuleRequest:
      properties:
        filters:
          $ref: "#/components/schemas/RuleFilters"
        limit:
          default: 50
          description: pagination pagesize.
          minimum: 0
          type: integer
        offset:
          default: 0
          description: pagination offset.
          type: integer
        sort:
          $ref: "#/components/schemas/Sort"
      type: object
    FilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
          type: string
        values:
          items:
            type: string
          type: array
      type: object
    Instance:
      properties:
        id:
          description: ID of the instance.
          type: string
        name:
          description: Name of the instance.
          type: string
      type: object
    MuteRequest:
      properties:
        action:
          enum:
            - mute
            - unmute
          type: string
        bulk_apply:
          default: false
          description:
            If set, then, mute/unmute action will be applied to all results
            matching results_filter, provided, number of matching rule-resource pair
            is within 5000.
          type: boolean
        mute_justification:
          type: string
        mute_until:
          description:
            epoch time when the result will be unmuted. 0 means, forever
            till unmuted.
          type: integer
        muted_by:
          type: string
        results_filter:
          $ref: "#/components/schemas/ResultFilters"
          description:
            "Mute/unmute all findings after applying following filter only
            if bulk_mute option is set.

            "
          exceptions:
            $ref: "#/components/schemas/Result"
            description: Exceptions will be excluded even if it matches filter criteria.
            items: null
            type: array
          filters: null
          timestamp:
            example: 1623364884
            type: integer
        selection:
          description: Mute/unmute all findings in this list based on type of action.
          items:
            $ref: "#/components/schemas/Result"
            properties: null
            type: object
          type: array
      type: object
    MuteResponse:
      properties:
        count:
          description: Number of entries that are scheduled for muting or unmuting.
          type: integer
      type: object
    MutedFilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
          type: string
        values:
          items:
            enum:
              - true
              - false
            type: boolean
          type: array
      type: object
    NGLSuggestionsList:
      example:
        parsed_rule:
          - token_string: AWS
            token_type: App suite
          - token_string: EC2Instance
            token_type: Resource Type
          - token_string: any
            token_type: Condition - hierarchical
        suggestions:
          - token_string: AccountName
            token_type: Condition - Attribute
          - token_string: CloudTail
            token_type: Condition - Attribute
      properties:
        parsed_rule:
          description:
            Token info for the currently parsed partial rule. This is used
            to determine color coding
          items:
            $ref: "#/components/schemas/NGLToken"
          type: array
        suggestions:
          description: Next set of possible tokens.
          items:
            $ref: "#/components/schemas/NGLToken"
          type: array
      type: object
    NGLToken:
      properties:
        token_string:
          description: Next token, such as ==, with attribute, exists, so on.
          type: string
        token_type:
          description: Type of the token. Condition - arithmetic, Condition - Hie
          type: string
      type: object
    NGLValidationOutput:
      example:
        - error_message:
            "no match found, expected: \"###\", \"as\", \"should-have\"\
            , \"should-not-have\" or [ \t\r\n]"
        - error_position:
            column_number: 20
            line_number: 2
            offset: 100
      items:
        properties:
          error_message:
            description: Error message if validation failed for this rule.
            type: string
          error_position:
            properties:
              column_number:
                description: Column number of the above row where parsing failed.
                type: integer
              line_number:
                description: Line number where parsing failed.
                type: integer
              offset:
                description: Number of character from beginning where parsing failed.
                type: integer
            type: object
        type: object
      type: array
    PendingConfig:
      properties:
        compliances:
          description: List of compliances saved but not applied.
          items:
            $ref: "#/components/schemas/PendingDiff"
          type: array
        policies:
          description: List of policies saved but not applied.
          items:
            $ref: "#/components/schemas/PendingDiff"
          type: array
        rules:
          description: List of rules saved but not applied.
          items:
            $ref: "#/components/schemas/PendingDiff"
          type: array
      type: object
    PendingDiff:
      example:
        changes:
          - diff_details: "[type: abc]"
            diff_type: added
            field_name: data/instance
          - diff_details: 1->2
            diff_type: changed
            field_name: data/version
        name: graceTest
        type: Edited
      properties:
        changes:
          items:
            properties:
              diff_details:
                type: string
              diff_type:
                enum:
                  - added
                  - deleted
                  - changed
                  - replaced
                type: string
              field_name:
                type: string
            type: object
          type: array
        last_changed_by:
          type: string
        name:
          type: string
        type:
          enum:
            - Created
            - Deleted
            - Edited
          type: string
      type: object
    Policies:
      properties:
        count:
          description: Total number of rules.
          type: integer
        data:
          items:
            $ref: "#/components/schemas/PolicyResponse"
          type: array
      type: object
    PoliciesSummaryList:
      properties:
        count:
          description: Count of total number of policies.
          type: integer
        policy_list:
          $ref: "#/components/schemas/PolicySummary"
      type: object
    PolicyBatch:
      description: Policy selection list.
      properties:
        action:
          enum:
            - disable
            - delete
            - revert
          type: string
        policy_ids:
          items:
            type: string
          type: array
      type: object
    PolicyBatchResponse:
      description: Policy selection list.
      properties:
        applied:
          description: List of policies where operation is successful.
          items:
            properties:
              policy_id:
                type: string
              policy_name:
                type: string
            type: object
          type: array
        failed:
          items:
            properties:
              policy_id:
                type: string
              policy_name:
                type: string
              reason:
                type: string
              status:
                type: integer
            type: object
          type: array
      type: object
    PolicyFilterOptionsRequest:
      properties:
        cursor:
          description: Cursor from which the filter values are to be returned.
          type: string
        filter_key:
          description:
            API will fetch all possible values used in any policy of this
            field.
          enum:
            - policy
            - app_suite
            - rule
            - instance
            - <Any rule-category short name. Refer - TODO Add link >
          type: string
        keyword:
          description: case-insensitive Keyword filter match for values.
          type: string
        limit:
          default: 50
          description: Limit of the filter values returned.
          type: integer
      type: object
    PolicyFilters:
      properties:
        <rule_cateogory_short_name>:
          $ref: "#/components/schemas/FilterValues"
          description: Filter policies based on a rule category name.
        appsuite:
          $ref: "#/components/schemas/FilterValues"
        instance:
          $ref: "#/components/schemas/FilterValues"
        policy:
          $ref: "#/components/schemas/FilterValues"
          description: Filter policies matching policy name.
        rule:
          $ref: "#/components/schemas/FilterValues"
      type: object
    PolicyRequest:
      example:
        appsuite: AzureAD
        description: policy100 description
        disabled_rule_ids:
          - RL-123456767
          - RL-723234567
        enabled: true,
        instance_allowlist:
          - id: acc-7777771000
            name: test-cspm
          - id: ou-815731449001
            name: test-team
          - id: org-815731449000
            name: test-org
        instance_blocklist: null
        modified_by: user1@abc.com
        name: policy-100
        regions:
          is_allow_list: true,
          region_list:
            - us-east-1
        rule_ids:
          - RL-123456767
          - RL-723234567
        rule_subcategory_ids:
          - cs1
          - cs2
      properties:
        appsuite:
          description: Name of the application suite for which the policy is created.
          type: string
        description:
          description: Description attached to the policy.
          type: string
        disabled_rule_ids:
          description:
            List of rules that will be excluded from the policy even though
            it is part of rule_subcategory_ids or rule_ids.
          items:
            description: Disabled rule id.
            type: string
          type: array
        email:
          $ref: "#/components/schemas/Email"
        enabled:
          description: Status of the policy, whether it is enabled or disabled.
          type: boolean
        instance_allowlist:
          description:
            Policy will be applicable to resources belonging to these instances.
            Empty means All.
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        instance_blocklist:
          description:
            Policy will not be applicable to resources belonging to these
            instances.
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        instance_group_allowlist:
          description:
            Policy will be applicable to resources belonging to these instance
            groups. Empty means All.
          items:
            type: string
          type: array
        instance_group_blocklist:
          description:
            Policy will not be applicable to resources belonging to these
            instance groups.
          items:
            type: string
          type: array
        instance_subgroup_allowlist:
          description:
            Policy will be applicable to resources belonging to these instance
            subgroups. Empty means All.
          items:
            type: string
          type: array
        instance_subgroup_blocklist:
          description:
            Policy will not be applicable to resources belonging to these
            instance subgroups.
          items:
            type: string
          type: array
        modified_by:
          type: string
        name:
          description: Name of the policy.
          type: string
        regions:
          properties:
            is_include_list:
              description: Whether region_list is an include list or an exclude list.
              type: boolean
            region_list:
              items:
                $ref: "#/components/schemas/Region"
              type: array
          type: object
        rule_ids:
          items:
            description: Rule id.
            type: string
          type: array
        rule_subcategory_ids:
          description: Sub-category ids for filtering rules for a policy.
          items:
            description: Rule sub-category ID.
            type: string
          type: array
      type: object
    PolicyResponse:
      example:
        appsuite: AzureAD
        cs_list:
          - cs_id: cs1
          - cs_id: cs2
        delete_marked: false
        description: policy100 description
        disabled_rule_list:
          - rule_id: RL-123456767
          - rule_id: RL-723234567
        enabled: true,
        instance_allowlist:
          - id: acc-7777771000
            name: test-cspm
          - id: ou-815731449001
            name: test-team
          - id: org-815731449000
            name: test-org
        instance_blocklist: null
        modified_by: user1@abc.com
        modified_ts: 1234556
        name: policy-100
        regions:
          is_allow_list: true,
          region_list":
            - us-east-1
        rule_list:
          - rule_id: RL-123456767
          - rule_id: RL-723234567
          - rule_id: RL-546776556
          - rule_id: RL-456534345
          - rule_id: RL-787654443
      properties:
        applied:
          description: Indicates whether the policy is in applied state.
          type: boolean
        appsuite:
          description: Name of the application suite for which the policy is created.
          type: string
        delete_marked:
          description: Indicates whether the policy is marked for deletion.
          type: boolean
        description:
          description: Description attached to the policy.
          type: string
        disabled_rule_list:
          description: List of rules that got disabled.
          items:
            $ref: "#/components/schemas/RuleList"
          type: array
        email:
          $ref: "#/components/schemas/Email"
        enabled:
          description: Status of the policy, whether it is enabled or disabled.
          type: boolean
        id:
          description: ID of the policy. It will be zero during post operation.
          type: string
        instance_allowlist:
          description:
            Policy will be applicable to resources belonging to these instances.
            Empty means All.
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        instance_blocklist:
          description:
            Policy will not be applicable to resources belonging to these
            instances.
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        instance_group_allowlist:
          description:
            Policy will be applicable to resources belonging to these instance
            groups. Empty means All.
          items:
            type: string
          type: array
        instance_group_blocklist:
          description:
            Policy will not be applicable to resources belonging to these
            instance groups.
          items:
            type: string
          type: array
        instance_subgroup_allowlist:
          description:
            Policy will be applicable to resources belonging to these instance
            subgroups. Empty means All.
          items:
            type: string
          type: array
        instance_subgroup_blocklist:
          description:
            Policy will not be applicable to resources belonging to these
            instance subgroups.
          items:
            type: string
          type: array
        modified_by:
          type: string
        modified_ts:
          description: epoch time when the policy was modified last time.
          type: integer
        name:
          description: Name of the policy.
          type: string
        regions:
          properties:
            is_include_list:
              description: Whether region_list is an include list or an exclude list.
              type: boolean
            region_list:
              items:
                $ref: "#/components/schemas/Region"
              type: array
          type: object
        rule_list:
          items:
            $ref: "#/components/schemas/RuleList"
          type: array
        rule_subcategories_list:
          items:
            $ref: "#/components/schemas/SubCategory"
          type: array
      type: object
    PolicySummary:
      properties:
        id:
          description: ID of the policy. It will be zero during post operation.
          type: string
        name:
          description: Name of the policy.
          type: string
      type: object
    Region:
      description: Name of the region.
      type: string
    Result:
      properties:
        app_suite:
          type: string
        instance_group:
          type: string
        instance_id:
          type: string
        instance_subgroup:
          type: string
        netskope_instance_name:
          type: string
        region_id:
          type: string
        resource_id:
          type: string
        resource_type:
          type: string
        rule_id:
          type: string
      type: object
    ResultFilters:
      properties:
        app:
          $ref: "#/components/schemas/FilterValues"
        app_category:
          $ref: "#/components/schemas/FilterValues"
        app_suite:
          $ref: "#/components/schemas/FilterValues"
        compliance_standards:
          $ref: "#/components/schemas/FilterValues"
        instance_id:
          $ref: "#/components/schemas/FilterValues"
        instance_name:
          $ref: "#/components/schemas/FilterValues"
        muted:
          $ref: "#/components/schemas/MutedFilterValues"
        netskope_instance_name:
          $ref: "#/components/schemas/FilterValues"
        policies:
          $ref: "#/components/schemas/FilterValues"
        region_id:
          $ref: "#/components/schemas/FilterValues"
        region_name:
          $ref: "#/components/schemas/FilterValues"
        resource_group:
          $ref: "#/components/schemas/FilterValues"
        resource_id:
          $ref: "#/components/schemas/FilterValues"
        resource_name:
          $ref: "#/components/schemas/FilterValues"
        resource_type:
          $ref: "#/components/schemas/FilterValues"
        rule_name:
          $ref: "#/components/schemas/FilterValues"
        severity:
          $ref: "#/components/schemas/SeverityFilterValues"
        status:
          $ref: "#/components/schemas/StatusFilterValues"
        tags:
          $ref: "#/components/schemas/FilterValues"
      type: object
    RuleBatch:
      description: Policy selection list.
      properties:
        action:
          enum:
            - delete
            - revert
          type: string
        rule_ids:
          items:
            type: string
          type: array
      type: object
    RuleBatchResponse:
      description: Policy selection list.
      properties:
        applied:
          description: List of rules where operation is successful.
          items:
            properties:
              rule_id:
                type: string
              rule_name:
                type: string
            type: object
          type: array
        failed:
          items:
            properties:
              reason:
                type: string
              rule_id:
                type: string
              rule_name:
                type: string
              status:
                type: integer
            type: object
          type: array
      type: object
    RuleFilters:
      properties:
        <rule_cateogory_short_name>:
          $ref: "#/components/schemas/FilterValues"
          description:
            "Filter rules based on a rule category name. For possible values
            please refer <TODO: Add the link from docs.netskope.com>."
        appsuite:
          $ref: "#/components/schemas/FilterValues"
          description: Filter rules based on its appsuite.
        policy:
          $ref: "#/components/schemas/FilterValues"
          description:
            Filter rules based on whether they are attached to one of these
            policies.
        resource_type:
          $ref: "#/components/schemas/FilterValues"
          description: Filter rules based on the resource types used in the NGL definition.
        rule:
          $ref: "#/components/schemas/FilterValues"
          description: Filter rules matching rule name.
        severity:
          $ref: "#/components/schemas/SeverityFilterValues"
          description: Filter rules based on severity.
        type:
          $ref: "#/components/schemas/RuleTypeFilterValues"
          description: Filter rules based on its type.
        uncategorized:
          $ref: "#/components/schemas/YesNoFilterValues"
          description: Filter rules which are not categorized
      type: object
    RuleList:
      items:
        properties:
          rule_id:
            type: string
          rule_name:
            type: string
        type: object
      type: array
    RuleNGL:
      properties:
        rule:
          type: string
      type: object
    RuleRequest:
      properties:
        appsuite:
          description: Name of the application suite.
          type: string
        auto_remediable:
          description: Indicates whether rule violations are auto-remediable or not.
          type: boolean
        description:
          description: Description of the rule.
          type: string
        force_save:
          description:
            If force_save is set, then, rule will be saved even if it is
            invalid.
          type: boolean
        name:
          description: Name of the rule.
          type: string
        ngl_rule:
          description: Rule written in NGL.
          type: string
        remediation_steps:
          description: Manual remediation steps for custom rule.
          type: string
        rule_type:
          enum:
            - predefined
            - custom
          type: string
        severity:
          description: Severity of the rule.
          enum:
            - Critical
            - High
            - Medium
            - Low
          type: string
        subcategory_ids:
          description: Subcategories that are mapped to this rule.
          items:
            type: string
          type: array
      type: object
    RuleResponse:
      properties:
        applied:
          description: This indicates, whether this is applied view or not.
          type: boolean
        appsuite:
          description: Name of the application suite.
          type: string
        auto_remediable:
          description: Indicates whether rule violations are auto-remediable or not.
          type: boolean
        delete_marked:
          description:
            This indicates, rule is marked for deletion. This will get
            deleted in next apply operation.
          type: boolean
        description:
          description: Description of the rule.
          type: string
        id:
          description: ID of the rule.
          type: string
        name:
          description: Name of the rule.
          type: string
        ngl_rule:
          description: Rule written in NGL.
          type: string
        policies:
          items:
            properties:
              id:
                type: string
              name:
                type: string
            type: object
          type: array
        remediation_steps:
          description: Manual remediation steps for custom rule.
          type: string
        resource_type:
          description: Primary resource type used in the NGL.
          type: string
        rule_type:
          enum:
            - Predefined
            - Custom
            - Template
          type: string
        sec_resource_type:
          description: Secondary resource types used in the NGL.
          items:
            type: string
          type: array
        severity:
          description: Severity of the rule.
          enum:
            - Critical
            - High
            - Medium
            - Low
          type: string
        subcateogry_mapping:
          description: Subcategories that are attached to the rule.
          items:
            $ref: "#/components/schemas/SubCategory"
          type: array
        valid:
          description: This indicates, whether ngl rule is valid or not.
          type: boolean
        version:
          description: Version of the rule.
          type: integer
      type: object
    RuleSummary:
      properties:
        appsuite:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        ngl:
          type: string
        subcategory_list:
          items:
            $ref: "#/components/schemas/SubCategory"
          type: array
        type:
          enum:
            - Predefined
            - Custom
          type: string
      type: object
    RuleTypeFilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
        values:
          items:
            enum:
              - Predefined
              - Custom
              - Template
            type: string
          type: array
      type: object
    Rules:
      properties:
        count:
          description: Total number of rules.
          type: integer
        data:
          items:
            $ref: "#/components/schemas/RuleResponse"
          type: array
      type: object
    RulesFilterOptionsRequest:
      properties:
        cursor:
          description: Cursor from which the filter values are to be returned.
          type: string
        filter_key:
          description: key field for filter request.
          enum:
            - rule
            - app_suite
            - resource_type
            - policy
            - <Any rule-category short name. Refer - TODO Add link >
          type: string
        keyword:
          description: case-insensitive Keyword filter match for values.
          type: string
        limit:
          default: 50
          description: Limit of the filter values returned.
          type: integer
      type: object
    RulesSummaryList:
      properties:
        next_cursor:
          description: Get records from this cursor. Empty if there are no more resources.
          type: string
        rules:
          items:
            $ref: "#/components/schemas/RuleSummary"
          type: array
      type: object
    SeverityFilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
          type: string
        values:
          items:
            enum:
              - Critical
              - High
              - Medium
              - Low
            type: string
          type: array
      type: object
    Sort:
      items:
        properties:
          column:
            type: string
          sort_order:
            enum:
              - asc
              - desc
            type: string
        required:
          - properties
          - sort_order
        type: object
      type: array
    Status:
      enum:
        - Failed
        - Passed
        - Unknown
      type: string
    StatusFilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
          type: string
        values:
          items:
            $ref: "#/components/schemas/Status"
          type: array
      type: object
    SubCategory:
      example:
        appsuites:
          - AzureAD
          - Microsoft365
        category: Compliance Standard
        description: CIS standard for Microsoft 365 apps
        id: CS-1122322
        name: CIS-MICROSOFT365-1.2.0
        subcategories:
          - category: Compliance Standard
            description: ""
            name: section
            subcategories:
              - description:
                  Ensure multi-factor authentication is enabled for all users
                  in administrative roles
                name: control
                value: "1.1"
              - category: Compliance Standard
                description:
                  Ensure multi-factor authentication is enabled for all users
                  in all roles
                name: control
                value: "1.2"
            value: "1"
      properties:
        appsuites:
          description:
            List of app-suites for which this sub-category is applicable.
            empty list indicates that this is applicable to all.
          items:
            type: string
          type: array
        category:
          description: Name of the category.
          type: string
        description:
          description: Description of the subcategory.
          type: string
        id:
          description: A unique identifier which corresponds to the sub-category.
          type: string
        name:
          description: Name of the subcategory.
          type: string
        subcategories:
          description: This lists further subcategories under this subcategory.
          items:
            $ref: "#/components/schemas/SubCategory"
          type: array
      type: object
    SubCategoryList:
      items:
        $ref: "#/components/schemas/SubCategory"
      type: array
    SubCategoryRulesRequest:
      description:
        Build a consolidate List all the rules matching any rule-subcategories
        or rule-ids provided in the request.
      properties:
        app_suites:
          description: list of app-suites from which to pick up rules.
          items:
            type: string
          type: array
        disabled_rule_ids:
          description: List of rules to be marked disabled in the consolidated list.
          items:
            type: string
          type: array
        keyword:
          description:
            Return all rules having either rule name or compliance name
            matching keyword.
          type: string
        rule_ids:
          description:
            List of rules to be included in addition to rules mapped to
            subcategories.
          items:
            type: string
          type: array
        sort:
          $ref: "#/components/schemas/Sort"
        subcategory_ids:
          description:
            List of sub-category ids from which to select the rules. Any
            rule matching the given sub-category will be selected.
          items:
            type: string
          type: array
      type: object
    SubCategoryRulesResponse:
      properties:
        rules:
          items:
            properties:
              auto_remediate:
                type: boolean
              description:
                type: string
              enabled:
                type: boolean
              id:
                type: string
              name:
                type: string
              subcategory_list:
                items:
                  $ref: "#/components/schemas/SubCategory"
                type: array
            type: object
          type: array
      type: object
    YesNoFilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
        values:
          items:
            enum:
              - "Yes"
              - "No"
            type: string
          type: array
      type: object
info:
  description:
    "Policy API service provides the API endpoint  for CRUD operations
    on policy, rules and compliances.

    "
  title: SPM Policy API service
  version: 1.0.0
openapi: 3.0.3
paths:
  /spm/policies:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyBatch"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyBatchResponse"
          description: Success
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyBatchResponse"
          description: Partial success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Delete multiple policies
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary:
        Create a policy, which associates compliances and rules with tenant
        instances and regions.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyBatch"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyBatchResponse"
          description: Success
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyBatchResponse"
          description: Partial success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Apply batch operation on multiple policies.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/policies/apply:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PendingConfig"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the changes that are pending to be applied.
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                note:
                  description: Apply note.
                  type: string
              type: object
        required: true
      responses:
        "200":
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Apply changes made to the policy, rules and compliance mappings.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/policies/apply/count:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the count of pending changes be applied.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/policies/appsuites:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppSuitesList"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the list of app-suites configured for the tenant.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/policies/filters:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterResponse"
          description: Success response
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch all the filters supported for policies.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/policies/filters/getvalues:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyFilterOptionsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterOptionsResponse"
          description: Success response
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch all values of given filter_key referred in any policy.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/policies/getpolicies:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FilterPolicyRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policies"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get a list of SPM policies based on filter values.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/policies/list:
    get:
      parameters:
        - allowEmptyValue: false
          description: The application suite for which to fetch the policies.
          in: query
          name: app_suite
          schema:
            type: string
        - description: View presented can be latest or applied.
          in: query
          name: view
          required: false
          schema:
            default: applied
            enum:
              - latest
              - applied
            type: string
        - allowEmptyValue: false
          description: Netskope instance name to fetch the policies
          in: query
          name: netskope_instance_name
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoliciesSummaryList"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the list of SPM policies with minimal details.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/policies/mutesettings:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MuteRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MuteResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Mute setting for the given list of rule - resource pair.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/policies/{policy_id}:
    delete:
      parameters:
        - in: path
          name: policy_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Delete a policy
    get:
      parameters:
        - in: path
          name: policy_id
          required: true
          schema:
            type: string
        - description: View presented can be latest or applied
          in: query
          name: view
          required: false
          schema:
            default: applied
            enum:
              - latest
              - applied
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the specified policy details
    put:
      parameters:
        - in: path
          name: policy_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Update the given policy
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleBatch"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleBatchResponse"
          description: Success
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleBatchResponse"
          description: Partial success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Delete multiple rules.
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Create a rule.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleBatch"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleBatchResponse"
          description: Success
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleBatchResponse"
          description: Partial success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Apply specified action on multiple rules.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/categories:
    get:
      parameters:
        - description:
            The number of items to skip before starting to collect the result
            set.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
        - description: The number of items to return.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            maximum: 100
            minimum: 1
            type: integer
        - description: Sort by field.
          in: query
          name: sortby
          required: false
          schema:
            type: string
        - description: Sorting order.
          in: query
          name: sortorder
          required: false
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryList"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get a list of rule categories.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/categories/{shortname}:
    get:
      parameters:
        - description:
            Short name of the category. For example, cs for Compliance Standard.
            mitre For Mitre Attack. GET /rule/categories give the short name of each
            category.
          in: path
          name: shortname
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the details of the given rule category.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/categories/{shortname}/subcategories:
    get:
      parameters:
        - description:
            Short name of the category. For example, cs for Compliance Standard.
            mitre For Mitre Attack. GET /rule/categories give the short name of each
            category.
          in: path
          name: shortname
          required: true
          schema:
            type: string
        - description: The application suite for which to fetch sub-categories.
          in: query
          name: appsuite
          schema:
            type: string
        - description: The search name to be matched during fetching sub-categories.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description:
            The number of items to skip before starting to collect the result
            set.
          in: query
          name: offset
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
        - description: The number of items to return.
          in: query
          name: limit
          required: false
          schema:
            default: 20
            maximum: 100
            minimum: 1
            type: integer
        - description: Sort by field.
          in: query
          name: sortby
          required: false
          schema:
            type: string
        - description: Sorting order.
          in: query
          name: sortorder
          required: false
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubCategoryList"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get a list of sub-categories under the given category.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/categories/{shortname}/subcategories/{id}:
    get:
      parameters:
        - description:
            Short name of the category. For example, cs for Compliance Standard.
            mitre For Mitre Attack. GET /rule/categories give the short name of each
            category.
          in: path
          name: shortname
          required: true
          schema:
            type: string
        - description: Unique identifier of the sub-category.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubCategory"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get a specific sub-category under the given category.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/cs/list:
    get:
      parameters:
        - description: The application suite for which to fetch compliances.
          in: query
          name: appsuite
          schema:
            type: string
        - description: The search name to be matched during fetching compliances.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: Cursor from which the next set of values are to be returned.
          in: query
          name: cursor
          required: false
          schema:
            type: string
        - description:
            The number of items to return. If set to -1, will return all
            values
          in: query
          name: limit
          required: false
          schema:
            default: 100
            maximum: 1000
            type: integer
        - description: View presented can be latest or applied
          in: query
          name: view
          required: false
          schema:
            default: applied
            enum:
              - latest
              - applied
            type: string
        - description: The controls to be listed in response or not.
          in: query
          name: withcontrols
          required: false
          schema:
            default: false
            type: boolean
        - description: Sorting order.
          in: query
          name: sortorder
          required: false
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CSSummaryList"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get a list of compliance-standards with minimal details.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/filters:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterResponse"
          description: Success response
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch all the filters supported for rules.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/filters/getvalues:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RulesFilterOptionsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterOptionsResponse"
          description: Success response
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch all values of given filter_key referred in any rule.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/getrules:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FilterRuleRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rules"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get a list of SPM rules based on filters.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/getrulesbysubcategories:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubCategoryRulesRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubCategoryRulesResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the consolidated list of rules from the list of sub-categories.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/list:
    get:
      parameters:
        - description: The application suite for which to fetch rules.
          in: query
          name: appsuite
          schema:
            type: string
        - description: The search name to be matched during fetching rules.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: Cursor from which the next set of values are to be returned.
          in: query
          name: cursor
          required: false
          schema:
            type: string
        - description:
            The number of items to return. If set to -1, will return all
            values
          in: query
          name: limit
          required: false
          schema:
            default: 100
            maximum: 1000
            type: integer
        - description: View presented can be latest or applied
          in: query
          name: view
          required: false
          schema:
            default: applied
            enum:
              - latest
              - applied
            type: string
        - description: Sorting order.
          in: query
          name: sortorder
          required: false
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - description: Toggle to include template rules in the response.
          in: query
          name: include_templates
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RulesSummaryList"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get a list of rules with minimal details.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/ngl/suggestions:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleNGL"
        description: The partially crafted rule string.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NGLSuggestionsList"
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Returns set of possible tokens for a artially crafted rule.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/ngl/validate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleNGL"
        description: The rule string to be validated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NGLValidationOutput"
          description: OK
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Validate the NGL syntax.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/rules/{rule_id}:
    delete:
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Delete a rule
    get:
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            type: string
        - description: View presented can be latest or applied
          in: query
          name: view
          required: false
          schema:
            default: applied
            enum:
              - latest
              - applied
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the specified rule details
    put:
      parameters:
        - in: path
          name: rule_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Create a rule.
    x-netskope-params:
      apiGroup: policy
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
servers:
  - url: https://spm-<tenant>-<app>.netskope.com/v1/spm
