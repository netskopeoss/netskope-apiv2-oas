components:
  schemas:
    CSVHeader:
      properties:
        display_name:
          type: string
        id:
          enum:
            - app
            - app_category
            - app_suite
            - current_rule_version
            - error_msg
            - instance_id
            - instance_name
            - rules_category
            - last_scanned
            - muted
            - policies
            - region_id
            - region_name
            - resource_id
            - resource_name
            - resource_type
            - rule_id
            - rule_name
            - severity
            - status
            - netskope_instance_name
          example: app
          type: string
      type: object
    ComplianceStandard:
      properties:
        control:
          example: "1"
          type: string
        description:
          description: Compliance Control Description
          example: Data-at-rest is protected
          type: string
        section:
          description: Compliance Section Name
          example: PR.DS
          type: string
        standard:
          description: Compliance Standard Name
          example: NIST-CSF-1.1
          type: string
      required:
        - standard
        - control
        - section
        - description
      type: object
    ErrorResponse:
      description: API error response
      properties:
        body:
          properties:
            errors:
              items:
                example:
                  - We encountered a backend error. Please try again.
                type: string
              type: array
          type: object
        status:
          example: 400
          type: integer
      type: object
    ExportResultsRequestBody:
      properties:
        csv_headers:
          items:
            $ref: "#/components/schemas/CSVHeader"
          type: array
        export_name:
          description: CSV file name
          example: Findings report
          type: string
        filters:
          $ref: "#/components/schemas/Filters"
        row_count:
          description: number of records in the CSV file
          example: 1000
          maximum: 500000
          type: integer
        sort:
          $ref: "#/components/schemas/Sort"
        timestamp:
          description: Epoch denoting the time until when the data is to be exported
          example: 1697004746
          type: integer
      required:
        - timestamp
        - row_count
        - export_name
        - csv_headers
        - sort
      type: object
    FailedResultsByASResponse:
      properties:
        as_of_date_stats:
          properties:
            failed_results_by_app_suites:
              items:
                properties:
                  app_suite:
                    description: Name of application suite
                    type: string
                  by_severity:
                    $ref: "#/components/schemas/FailedResultsBySeverity"
                  total_failed_results:
                    description:
                      Total number of failed results for the application
                      suite
                    type: integer
                type: object
              type: array
          type: object
      required:
        - as_of_date_stats
      type: object
    FailedResultsByCS:
      properties:
        as_of_date_stats:
          properties:
            failed_results_by_compliance_standards:
              items:
                properties:
                  by_severity:
                    $ref: "#/components/schemas/FailedResultsBySeverity"
                  cs_name:
                    description: Name of compliance standard
                    type: string
                  total_failed_results:
                    description:
                      Total number of failed results for the given compliance
                      standard
                    type: integer
                type: object
              type: array
          type: object
      required:
        - as_of_date_stats
      type: object
    FailedResultsBySeverity:
      description: Categorization of failed results by severity
      properties:
        critical:
          description: Number of critical severity failed results
          type: integer
        high:
          description: Number of high severity failed results
          type: integer
        low:
          description: Number of Low severity failed results
          type: integer
        medium:
          description: Number of medium severity failed results
          type: integer
      type: object
    FailedResultsSummaryResponse:
      properties:
        as_of_date_stats:
          properties:
            failed_findings_by_severity:
              $ref: "#/components/schemas/FailedResultsBySeverity"
            total_failed_results:
              description: Total number of failed findings
              type: integer
            total_passed_results:
              description: Total number of passed findings
              type: integer
            total_results:
              description: Total number of findings
              type: integer
          type: object
        historic_stats:
          items:
            properties:
              failed_results_by_severity:
                $ref: "#/components/schemas/FailedResultsBySeverity"
              timestamp:
                description: Date and time value for the stat
                type: integer
              total_failed_results:
                description:
                  Number of failed results at the given value of date and
                  time
                type: integer
            type: object
          type: array
        trend:
          $ref: "#/components/schemas/TrendResponse"
      required:
        - as_of_date_stats
        - historic_stats
        - trend
      type: object
    Field:
      properties:
        display_name:
          type: string
        id:
          type: string
        sortable:
          type: boolean
        type:
          enum:
            - string
            - epoch
            - string_array
          type: string
      required:
        - id
        - type
      type: object
    FilterMeta:
      properties:
        children:
          items:
            type: string
          type: array
        display_name:
          type: string
        fetch_options_uri:
          type: string
        key:
          type: string
        type:
          enum:
            - MultiSelectFilter， SearchFilter， DropdownListFilter
          type: string
      type: object
    FilterOperator:
      enum:
        - equal
        - like
      type: string
    FilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
        values:
          items:
            type: string
          type: array
      type: object
    Filters:
      properties:
        app:
          $ref: "#/components/schemas/FilterValues"
        app_category:
          $ref: "#/components/schemas/FilterValues"
        app_suite:
          $ref: "#/components/schemas/FilterValues"
        compliance_standards:
          $ref: "#/components/schemas/FilterValues"
        instance_id:
          $ref: "#/components/schemas/FilterValues"
        instance_name:
          $ref: "#/components/schemas/FilterValues"
        muted:
          $ref: "#/components/schemas/MutedFilterValues"
        netskope_instance_name:
          $ref: "#/components/schemas/FilterValues"
        policies:
          $ref: "#/components/schemas/FilterValues"
        region_id:
          $ref: "#/components/schemas/FilterValues"
        region_name:
          $ref: "#/components/schemas/FilterValues"
        resource_id:
          $ref: "#/components/schemas/FilterValues"
        resource_name:
          $ref: "#/components/schemas/FilterValues"
        resource_type:
          $ref: "#/components/schemas/FilterValues"
        rule_name:
          $ref: "#/components/schemas/FilterValues"
        severity:
          $ref: "#/components/schemas/SeverityFilterValues"
        status:
          $ref: "#/components/schemas/StatusFilterValues"
        tags:
          $ref: "#/components/schemas/FilterValues"
      type: object
    GetResourcesResultsRequestBody:
      properties:
        fields:
          description:
            required fields in the JSON response, if empty, all fields
            are returned.
          items:
            type: string
          type: array
        filters:
          $ref: "#/components/schemas/Filters"
        limit:
          default: 25
          type: integer
        offset:
          default: 0
          type: integer
        sort:
          $ref: "#/components/schemas/Sort"
        timestamp:
          example: 1623364884
          type: integer
      required:
        - timestamp
      type: object
    GetResourcesResultsResponse:
      items:
        $ref: "#/components/schemas/GetResourcesResultsResponseItem"
      type: array
    GetResourcesResultsResponseItem:
      properties:
        app:
          description: AzureAD, Exchange etc.
          type: string
        app_category:
          description: App category such as IAM, CRM etc.
          type: string
        app_suite:
          description: SaaS provider such as Microsoft365, Salesforce, etc.
          type: string
        failed_muted_rules:
          description: The number of failed and muted rules for this resource.
          type: integer
        failed_rules:
          description: The number of failed rules for this resource.
          type: integer
        instance_id:
          description: Instance ID
          example: e3813397-1fff-46b0-a59f-5c2130aac115
          type: string
        instance_name:
          description: SaaS application instance name
          example: iaas-qe
          type: string
        netskope_instance_name:
          type: string
        pass_rate:
          type: integer
        passed_rules:
          description: The number of passed rules for this resource.
          type: integer
        region_id:
          example: us-east-1
          type: string
        region_name:
          example: East US
          type: string
        resource_id:
          type: string
        resource_name:
          type: string
        resource_type:
          description:
            User, Connected Application, VM, Container, Function, Mailbox,
            Repo, etc. (normalized)
          type: string
        status:
          $ref: "#/components/schemas/Status"
        tags:
          items:
            type: string
          type: array
        total_rules:
          description: The number of rules checked for this resource.
          type: integer
        unknown_rules:
          type: integer
      type: object
    GetResourcesStatsResponse:
      properties:
        failed_resources:
          example: 576
          type: integer
        passed_rate:
          example: 85.6
          type: number
        passed_resources:
          example: 3449
          type: integer
        total_resources:
          example: 4025
          type: integer
        unknown_resources:
          example: 2000
          type: integer
      type: object
    GetResultsRequestBody:
      properties:
        fields:
          description:
            required fields in the JSON response, if empty, all fields
            are returned.
          items:
            type: string
          type: array
        filters:
          $ref: "#/components/schemas/Filters"
        limit:
          description: pagination pagesize
          maximum: 500
          minimum: 1
          type: integer
        offset:
          default: 0
          description: pagination offset
          type: integer
        sort:
          $ref: "#/components/schemas/Sort"
        timestamp:
          description: epoch time,
          type: integer
      required:
        - timestamp
        - sort
        - limit
        - offset
      type: object
    GetResultsResponse:
      items:
        $ref: "#/components/schemas/GetResultsResponseItems"
      type: array
    GetResultsResponseItems:
      properties:
        app:
          description: Exchange, AzureAD etc.
          example: Exchange
          type: string
        app_category:
          description: IAM, CRM etc.
          example: IAM
          type: string
        app_suite:
          description: SaaS Provider e.g "AzureAD", "Microsoft365", "Salesforce"
          example: azure
          type: string
        compliance_standards:
          items:
            $ref: "#/components/schemas/ComplianceStandard"
          type: array
        compliance_standards_total:
          description:
            Used for "+51 more" button (includes the 1 above, hence a total
            of 52 minus the 1 above means the UI shows "+51 more")
          example: 52
          type: integer
        current_rule_version:
          type: string
        error_msg:
          type: string
        failing_since:
          description:
            "Failing_since is the earliest instance of a rule failure for
            a resource, after the last time it had passed. So if a rule+resource had
            a history of P-F-P-P-P-F-F-F, then failing_since should show the time
            of 3rd from last F.

            "
          type: integer
        instance_id:
          description: Instance ID
          example: e3813397-1fff-46b0-a59f-5c2130aac115
          type: string
        instance_name:
          description: SaaS application instance name
          example: iaas-qe
          type: string
        last_scanned:
          description: Epoch time when the last scan happened
          type: integer
        mute_justification:
          type: string
        muted:
          enum:
            - "Yes"
            - "No"
          type: string
        muted_by:
          example: user@netskope.com
          type: string
        muted_on:
          description: Epoch time when the result was muted
          type: integer
        muted_until:
          description:
            Epoch time when the result is unmuted or 0 for "Until I unmute
            it"
          type: integer
        netskope_instance_name:
          description: SaaS account name to which instance setup is done.
          type: string
        policies:
          items:
            example: salesforce policy
            type: string
          type: array
        region_id:
          example: us-east-1
          type: string
        region_name:
          example: East US
          type: string
        resource_id:
          description: Asset ID
          example: /subscriptions/e3813397-1fff-46ac115/providers/Microsoft.Storage/storageAccounts/vinstorageacc1
          type: string
        resource_name:
          description: Asset name
          example: vinstorageacc1
          type: string
        resource_type:
          description: Asset type
          example: Storage Account
          type: string
        rule_id:
          description:
            Needed to call /resources/<resource_id> which needs resource_id
            + rule_id (see https://netskope.atlassian.net/wiki/spaces/WUB/pages/2792456574/CSPM+Internal+API+Review+-+Resource+Service#GET-%2Fresources%2F%3Cresource_id%3E)
          example: "-1026"
          type: string
        rule_name:
          example: "Data-at-rest is protected: Ensure that 'Public access level'
            is set to Private for blob containers"
          type: string
        severity:
          $ref: "#/components/schemas/Severity"
        status:
          $ref: "#/components/schemas/Status"
      type: object
    GetRulesResultsRequestBody:
      properties:
        fields:
          description:
            required fields in the JSON response, if empty, all fields
            are returned.
          items:
            type: string
          type: array
        filters:
          $ref: "#/components/schemas/Filters"
        limit:
          default: 25
          type: integer
        offset:
          default: 0
          type: integer
        sort:
          $ref: "#/components/schemas/Sort"
        timestamp:
          example: 1623364884
          type: integer
      required:
        - timestamp
      type: object
    GetRulesResultsResponse:
      items:
        $ref: "#/components/schemas/RulesResultResponseItems"
      type: array
    MutedFilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
        values:
          items:
            enum:
              - true
              - false
            type: boolean
          type: array
      type: object
    ResultsHistoryRequestBody:
      properties:
        filters:
          $ref: "#/components/schemas/Filters"
        timestamp:
          default: current timestamp
          description: timestamp in UTC
          type: integer
        trends_window:
          description: time windows in days
          maximum: 90
          minimum: 2
          type: integer
      required:
        - trends_window
      type: object
    ResultsStats:
      properties:
        failed_findings:
          example: 6694
          type: integer
        failed_findings_muted:
          type: integer
        failed_findings_unmuted:
          type: integer
        failed_muted_rate:
          example: 20
          type: integer
        pass_rate:
          example: 20
          type: integer
        passed_findings:
          type: integer
        passed_findings_muted:
          example: 0
          type: integer
        passed_findings_unmuted:
          example: 29384
          type: integer
        timestamp:
          description: Epoch timestamp of the snapshot on which this stats are based.
          example: 1642486238
          type: integer
        total_findings:
          description: Used for "Total Findings" and "... out of 36152 total findings"
          example: 36152
          type: integer
        unique_instances_count:
          description: 99 Accounts
          example: 99
          type: integer
        unknown_findings:
          example: 74
          type: integer
      type: object
    RuleDetails:
      properties:
        count:
          type: integer
        critical_count:
          type: integer
        data:
          items:
            properties:
              rule_name:
                type: string
              secondary_resource_ids:
                items:
                  type: string
                type: array
              severity:
                enum:
                  - Critical
                  - High
                  - Medium
                  - Low
                type: string
          type: array
      type: object
    RuleDetailsRequest:
      properties:
        filters:
          $ref: "#/components/schemas/Filters"
        sort:
          items:
            properties:
              column:
                type: string
              sort_order:
                type: string
            required:
              - column
              - sort_order
            type: object
          type: array
        timestamp:
          type: integer
      type: object
    RuleStats:
      properties:
        failed_rules:
          example: 201
          type: integer
        pass_rate:
          example: 20
          type: integer
        passed_rules:
          example: 201
          type: integer
        total_rules:
          example: 201
          type: integer
      type: object
    RuleStatsByCS:
      properties:
        as_of_date_stats:
          properties:
            rules_by_compliance_standard:
              items:
                properties:
                  cs_name:
                    description: Name of compliance standard
                    type: string
                  rules_fail_rate:
                    description:
                      Rate at which rules are failing for the given compliance
                      standard
                    type: integer
                  rules_pass_rate:
                    description:
                      Rate at which rules are passing for the given compliance
                      standard
                    type: integer
                type: object
              type: array
            rules_pass_rate:
              description: Rate at which rules are passing
              type: integer
            total_failed_rules:
              description: Total number of failed rules
              type: integer
            total_passed_rules:
              description: Total number of passed rules
              type: integer
            total_rules:
              description: Total number of rules
              type: integer
          type: object
        historic_stats:
          items:
            properties:
              rules_pass_rate:
                description:
                  Rate at which rules are passing at the given value of
                  date and time
                type: integer
              timestamp:
                description: Date and time value for the stat
                type: integer
              total_failed_rules:
                description: Total rules failed at the given value of date and time
                type: integer
              total_passed_rules:
                description: Total rules passed at the given value of date and time
                type: integer
            type: object
          type: array
        trend:
          $ref: "#/components/schemas/TrendResponse"
      required:
        - as_of_date_stats
        - historic_stats
        - trend
      type: object
    RulesResultResponseItems:
      properties:
        app:
          description: AzureAD, Exchange etc.
          example: Exchange
          type: string
        app_category:
          description: App category such as IAM etc.
          example: IAM
          type: string
        app_suite:
          description: SaaS service provider such as Office365, AzureAD, etc.
          example: AzureAD
          type: string
        compliance_standards:
          items:
            $ref: "#/components/schemas/ComplianceStandard"
          type: array
        compliance_standards_total:
          description:
            Used for "+51 more" button (includes the 1 above, hence a total
            of 52 minus the 1 above means the UI shows "+51 more")
          example: 52
          type: integer
        current_rule_version:
          type: string
        failed_resources:
          description: The number of failed resources for this rule.
          type: integer
        failed_resources_muted:
          description: The number of failed and muted resources for this rule.
          type: integer
        pass_rate:
          type: integer
        passed_resources:
          description: The number of passed resources for this rule.
          type: integer
        resource_type:
          description: Asset type
          example: Storage Account
          type: string
        rule_id:
          example: ruleID
          type: string
        rule_name:
          type: string
        severity:
          $ref: "#/components/schemas/Severity"
        status:
          $ref: "#/components/schemas/Status"
        total_instances:
          type: integer
        total_resources:
          description: The number of total checked resources for this rule.
          type: integer
        unknown_resources:
          description: The number of unkown resources for this rule.
          type: integer
      type: object
    Severity:
      enum:
        - Critical
        - High
        - Low
        - Medium
      type: string
    SeverityFilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
        values:
          items:
            $ref: "#/components/schemas/Severity"
          type: array
      type: object
    Sort:
      items:
        $ref: "#/components/schemas/SortColumn"
      maxItems: 1
      minItems: 1
      type: array
    SortColumn:
      properties:
        column:
          type: string
        sort_order:
          $ref: "#/components/schemas/SortOrder"
      required:
        - column
        - sort_order
      type: object
    SortOrder:
      enum:
        - asc
        - desc
      type: string
    StatsRequest:
      properties:
        filters:
          $ref: "#/components/schemas/Filters"
        timestamp:
          description: epoch time
          minimum: 0
          type: integer
      required:
        - timestamp
      type: object
    Status:
      enum:
        - Failed
        - Passed
        - Unknown
      type: string
    StatusFilterValues:
      properties:
        operator:
          $ref: "#/components/schemas/FilterOperator"
        values:
          items:
            $ref: "#/components/schemas/Status"
          type: array
      type: object
    TrendResponse:
      properties:
        change_in_num:
          description: Difference between current value and last week's average value
          type: integer
        notation:
          description: The type of change_in_num value
          enum:
            - percent
            - raw_value
          type: string
        trajectory:
          description:
            Showing the change in the trend from the last week's average
            value
          enum:
            - up
            - down
            - unchanged
          type: string
      type: object
info:
  description:
    "The Evaluation API service provides the API endpoint for triggering
    an evaluation and fetching evaluation results

    "
  title: CSPM Evaluation API Service
  version: 1.0.0
openapi: 3.0.3
paths:
  /spm/results/export/getdata:
    post:
      operationId: exportRawFindings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportResultsRequestBody"
        description: export raw findings requests body
        required: true
      responses:
        "200":
          content:
            text/csv: {}
          description: success
        4XX:
          content:
            application/json:
              example:
                body:
                  errors:
                    - Missing parameter.
                status: 400
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              example:
                body:
                  errors:
                    - We encountered a backend error. Please try again.
                status: 500
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Export raw findings tab data to a CSV file.
      tags:
        - Findings (Raw Findings tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      serviceConfig: spm
      version: 2
  /spm/results/fields:
    get:
      operationId: getResultsFields
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Field"
                type: array
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the fields returned from POST /getresults API
      tags:
        - Compliance (Raw Findings tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/filters:
    get:
      operationId: getFilterMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FilterMeta"
                type: array
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the filter metadata.
      tags:
        - Compliance (Raw Findings tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/gethistory:
    post:
      operationId: postResultsGetHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResultsHistoryRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ResultsStats"
                type: array
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
      summary:
        Get the stats of evaluation results for a time range for “Findings
        History” chart
      tags:
        - Compliance (Raw Findings tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/getresources:
    post:
      operationId: getresources
      requestBody:
        content:
          application/json:
            example:
              filters:
                app_suite:
                  operator: equal
                  values:
                    - AzureAD
              limit: 25
              offset: 0
              sort:
                - column: status
                  sort_order: asc
              timestamp: 1692793671
            schema:
              $ref: "#/components/schemas/GetResourcesResultsRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResourcesResultsResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch data for resources tab results table
      tags:
        - Compliance (Resources tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/getresults:
    post:
      operationId: postResultsGetResults
      requestBody:
        content:
          application/json:
            example:
              fields:
                - status
                - severity
              filters:
                rule_name:
                  operator: equal
                  values:
                    - Ensure's device management polices are set to require advanced
                      security configurations
              limit: 500
              offset: 0
              sort:
                - column: status
                  sort_order: asc
              timestamp: 4133980800
            schema:
              $ref: "#/components/schemas/GetResultsRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResultsResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get latest evaluation result for each rule_id, resource_id combination
      tags:
        - Compliance (Raw Findings tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/getruledetails:
    post:
      operationId: getruledetails
      requestBody:
        content:
          application/json:
            example:
              filters:
                app_suite:
                  operator: equal
                  values:
                    - Workday
                instance_id:
                  operator: equal
                  values:
                    - instance_di
                resource_id:
                  operator: equal
                  values:
                    - e2feb562bb86013a0f12ca48c8017a07
                resource_type:
                  operator: equal
                  values:
                    - WorkdayAccount
                status:
                  operator: equal
                  values:
                    - Failed
              sort:
                - column: severity
                  sort_order: desc
              timestamp: 1692793169
            schema:
              $ref: "#/components/schemas/RuleDetailsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleDetails"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unable to handle bad request
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get rule name and rule severity by given filters.
      tags:
        - Compliance (Raw Findings tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/getrules:
    post:
      operationId: getResultsAggregatedByRule
      requestBody:
        content:
          application/json:
            example:
              filters:
                app_suite:
                  operator: equal
                  values:
                    - AzureAD
              limit: 100
              offset: 0
              sort:
                - column: status
                  sort_order: asc
              timestamp: 1692793371
            schema:
              $ref: "#/components/schemas/GetRulesResultsRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRulesResultsResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Unable to handle bad request
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get result stats aggregated by rules.
      tags:
        - Compliance (Rules tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/getstats:
    post:
      description: Get status data for raw findings body
      operationId: resultsStats
      requestBody:
        content:
          application/json:
            example:
              filters:
                rule_name:
                  operator: equal
                  values:
                    - Ensure's device management polices are set to require advanced
                      security configurations
              timestamp: 1688026489
            schema:
              $ref: "#/components/schemas/StatsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultsStats"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Get the stats for raw findings
      tags:
        - Compliance (Raw Findings tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/resources/export/getdata:
    post:
      operationId: exportResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportResultsRequestBody"
        required: true
      responses:
        "200":
          content:
            text/csv: {}
          description: success
        4XX:
          content:
            application/json:
              example:
                body:
                  errors:
                    - Missing parameter.
                status: 400
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              example:
                body:
                  errors:
                    - We encountered a backend error. Please try again.
                status: 500
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Export resource tab data to a CSV file.
      tags:
        - Findings (Resources tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: false
      nsBeta: true
      serviceConfig: spm
      version: 2
  /spm/results/resources/fields:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Field"
                type: array
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary:
        Fetch all possible fields to be used to construct the UI (table, customize
        columns, export fields, etc.)
      tags:
        - Compliance (Resources tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/resources/getstats:
    post:
      operationId: postResourceStats
      requestBody:
        content:
          application/json:
            example:
              filters:
                app_suite:
                  operator: equal
                  values:
                    - AzureAD
              timestamp: 1692793671
            schema:
              $ref: "#/components/schemas/StatsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResourcesStatsResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch data for resources stats
      tags:
        - Compliance (Resources tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/rules/export/getdata:
    post:
      operationId: exportRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportResultsRequestBody"
        required: true
      responses:
        "200":
          content:
            text/csv: {}
          description: success
        4XX:
          content:
            application/json:
              example:
                body:
                  errors:
                    - Missing parameter.
                status: 400
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              example:
                body:
                  errors:
                    - We encountered a backend error. Please try again.
                status: 500
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Export rule tab data to a CSV file.
      tags:
        - Findings (Rules tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: false
      nsBeta: true
      serviceConfig: spm
      version: 2
  /spm/results/rules/fields:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Field"
                type: array
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary:
        Fetch all possible fields to be used to construct the UI (table, customize
        columns, export fields, etc.)
      tags:
        - Compliance (Rules tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/rules/getstats:
    post:
      operationId: getRulesStats
      requestBody:
        content:
          application/json:
            example:
              filters:
                app_suite:
                  operator: equal
                  values:
                    - AzureAD
              timestamp: 1692793371
            schema:
              $ref: "#/components/schemas/StatsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleStats"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary:
        The stats is calculated on top of the evaluation results stats which
        is aggregated by rules.
      tags:
        - Compliance (Rules tab)
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 10
        writeRoutes:
          second: 10
      serviceConfig: spm
      version: 2
  /spm/results/stats/byappsuites:
    get:
      description: "This API will provide the following data sets

        1. Total number of failed results.

        2. Total number of passed results.

        3. Failed results which are in High, Medium, Low and Critical severity.

        4. The past 7 days of trend data. The trend shows results increase or decrease
        in terms of percentage of failed results. Current count vs (avg count of previous
        7 days).

        "
      parameters:
        - description: epoch time denoting time until which the stats are to be returned
          example: 1692793804
          in: query
          name: timestamp
          required: true
          schema:
            type: number
        - description:
            parameter specifying which column of the response will be sorted
            based on
          example: total_failed_results
          in: query
          name: sortby
          required: true
          schema:
            type: string
        - description: depicts which order the returned result will be sorted in
          example: desc
          in: query
          name: sortorder
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResultsSummaryResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch results panel details for landing page
      tags:
        - Landing Page
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      serviceConfig: spm
      version: 2
  /spm/results/stats/byseverity:
    get:
      description: "This API will provide the following data sets

        1. Total number of failed results.

        2. Total number of passed results.

        3. Failed results which are in High, Medium, Low and Critical severity.

        4. The past 7 days of trend data. The trend shows results increase or decrease
        in terms of percentage of failed results. Current count vs (avg count of previous
        7 days).

        "
      parameters:
        - description: epoch time denoting time until which the stats are to be returned
          in: query
          name: timestamp
          required: true
          schema:
            type: number
        - description:
            parameter specifying which column of the response will be sorted
            based on
          in: query
          name: sortby
          required: true
          schema:
            type: string
        - description: depicts which order the returned result will be sorted in
          in: query
          name: sortorder
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResultsSummaryResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch results panel details for landing page
      tags:
        - Landing Page
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      serviceConfig: spm
      version: 2
  /spm/results/stats/failedresults/byappsuite:
    get:
      description:
        This API will provide total number of failed results for each application
        suite and each severity level sorted by total results for an application suite
      parameters:
        - description: epoch time denoting time until which the stats are to be returned
          example: 1692794097
          in: query
          name: timestamp
          required: true
          schema:
            type: number
        - description:
            parameter specifying which column of the response will be sorted
            based on
          example: total_failed_results
          in: query
          name: sortby
          required: true
          schema:
            type: string
        - description: depicts which order the returned result will be sorted in
          example: desc
          in: query
          name: sortorder
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResultsByASResponse"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch failed results by applications details for landing page
      tags:
        - Landing Page
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      serviceConfig: spm
      version: 2
  /spm/results/stats/failedresults/bycs:
    get:
      description:
        "This API will returns failed results grouped by compliance standards
        and further distinguised based on "
      parameters:
        - description: epoch time denoting time until which the stats are to be returned
          example: 1692794097
          in: query
          name: timestamp
          required: true
          schema:
            type: number
        - description:
            parameter specifying which column of the response will be sorted
            based on
          example: total_failed_results
          in: query
          name: sortby
          required: true
          schema:
            type: string
        - description: depicts which order the returned result will be sorted in
          example: desc
          in: query
          name: sortorder
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResultsByCS"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch failed results by standards details for landing page
      tags:
        - Landing Page
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      serviceConfig: spm
      version: 2
  /spm/results/stats/rules/bycs:
    get:
      description:
        "This API will provide the following data sets\n1. Total number\
        \ of rules, total number of passed rules and total number failed rules\n2.\
        \ Individual compliance standard data including standard name, rule passing\
        \ and failing rates/percentage. \n3. The past 7 days of historic data which\
        \ will include total number of passed and failed rules and rule passing rate.\n\
        4. The trend data in terms of percentage of passed rules. Current count vs\
        \ (avg count of previous 7 days).\n"
      parameters:
        - description: epoch time denoting time until which the stats are to be returned
          example: 1692794097
          in: query
          name: timestamp
          required: true
          schema:
            type: number
        - description:
            parameter specifying which column of the response will be sorted
            based on
          example: rules_pass_rate
          in: query
          name: sortby
          required: true
          schema:
            type: string
        - description: depicts which order the returned result will be sorted in
          example: desc
          in: query
          name: sortorder
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleStatsByCS"
          description: Success
        4XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Fetch rule stats over compliance standards
      tags:
        - Landing Page
    x-netskope-params:
      apiGroup: result
      customerFacing: true
      nsBeta: true
      serviceConfig: spm
      version: 2
  /spm/results/thirdpartyapps/export/getdata:
    post:
      operationId: exportThirdPartyApps
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportResultsRequestBody"
        required: true
      responses:
        "200":
          content:
            text/csv: {}
          description: success
        4XX:
          content:
            application/json:
              example:
                body:
                  errors:
                    - Missing parameter.
                status: 400
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Error
        5XX:
          content:
            application/json:
              example:
                body:
                  errors:
                    - We encountered a backend error. Please try again.
                status: 500
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Internal Server Error
      summary: Export ThirdParty Apps data to a CSV file.
      tags:
        - ThirdPartyApps (ThirdPartyApps Page)
    x-netskope-params:
      apiGroup: result
      customerFacing: false
      nsBeta: true
      serviceConfig: spm
      version: 2
servers:
  - url: https://cspm-<tenant>-<app>.netskope.com/v1/spm/results
tags:
  - description: Results Service
    name: Compliance (Raw Findings tab)
  - description: Results Service
    name: Compliance (Rules tab)
  - description: Results Service
    name: Compliance (Resources tab)
  - description: Results Service
    name: Landing Page
