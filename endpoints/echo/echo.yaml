components:
  schemas:
    EchoResponse:
      properties:
        curl_command:
          type: string
        request_info:
          $ref: "#/components/schemas/RequestInfo"
      type: object
    RequestInfo:
      properties:
        headers:
          additionalProperties:
            type: string
          type: object
        method:
          type: string
        path:
          type: string
        path_parameters:
          additionalProperties:
            type: string
          type: object
        payload:
          type: string
        query_parameters:
          additionalProperties:
            type: string
          type: object
      type: object
info:
  description: A simple echo service that returns received requests.
  title: Echo Service API
  version: 1.0.0
openapi: 3.0.0
paths:
  /echo/:
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              example:
                curl_command:
                  "curl -X GET -H 'Connection: keep-alive' -H 'Content-Length:
                  16' -H 'Content-Type: application/json' -H 'User-Agent: PostmanRuntime/7.33.0'
                  -H 'Accept: */*' -H 'Accept-Encoding: gzip, deflate, br' '/'"
                request_info:
                  body: ""
                  headers:
                    Accept:
                      - application/json
                    Accept-Encoding:
                      - gzip, deflate
                    Accept-Language:
                      - en-GB,en-US;q=0.9,en;q=0.8
                    Connection:
                      - keep-alive
                    Cookie:
                      - ci_session=bnNtZW1jYWNoZWQkipHsqGfgUovYpyPmR1dQo8ePDArwbII
                    Original-Host:
                      - developer.vbox:8080
                    Referer:
                      - http://developer.vbox:8080/apidocs/?include_beta_routes=0
                    User-Agent:
                      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
                        (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36
                    X-Anonymous-Consumer:
                      - "true"
                    X-Consumer-Custom-Id:
                      - unknown
                    X-Consumer-Groups:
                      - ANONYMOUS-USERS
                    X-Consumer-Id:
                      - 324ca984-7b71-43a8-83b0-c4c70563f584
                    X-Consumer-Username:
                      - unknown
                    X-Forwarded-For:
                      - 192.168.65.1, 172.19.0.16
                    X-Forwarded-Host:
                      - developer.vbox
                    X-Forwarded-Path:
                      - /api/v2/echo/
                    X-Forwarded-Port:
                      - "8000"
                    X-Forwarded-Prefix:
                      - /api/v2/echo/
                    X-Forwarded-Proto:
                      - http
                    X-Netskope-Tenant-Domain:
                      - developer.vbox:8080
                    X-Netskope-Tenant-Hash:
                      - 96cba5da814db507868b2
                    X-Netskope-Tenantid:
                      - "4013"
                    X-Netskope-Trid:
                      - cb4ej80s8i8af2huodqg
                    X-Real-Ip:
                      - 172.19.0.16
                  method: GET
                  path: /
                  query_parameters:
                    tenantid:
                      - "4013"
                    trid:
                      - cb4ej80s8i8af2huodqg
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request
    post:
      description: Echoes back a POST request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                curl_command:
                  "curl -X POST -H 'Content-Length: 16' -H 'Content-Type:
                  application/json' -H 'User-Agent: PostmanRuntime/7.33.0' -H 'Accept:
                  */*' -H 'Accept-Encoding: gzip, deflate, br' -H 'Connection:
                  keep-alive' '/'"
                request_info:
                  headers:
                    Accept:
                      - "*/*"
                    Accept-Encoding:
                      - gzip, deflate, br
                    Connection:
                      - keep-alive
                    Content-Length:
                      - "16"
                    Content-Type:
                      - application/json
                    Postman-Token:
                      - c4431325-b86f-40c4-8960-6376ad728bfd
                    User-Agent:
                      - PostmanRuntime/7.33.0
                  method: POST
                  path: /
                  payload:
                    test: test
                  query_parameters: {}
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/allowed-get-in-qa01:
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request used in automation
      x-netskope-route-params:
        allowedTenants:
          - webui-qe01-qa01-mp-npe.qa.boomskope.com
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/allowed-post-in-qe01-qe02:
    post:
      description: Echoes back a POST request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
      x-netskope-route-params:
        allowedTenants:
          - webui-qe01-qa01-mp-npe.qa.boomskope.com
          - webui-qe02-qa01-mp-npe.qa.boomskope.com
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/auditlog/withflag:
    delete:
      description: Echoes back a DELETE request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo DELETE Request
      x-netskope-route-params:
        enableAuditLogging: true
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request
      x-netskope-route-params:
        enableAuditLogging: true
    patch:
      description: Echoes back a PATCH request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo PATCH Request
      x-netskope-route-params:
        enableAuditLogging: false
    post:
      description: Echoes back a POST request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
      x-netskope-route-params:
        enableAuditLogging: false
    put:
      description: Echoes back a PUT request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo PUT Request
      x-netskope-route-params:
        enableAuditLogging: true
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/auditlog/withoutflag:
    delete:
      description: Echoes back a DELETE request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo DELETE Request
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request
    patch:
      description: Echoes back a PATCH request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo PATCH Request
    post:
      description: Echoes back a POST request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
    put:
      description: Echoes back a PUT request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo PUT Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/hidden-get:
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request used in automation
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/hidden-get-allowed-in-qe01-qe02:
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request used in automation
      x-netskope-route-params:
        allowedTenants:
          - webui-qe01-qa01-mp-npe.qa.boomskope.com
          - webui-qe02-qa01-mp-npe.qa.boomskope.com
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/hidden-post:
    post:
      description: Echoes back a POST request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/nsbeta/enabled:
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/nspartner/enabled:
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      nsPartner: true
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/nspartner/enabled/nsbeta/enabled:
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      nsBeta: true
      nsPartner: true
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/ratelimit:
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request used in automation
    post:
      description: Echoes back a POST request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          minute: 5
        writeRoutes:
          minute: 5
      serviceConfig: echo_service
      version: 2
  /echo/test:
    get:
      description: Echoes back a GET request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo GET Request used in automation
    head:
      tags:
        - echo
      description: Echoes back a HEAD request.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo HEAD Request used in automation
    post:
      description: Echoes back a POST request.
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/audit:
    post:
      description: Will contain regular audit log structure which was being supported earlier
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/audit/changedds:
    post:
      description: Contains changedds field in audit log
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/audit/details:
    post:
      description: Contains details field in audit log
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
  /echo/audit/all:
    post:
      description: Contains all fields in audit log
      requestBody:
        content:
          application/json:
            example:
              key: value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EchoResponse"
          description: Successful operation
      summary: Echo POST Request
    x-netskope-params:
      apiGroup: echo
      customerFacing: false
      rateLimit:
        readRoutes:
          second: 100000
        writeRoutes:
          second: 100000
      serviceConfig: echo_service
      version: 2
