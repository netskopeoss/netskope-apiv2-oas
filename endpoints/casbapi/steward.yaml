components:
  examples:
    retroScanList:
      value:
        retroscans:
          - createTime: 1706034195
            errors: 0
            finishTime: 1706034789
            id: cmo084sh46k32jnn7qmg
            lastChangedBy: client@internal.com
            modifyTime: 1706034789
            name: retro-scan-name-1
            policyData:
              - appliedAt: 1710341605
                attributes:
                  description: ""
                  enabled: true
                  excludeCriteria: {}
                  matchCriteria:
                    appCategories: []
                    appInstances:
                      - appName: sharepoint
                        instanceName: internal.onmicrosoft.com
                    collaborators: []
                    dataClassificationLabels: []
                    dlpProfileNames: []
                    domainProfileIds: []
                    domains: []
                    exposures: []
                    geographicRegions: []
                    mediaTypeCategories: []
                    owner:
                      domainProfileIds: []
                      domains: []
                      userGroups: []
                      userProfileIds: []
                      users: []
                    resourceIds:
                      - appName: sharepoint
                        id: ""
                        instanceName: internal.onmicrosoft.com
                    resourceTypes: []
                    threatProtectionProfileNames: []
                    userGroups: []
                    userProfileIds: []
                  name: retro-scan-policy-sharepoint
                  notifications: []
                  remediationOptions:
                    - remediationAction:
                        alert: {}
                createdAt: 1710341605
                id: co2fps1rrc0kk53vl4u0
                lastChangeBy: internal@netskope.com
                modifiedAt: 1710341605
                versionId: co2fps1rrc0kk53vl4u0
            processed: 451
            scanned: 451
            startTime: 1706034242
            state: STATE_COMPLETE
            violations:
              co2fps1rrc0kk53vl4u0: 0
          - createTime: 1706034195
            errors: 0
            id: co1evvtghj2erv5rmdg0
            lastChangedBy: client@internal.com
            modifyTime: 1706034245
            name: retro-scan-name-2
            policyData:
              - appliedAt: 1710341605
                attributes:
                  description: ""
                  enabled: true
                  excludeCriteria: {}
                  matchCriteria:
                    appCategories: []
                    appInstances:
                      - appName: onedrive
                        instanceName: internal-my.onmicrosoft.com
                    collaborators: []
                    dataClassificationLabels: []
                    dlpProfileNames: []
                    domainProfileIds: []
                    domains: []
                    exposures: []
                    geographicRegions: []
                    mediaTypeCategories: []
                    owner:
                      domainProfileIds: []
                      domains: []
                      userGroups: []
                      userProfileIds: []
                      users: []
                    resourceIds:
                      - appName: onedrive
                        id: ""
                        instanceName: internal-my.onmicrosoft.com
                    resourceTypes: []
                    threatProtectionProfileNames: []
                    userGroups: []
                    userProfileIds: []
                  name: retro-scan-policy-onedrive
                  notifications: []
                  remediationOptions:
                    - remediationAction:
                        alert: {}
                createdAt: 1710341605
                id: cnorn9ju9c8ud5733jj0
                lastChangeBy: internal@netskope.com
                modifiedAt: 1710341605
                versionId: cnorn9ju9c8ud5733jj0
            processed: 439
            scanned: 403
            startTime: 1711607725
            state: STATE_SCANNING
            violations:
              cnorn9ju9c8ud5733jj0: 0
        totalCount: 2
    retroScanPolicyRequest:
      value:
        attributes:
          description: ""
          enabled: true
          excludeCriteria:
            appCategories: []
            appInstances: []
            collaborators: []
            dataClassificationLabels: []
            dlpProfileNames: []
            domainProfileIds:
              - "2"
            domains:
              - internal.netskope.com
            exposures:
              - EXPOSURE_ORGWIDE
            geographicRegions:
              - APC
            mediaTypeCategories: []
            owner:
              domainProfileIds: []
              domains: []
              userGroups: []
              userProfileIds: []
              users: []
            resourceIds: []
            resourceTypes: []
            threatProtectionProfileNames: []
            userGroups:
              - test-only-one-group
            userProfileIds: []
          matchCriteria:
            appCategories: []
            appInstances:
              - appName: confluence
                instanceName: phoenix-dev-confluence
            collaborators:
              - greaterThan: 2
            dataClassificationLabels: []
            dlpProfileNames:
              - Payment Card Industry Data Security Standard. PCI-DSS
              - Health Insurance Portability and Accountability Act (HIPAA), 1996
            domainProfileIds:
              - all_internal_domains
            domains:
              - external.netskope.com
            exposures:
              - EXPOSURE_EXTERNAL
              - EXPOSURE_PUBLIC
            geographicRegions:
              - NAM
              - GBR
            mediaTypeCategories:
              - MEDIA_TYPE_CATEGORY_RASTERIMAGE
              - MEDIA_TYPE_CATEGORY_VECTORGRAPHIC
              - MEDIA_TYPE_CATEGORY_TEXT
            owner:
              domainProfileIds: []
              domains: []
              userGroups: []
              userProfileIds: []
              users: []
            resourceIds:
              - appName: confluence
                id: ""
                instanceName: phoenix-dev-confluence
            resourceTypes:
              - SCANNABLE_RESOURCE_TYPE_PAGE
            threatProtectionProfileNames: []
            userGroups:
              - test-only-one-user
            userProfileIds:
              - "1"
          name: retro-scan-policy-confluence
          notifications: []
          remediationOptions:
            - remediationAction:
                quarantine:
                  profileId: "1"
                  zipPassword: ""
    retroScanPolicyResponse:
      value:
        appliedAt: 1706034235
        attributes:
          description: ""
          enabled: true
          excludeCriteria:
            appCategories: []
            appInstances: []
            collaborators: []
            dataClassificationLabels: []
            dlpProfileNames: []
            domainProfileIds:
              - "2"
            domains:
              - internal.netskope.com
            exposures:
              - EXPOSURE_ORGWIDE
            geographicRegions:
              - APC
            mediaTypeCategories: []
            owner:
              domainProfileIds: []
              domains: []
              userGroups: []
              userProfileIds: []
              users: []
            resourceIds: []
            resourceTypes: []
            threatProtectionProfileNames: []
            userGroups:
              - test-only-one-group
            userProfileIds: []
          matchCriteria:
            appCategories: []
            appInstances:
              - appName: confluence
                instanceName: phoenix-dev-confluence
            collaborators:
              - greaterThan: 2
            dataClassificationLabels: []
            dlpProfileNames:
              - Payment Card Industry Data Security Standard. PCI-DSS
              - Health Insurance Portability and Accountability Act (HIPAA), 1996
            domainProfileIds:
              - all_internal_domains
            domains:
              - external.netskope.com
            exposures:
              - EXPOSURE_EXTERNAL
              - EXPOSURE_PUBLIC
            geographicRegions:
              - NAM
              - GBR
            mediaTypeCategories:
              - MEDIA_TYPE_CATEGORY_RASTERIMAGE
              - MEDIA_TYPE_CATEGORY_VECTORGRAPHIC
              - MEDIA_TYPE_CATEGORY_TEXT
            owner:
              domainProfileIds: []
              domains: []
              userGroups: []
              userProfileIds: []
              users: []
            resourceIds:
              - appName: confluence
                id: ""
                instanceName: phoenix-dev-confluence
            resourceTypes:
              - SCANNABLE_RESOURCE_TYPE_PAGE
            threatProtectionProfileNames: []
            userGroups:
              - test-only-one-user
            userProfileIds:
              - "1"
          name: retro-scan-policy-confluence
          notifications: []
          remediationOptions:
            - remediationAction:
                quarantine:
                  profileId: "1"
                  zipPassword: ""
        createdAt: 1706034235
        id: cmo08eo5o5m18ng5s9f0
        lastChangeBy: client@internal.com
        modifiedAt: 1706034235
        versionId: cmo08eo5o5m18ng5s9f0
    retroScanPolicyUpdateRequest:
      value:
        attributes:
          description: ""
          enabled: true
          excludeCriteria:
            appCategories: []
            appInstances: []
            collaborators: []
            dataClassificationLabels: []
            dlpProfileNames: []
            domainProfileIds:
              - "2"
            domains:
              - internal.netskope.com
            exposures:
              - EXPOSURE_ORGWIDE
            geographicRegions:
              - APC
            mediaTypeCategories: []
            owner:
              domainProfileIds: []
              domains: []
              userGroups: []
              userProfileIds: []
              users: []
            resourceIds: []
            resourceTypes: []
            threatProtectionProfileNames: []
            userGroups:
              - test-only-one-group
            userProfileIds: []
          matchCriteria:
            appCategories: []
            appInstances:
              - appName: confluence
                instanceName: phoenix-dev-confluence
            collaborators:
              - greaterThan: 2
            dataClassificationLabels: []
            dlpProfileNames:
              - Payment Card Industry Data Security Standard. PCI-DSS
              - Health Insurance Portability and Accountability Act (HIPAA), 1996
            domainProfileIds:
              - all_internal_domains
            domains:
              - external.netskope.com
            exposures:
              - EXPOSURE_EXTERNAL
              - EXPOSURE_PUBLIC
            geographicRegions:
              - NAM
              - GBR
            mediaTypeCategories:
              - MEDIA_TYPE_CATEGORY_RASTERIMAGE
              - MEDIA_TYPE_CATEGORY_VECTORGRAPHIC
              - MEDIA_TYPE_CATEGORY_TEXT
            owner:
              domainProfileIds: []
              domains: []
              userGroups: []
              userProfileIds: []
              users: []
            resourceIds:
              - appName: confluence
                id: ""
                instanceName: phoenix-dev-confluence
            resourceTypes:
              - SCANNABLE_RESOURCE_TYPE_PAGE
            threatProtectionProfileNames: []
            userGroups:
              - test-only-one-user
            userProfileIds:
              - "1"
          name: retro-scan-policy-confluence
          notifications: []
          remediationOptions:
            - remediationAction:
                quarantine:
                  profileId: "1"
                  zipPassword: ""
        versionId: cmo08eo5o5m18ng5s9f0
    retroScanResponse:
      value:
        createTime: 1706034195
        errors: 0
        finishTime: 1706034789
        id: cmo084sh46k32jnn7qmg
        lastChangedBy: client@internal.com
        modifyTime: 1706034789
        name: retro-scan-name
        policyData:
          - appliedAt: 1710341605
            attributes:
              description: ""
              enabled: true
              excludeCriteria: {}
              matchCriteria:
                appCategories: []
                appInstances:
                  - appName: sharepoint
                    instanceName: internal.onmicrosoft.com
                collaborators: []
                dataClassificationLabels: []
                dlpProfileNames: []
                domainProfileIds: []
                domains: []
                exposures: []
                geographicRegions: []
                mediaTypeCategories: []
                owner:
                  domainProfileIds: []
                  domains: []
                  userGroups: []
                  userProfileIds: []
                  users: []
                resourceIds:
                  - appName: sharepoint
                    id: ""
                    instanceName: internal.onmicrosoft.com
                resourceTypes: []
                threatProtectionProfileNames: []
                userGroups: []
                userProfileIds: []
              name: retro-scan-policy-sharepoint
              notifications: []
              remediationOptions:
                - remediationAction:
                    restrictAccessToOwner: {}
            createdAt: 1710341605
            id: co2fps1rrc0kk53vl4u0
            lastChangeBy: internal@netskope.com
            modifiedAt: 1710341605
            versionId: co2fps1rrc0kk53vl4u0
        processed: 451
        scanned: 451
        startTime: 1706034242
        state: STATE_COMPLETE
        violations:
          co2fps1rrc0kk53vl4u0: 0
  parameters:
    appName:
      description: "The CASB app name.


        Please refer to our `ui/casbapi/apps` endpoint to fetch app names."
      example: sharepoint
      in: header
      name: x-casbapi-app
      required: true
      schema:
        type: string
    instanceName:
      description: "The CASB instance name.


        Please refer to our `ui/casbapi/apps/{name}/instances` endpoint to fetch instance
        names."
      example: internal.onmicrosoft.com
      in: header
      name: x-casbapi-instance
      required: true
      schema:
        type: string
    limit:
      description: The max number of items to retrieve.
      in: query
      name: limit
      required: false
      schema:
        default: 100
        format: int64
        type: integer
    offset:
      description: The zero-based offset of the first item in the list to retrieve.
      in: query
      name: offset
      required: false
      schema:
        default: 0
        format: int64
        type: integer
    policyId:
      description: The retro scan's policy ID.
      example: cmo08eo5o5m18ng5s9f0
      in: path
      name: pid
      required: true
      schema:
        type: string
    retroScanId:
      description: The retro scan ID.
      example: cno0refacc4ana1qcok0
      in: path
      name: rid
      required: true
      schema:
        type: string
  schemas:
    entityType:
      description: The target entity's type.
      enum:
        - File
        - Folder
      type: string
    permissionType:
      description: The permitted action that is granted to this subject.
      enum:
        - Read
        - Write
        - Owner
      type: string
    retroScan:
      description:
        A retro scan runs every entity in an instance (or a subset of those)
        through a list of policies in search of security violations.
      properties:
        createTime:
          description: Epoch timestamp indicating when the retro scan was created.
          format: int64
          readOnly: true
          type: integer
        errors:
          description: Number of entities whose scan was not successfully completed.
          format: int64
          readOnly: true
          type: integer
        finishTime:
          description:
            Epoch timestamp indicating when the retro scan switched to
            COMPLETE or CANCELED state. It would be omitted if the COMPLETE or CANCELED
            state never occurred.
          format: int64
          readOnly: true
          type: integer
        id:
          description: Unique identifier of the retro scan.
          readOnly: true
          type: string
        lastChangedBy:
          description:
            ID of the user that last made a change to the retro scan or
            its policies.
          readOnly: true
          type: string
        modifyTime:
          description:
            Epoch timestamp indicating when the retro scan (including any
            of its policies) was last modified.
          format: int64
          readOnly: true
          type: integer
        name:
          description: User-defined name of the retro scan
          minLength: 1
          type: string
        pauseTime:
          description:
            Epoch timestamp indicating when the retro scan switched to
            PAUSED state. It would be omitted if the PAUSED state never occurred.
          format: int64
          readOnly: true
          type: integer
        policyData:
          description: Contains the embedded policy data required for the retro scan.
          items:
            $ref: "#/components/schemas/retroScanPolicy"
          readOnly: true
          type: array
        processed:
          description: Number of entities we've discovered for scanning.
          format: int64
          readOnly: true
          type: integer
        scanned:
          description: Number of entities which have been scanned.
          format: int64
          readOnly: true
          type: integer
        startTime:
          description:
            Epoch timestamp indicating when the retro scan switched to
            SCANNING state. It would be omitted if the SCANNING state never occurred.
          format: int64
          readOnly: true
          type: integer
        state:
          description: Current state of the retro scan.
          enum:
            - STATE_READY
            - STATE_SCANNING
            - STATE_PAUSED
            - STATE_CANCELED
            - STATE_COMPLETE
          readOnly: true
          type: string
        violations:
          description:
            Number of entities found in violation of a policy. The map
            is keyed by policy id and the value is the violation count.
          properties:
            .*:
              format: int64
              minimum: 0
              type: integer
          readOnly: true
          type: object
      required:
        - name
      type: object
    retroScanPolicy:
      allOf:
        - $ref: "#/components/schemas/policyReadOnlyAttributes"
        - properties:
            attributes:
              $ref: "#/components/schemas/policyAttributes"
      description: A Next-Gen CASB retro scan policy resource.
      required:
        - attributes
      type: object
    retroScanUpdatePolicy:
      description: A retro scan policy's version ID and attributes.
      properties:
        attributes:
          $ref: "#/components/schemas/policyAttributes"
        versionId:
          description:
            The version ID that the retro scan policy changes are based
            on. If the given version ID is not the latest, the request will fail because
            it indicates that someone else has already made changes. Your request
            will overwrite the changes made by someone else.
          type: string
      required:
        - versionId
        - attributes
      type: object
    sharedLink:
      description: An entity is being shared via one sharing link.
      properties:
        expiration:
          description: A sharing link's expiration date, it is an Unix Epoch time.
          format: int64
          type: integer
        exposure:
          description: The exposure level that be exposed to the sharing link.
          type: string
        link:
          description: A sharing link's URL.
          format: uri
          type: string
        permission:
          $ref: "#/components/schemas/permissionType"
      required:
        - exposure
        - permission
        - link
      type: object
    sharedSubject:
      description: An entity is being shared with one subject.
      properties:
        name:
          description:
            The subject name, it is either an email address or a specific
            name.
          type: string
        permission:
          $ref: "#/components/schemas/permissionType"
      required:
        - name
        - permission
      type: object
info:
  contact:
    name: Netskope Inc.
  description: The API service to interact with Next-Gen CASB servers.
  title: Next-Gen CASB API Service
  version: 1.0.0
openapi: 3.0.1
paths:
  /casbapi/entities/permissions:
    parameters:
      - $ref: "#/components/parameters/appName"
      - $ref: "#/components/parameters/instanceName"
    post:
      description: Retrieve a list of entity permissions.
      requestBody:
        content:
          application/json:
            schema:
              description: An entity information.
              properties:
                id:
                  description: The target entity's ID.
                  type: string
                type:
                  $ref: "#/components/schemas/entityType"
              required:
                - id
                - type
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                Empty Response:
                  value:
                    shared_links: []
                    shared_with: []
                Full Response:
                  value:
                    shared_links:
                      - expiration: 1704067199
                        exposure: Public
                        link: https://my.sharepoint.com/:i:/g/personal/internal_onmicrosoft_com/EawmzVxVEVVGhWK664Jrt7YBcaddOZ8eytEEa14BNlkXCw
                        permission: Write
                      - exposure: External
                        link: https://my.sharepoint.com/:i:/g/personal/internal_onmicrosoft_com/EawmzVxVEVVGhWK664Jrt7YBPm2vMYwYeuB5Gudl4-VUmA
                        permission: Read
                      - exposure: Internal
                        link: https://my.sharepoint.com/:i:/g/personal/internal_onmicrosoft_com/EawmzVxVEVVGhWK664Jrt7YBNuaCYao1nefgpbWw2TeU9Q
                        permission: Read
                    shared_with:
                      - name: user123@internal.onmicrosoft.com
                        permission: Owner
                      - name: group456@internal.onmicrosoft.com
                        permission: Write
                      - name: client@external.com
                        permission: Read
              schema:
                properties:
                  shared_links:
                    items:
                      $ref: "#/components/schemas/sharedLink"
                    type: array
                  shared_with:
                    items:
                      $ref: "#/components/schemas/sharedSubject"
                    type: array
                required:
                  - shared_with
                  - shared_links
                type: object
          description: OK.
        "400":
          content:
            application/json:
              examples:
                Bad Request Data:
                  value:
                    error: The `x-casbapi-app` header must be a string.
                Invalid ID Format:
                  value:
                    error:
                      Our backend server can't keep processing via the request
                      data because the provided file ID isn’t the valid format.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Bad Request.
        "403":
          content:
            application/json:
              examples:
                App Capability Disabled:
                  value:
                    error: The app don't have the capability to list the file permissions.
                Permissions Not Allowed:
                  value:
                    error:
                      "FORBIDDEN: Request failed with status code 403. User does
                      not have permission to see page."
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Forbidden.
        "404":
          content:
            application/json:
              examples:
                Not found:
                  value:
                    error: Unable to fetch the file details in SaaS App.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Not Found.
        "429":
          content:
            application/json:
              examples:
                Too Many Requests:
                  value:
                    error:
                      Sent too many requests to fetch the file details in SaaS
                      App.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Too Many Requests.
        "500":
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    error: Our backend server encounters an unexpected condition.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Internal Server Error.
      summary: List entity permissions
    x-netskope-params:
      apiGroup: casbapi
      customerFacing: true
      nsBeta: true
      serviceConfig: steward
      version: 2
  /casbapi/retroscans:
    get:
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          content:
            application/json:
              examples:
                A list of retro scans:
                  $ref: "#/components/examples/retroScanList"
              schema:
                properties:
                  retroscans:
                    items:
                      $ref: "#/components/schemas/retroScan"
                    type: array
                  totalCount:
                    description: Total count of the retro scans.
                    format: int64
                    minimum: 0
                    type: integer
                required:
                  - totalCount
                  - retroscans
                type: object
          description: OK.
        "500":
          content:
            application/json:
              examples:
                Failed to list retro scans:
                  value:
                    error: Our backend server failed to list retro scans.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Internal Server Error.
      summary: List retro scans
    parameters:
      - $ref: "#/components/parameters/appName"
      - $ref: "#/components/parameters/instanceName"
    post:
      requestBody:
        content:
          application/json:
            examples:
              Create a retro scan:
                value:
                  name: create-retro-scan
            schema:
              $ref: "#/components/schemas/retroScan"
      responses:
        "201":
          content:
            application/json:
              examples:
                Create a retro scan:
                  value:
                    createTime: 1710232471
                    errors: 0
                    id: cno0refacc4ana1qcok0
                    lastChangedBy: ""
                    modifyTime: 1710232471
                    name: create-retro-scan
                    policyData: []
                    processed: 0
                    scanned: 0
                    state: STATE_READY
                    violations: {}
              schema:
                $ref: "#/components/schemas/retroScan"
          description: Created.
        "400":
          content:
            application/json:
              examples:
                Invalid request body:
                  value:
                    error: The requestBody property `name` is missing.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Bad Request.
      summary: Create a retro scan
    x-netskope-params:
      apiGroup: casbapi
      customerFacing: false
      nsBeta: true
      serviceConfig: steward
      version: 2
  /casbapi/retroscans/{rid}:
    delete:
      responses:
        "204":
          description: Retro scan deleted successfully.
        "400":
          content:
            application/json:
              examples:
                Invalid request path:
                  value:
                    error: The request path `rid` is invalid.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Bad Request.
      summary: Delete a retro scan
    get:
      responses:
        "200":
          content:
            application/json:
              examples:
                Get a retro scan:
                  $ref: "#/components/examples/retroScanResponse"
              schema:
                $ref: "#/components/schemas/retroScan"
          description: OK.
        "404":
          content:
            application/json:
              examples:
                Retro scan not found:
                  value:
                    error:
                      The retro scan with the given ID 'cno0refacc4ana1qcok0'
                      does not exist.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Not Found.
      summary: Get a retro scan
    parameters:
      - $ref: "#/components/parameters/appName"
      - $ref: "#/components/parameters/instanceName"
      - $ref: "#/components/parameters/retroScanId"
    put:
      requestBody:
        content:
          application/json:
            examples:
              Update a retro scan:
                value:
                  name: update-retro-scan
            schema:
              $ref: "#/components/schemas/retroScan"
      responses:
        "200":
          content:
            application/json:
              examples:
                Update a retro scan:
                  $ref: "#/components/examples/retroScanResponse"
              schema:
                $ref: "#/components/schemas/retroScan"
          description: OK.
        "400":
          content:
            application/json:
              examples:
                Invalid request body:
                  value:
                    error: The requestBody property `name` is missing.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Bad Request.
      summary: Update a retro scan
    x-netskope-params:
      apiGroup: casbapi
      customerFacing: false
      nsBeta: true
      serviceConfig: steward
      version: 2
  /casbapi/retroscans/{rid}/cancel:
    parameters:
      - $ref: "#/components/parameters/appName"
      - $ref: "#/components/parameters/instanceName"
      - $ref: "#/components/parameters/retroScanId"
    post:
      description:
        Permanently stop a retro scan. All retro scan activity terminates.
        After canceling, a retro scan is done and may never be resumed.
      responses:
        "200":
          content:
            application/json:
              examples:
                Successfully cancelled the retro scan:
                  value:
                    message: cancelled the retro scan successfully
              schema:
                $ref: "#/components/schemas/messageResponse"
          description: OK.
        "422":
          content:
            application/json:
              examples:
                Current state of the retro scan is not expected:
                  value:
                    error: Invalid state:STATE_COMPLETE, expected:STATE_SCANNING.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Unprocessable Entity.
      summary: Cancel a retro scan
    x-netskope-params:
      apiGroup: casbapi
      customerFacing: false
      nsBeta: true
      serviceConfig: steward
      version: 2
  /casbapi/retroscans/{rid}/pause:
    parameters:
      - $ref: "#/components/parameters/appName"
      - $ref: "#/components/parameters/instanceName"
      - $ref: "#/components/parameters/retroScanId"
    post:
      description:
        Pause all the activities of a retro scan. The retro scan may be
        started again and will resume where it left off.
      responses:
        "200":
          content:
            application/json:
              examples:
                Successfully paused the retro scan:
                  value:
                    message: paused the retro scan successfully
              schema:
                $ref: "#/components/schemas/messageResponse"
          description: OK.
        "422":
          content:
            application/json:
              examples:
                Current state of the retro scan is not expected:
                  value:
                    error: Invalid state:STATE_COMPLETE, expected:STATE_SCANNING.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Unprocessable Entity.
      summary: Pause a retro scan
    x-netskope-params:
      apiGroup: casbapi
      customerFacing: false
      nsBeta: true
      serviceConfig: steward
      version: 2
  /casbapi/retroscans/{rid}/policies:
    parameters:
      - $ref: "#/components/parameters/appName"
      - $ref: "#/components/parameters/instanceName"
      - $ref: "#/components/parameters/retroScanId"
    post:
      requestBody:
        content:
          application/json:
            examples:
              Create a retro scan's policy:
                $ref: "#/components/examples/retroScanPolicyRequest"
            schema:
              $ref: "#/components/schemas/retroScanPolicy"
      responses:
        "201":
          content:
            application/json:
              examples:
                Create a retro scan's policy:
                  $ref: "#/components/examples/retroScanPolicyResponse"
              schema:
                $ref: "#/components/schemas/retroScanPolicy"
          description: Created.
        "400":
          content:
            application/json:
              examples:
                Invalid request body:
                  value:
                    error: The requestBody property `attributes` is missing.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Bad Request.
        "422":
          content:
            application/json:
              examples:
                Cannot provide a retro scan's policy:
                  value:
                    error:
                      Cannot provide a retro scan policy with anything but one
                      instance.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Unprocessable Entity.
      summary: Create a retro scan's policy
    x-netskope-params:
      apiGroup: casbapi
      customerFacing: false
      nsBeta: true
      serviceConfig: steward
      version: 2
  /casbapi/retroscans/{rid}/policies/{pid}:
    delete:
      responses:
        "204":
          description: Retro scan's policy deleted successfully.
        "400":
          content:
            application/json:
              examples:
                Invalid request path:
                  value:
                    error: The request path `pid` is invalid.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Bad Request.
      summary: Delete a retro scan's policy
    get:
      responses:
        "200":
          content:
            application/json:
              examples:
                Get a retro scan's policy:
                  $ref: "#/components/examples/retroScanPolicyResponse"
              schema:
                $ref: "#/components/schemas/retroScanPolicy"
          description: OK.
        "404":
          content:
            application/json:
              examples:
                Retro scan's policy not found:
                  value:
                    error:
                      The retro scan's policy with the given ID 'cmo08eo5o5m18ng5s9f0'
                      does not exist.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Not Found.
      summary: Get a retro scan's policy
    parameters:
      - $ref: "#/components/parameters/appName"
      - $ref: "#/components/parameters/instanceName"
      - $ref: "#/components/parameters/retroScanId"
      - $ref: "#/components/parameters/policyId"
    put:
      requestBody:
        content:
          application/json:
            examples:
              Update a retro scan's policy:
                $ref: "#/components/examples/retroScanPolicyUpdateRequest"
            schema:
              $ref: "#/components/schemas/retroScanUpdatePolicy"
      responses:
        "200":
          content:
            application/json:
              examples:
                Update a retro scan's policy:
                  $ref: "#/components/examples/retroScanPolicyResponse"
              schema:
                $ref: "#/components/schemas/retroScanPolicy"
          description: OK.
        "400":
          content:
            application/json:
              examples:
                Invalid request body:
                  value:
                    error: The requestBody property `versionId` is missing.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Bad Request.
        "409":
          content:
            application/json:
              examples:
                Retro scan's policy version conflict:
                  value:
                    error:
                      The retro scan's policy change request with given version
                      ID 'cl78ji0o95o198gue850' has already been modified by someone
                      else. Please retry with the latest version ID.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Conflict.
        "422":
          content:
            application/json:
              examples:
                Cannot provide a retro scan's policy:
                  value:
                    error:
                      Cannot provide a retro scan policy with anything but one
                      instance.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Unprocessable Entity.
      summary: Update a retro scan's policy
    x-netskope-params:
      apiGroup: casbapi
      customerFacing: false
      nsBeta: true
      serviceConfig: steward
      version: 2
  /casbapi/retroscans/{rid}/start:
    parameters:
      - $ref: "#/components/parameters/appName"
      - $ref: "#/components/parameters/instanceName"
      - $ref: "#/components/parameters/retroScanId"
    post:
      description:
        The retro scan must have already been created. On success, the
        retro scan entities will be actively scanning until all entities have been
        scanned or the retro scan is explicitly paused or canceled.
      requestBody:
        content:
          application/json:
            examples:
              Start a retro scan:
                value:
                  epoch: 1710235658
            schema:
              properties:
                epoch:
                  description:
                    Epoch timestamp that indicates if the retro scan is
                    safe to start. The caller should pass the modifyTime of the retro
                    scan they see. If the app's retro scan's modifyTime is greater
                    than this value, the start will not execute. This is because the
                    assumption is that the caller who triggered the start is not looking
                    at the latest version of the retro scan and therefore doesn't
                    know exactly what they're starting.
                  format: int64
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                Successfully started the retro scan:
                  value:
                    message: started the retro scan successfully
              schema:
                $ref: "#/components/schemas/messageResponse"
          description: OK.
        "422":
          content:
            application/json:
              examples:
                Cannot start a retro scan with no policies:
                  value:
                    error: Cannot start a retro scan with no policies.
                The retro scan has been modified:
                  value:
                    error:
                      "The retro scan has been modified since last viewing; request
                      time: 2024-03-28 14:00:00, recorded time: 2024-03-28 14:01:30."
                There are already 1 retro scan(s) running:
                  value:
                    error: There are already 1 retro scan(s) running.
              schema:
                $ref: "#/components/schemas/errorResponse"
          description: Unprocessable Entity.
      summary: Start a retro scan
    x-netskope-params:
      apiGroup: casbapi
      customerFacing: false
      nsBeta: true
      serviceConfig: steward
      version: 2
