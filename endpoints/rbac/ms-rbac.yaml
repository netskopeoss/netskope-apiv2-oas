components:
  schemas:
    ApiGroupsDto:
      properties:
        apiGroupId:
          description: Api group id
          type: number
        constraints:
          description: Constraint details per apigroup
          items:
            $ref: "#/components/schemas/RoleConstraintResDto"
          type: array
        obfuscationScope:
          allOf:
            - $ref: "#/components/schemas/ObfuscationScope"
          description: Conditional obfuscation controlled by scope per apigroup
        obfuscations:
          description: Obfuscation details per apigroup
          items:
            $ref: "#/components/schemas/RoleObfuscationResDto"
          type: array
        permission:
          description: Permission provided to api group
          enum:
            - none
            - r
            - rw
            - rwa
          type: string
      required:
        - apiGroupId
        - permission
        - obfuscations
        - constraints
        - obfuscationScope
      type: object
    ConstraintObj:
      properties:
        constraintId:
          description: Constraint Id
          type: number
        constraintValues:
          description: list of Constraint Values
          items:
            type: string
          type: array
      required:
        - constraintId
        - constraintValues
      type: object
    GetRoleResponseDTO:
      properties:
        apiGroups:
          description: Api group details of the role
          items:
            $ref: "#/components/schemas/ApiGroupsDto"
          type: array
        isAliasNameTaken:
          description: Check if the role name is already a alias name
          type: boolean
        roleDescription:
          description: Role description
          type: string
        roleId:
          description: Role id requested
          type: number
        roleName:
          description: Role name
          type: string
        scopes:
          description: Global Scope details of the role
          items:
            $ref: "#/components/schemas/RoleScopeResDto"
          type: array
      required:
        - roleId
        - roleName
        - roleDescription
        - scopes
        - apiGroups
        - isAliasNameTaken
      type: object
    InOrNotIn:
      properties:
        "!in":
          description: list of array values excluded for scope
          items:
            type: string
          type: array
        in:
          description: list of array values included for scope
          items:
            type: string
          type: array
      type: object
    InternalServerError:
      properties:
        message:
          type: string
        path:
          type: string
        statusCode:
          default: 500
          type: number
        timestamp:
          format: date-time
          type: string
      required:
        - statusCode
        - message
        - path
        - timestamp
      type: object
    ObfuscationObj:
      properties:
        enableScope:
          type: boolean
        properties:
          description: list of obfuscation fields
          items:
            type: string
          type: array
        scope:
          additionalProperties:
            $ref: "#/components/schemas/InOrNotIn"
          description: Scope detail for a obfuscation
          example:
            email:
              in:
                - test@test.com
            groupname:
              "!in":
                - test@net.com
                - test2@nets.com
          type: object
      required:
        - properties
        - enableScope
        - scope
      type: object
    ObfuscationScope:
      properties:
        scopeEnabled:
          description: Is Conditional obfuscation Enabled
          type: boolean
        scopes:
          description: Conditional obfuscation scope data
          items:
            $ref: "#/components/schemas/RoleScopeResDto"
          type: array
      required:
        - scopeEnabled
        - scopes
      type: object
    PatchRoleRequestDto:
      properties:
        apiGroups:
          items:
            $ref: "#/components/schemas/UpdateRoleApiGroupDto"
          type: array
        roleDescription:
          type: string
        roleName:
          type: string
        scope:
          additionalProperties:
            $ref: "#/components/schemas/InOrNotIn"
          description: Scope detail for a api group in a role
          example:
            email:
              in:
                - test@test.com
            groupname:
              "!in":
                - test@net.com
                - test2@nets.com
          type: object
      type: object
    PatchRoleResponseDto:
      properties:
        roleId:
          type: number
      required:
        - roleId
      type: object
    PostRoleRequestDTO:
      properties:
        apiGroups:
          items:
            $ref: "#/components/schemas/UpdateRoleApiGroupDto"
          type: array
        roleDescription:
          type: string
        roleName:
          type: string
        scope:
          additionalProperties:
            $ref: "#/components/schemas/InOrNotIn"
          description: Scope detail for a api group in a role
          example:
            email:
              in:
                - test@test.com
            groupname:
              "!in":
                - test@net.com
                - test2@nets.com
          type: object
      required:
        - roleName
        - roleDescription
        - apiGroups
      type: object
    PostRoleResponseDTO:
      properties:
        roleId:
          type: number
      required:
        - roleId
      type: object
    PutRoleRequestDto:
      properties:
        apiGroups:
          items:
            $ref: "#/components/schemas/UpdateRoleApiGroupDto"
          type: array
        roleDescription:
          type: string
        roleName:
          type: string
        scope:
          additionalProperties:
            $ref: "#/components/schemas/InOrNotIn"
          description: Scope detail for a api group in a role
          example:
            email:
              in:
                - test@test.com
            groupname:
              "!in":
                - test@net.com
                - test2@nets.com
          type: object
      required:
        - roleName
        - roleDescription
        - apiGroups
      type: object
    PutRoleResponseDto:
      properties:
        roleId:
          type: number
      required:
        - roleId
      type: object
    RoleApiGroupObj:
      properties:
        apiGroupId:
          description: Api group id
          type: number
        apiGroupName:
          description: Api group unique name
          type: string
        apis:
          description: List of apis belongs to api group
          items:
            $ref: "#/components/schemas/RoleApiObj"
          type: array
        displayName:
          description: Api group display name
          type: string
        highestPermission:
          description: Highest permission allowed per api group
          enum:
            - none
            - r
            - rw
            - rwa
          type: string
        parentPageId:
          description: Parent page id, api group belongs to
          type: number
      required:
        - apiGroupId
        - apiGroupName
        - displayName
        - highestPermission
        - parentPageId
        - apis
      type: object
    RoleApiObj:
      properties:
        method:
          description: Method allowed
          enum:
            - get
            - post
            - put
            - delete
            - patch
          type: string
        name:
          description: Api registered to per api group
          type: string
      required:
        - name
        - method
      type: object
    RoleConfigResponseDto:
      properties:
        apiGroups:
          description: List of api group available
          items:
            $ref: "#/components/schemas/RoleApiGroupObj"
          type: array
        constraints:
          description: Constraint config for role
          items:
            $ref: "#/components/schemas/RoleConstraintsConfigResponseDto"
          type: array
        functions:
          description: List of functional area available
          items:
            $ref: "#/components/schemas/RoleFunctionObj"
          type: array
        obfuscations:
          description: Obfuscation config for role
          items:
            $ref: "#/components/schemas/RoleObfuscationConfigResponseDto"
          type: array
        pages:
          description: List of pages available
          items:
            $ref: "#/components/schemas/RolePageObj"
          type: array
        scopes:
          description: Scope config for role
          items:
            $ref: "#/components/schemas/RoleScopeConfigResponseDto"
          type: array
      required:
        - functions
        - pages
        - apiGroups
        - scopes
        - obfuscations
        - constraints
      type: object
    RoleConstraintResDto:
      properties:
        constraintId:
          description: Constraint Id
          type: number
        constraintValue:
          description: Constraint value
          type: string
        createdAt:
          description: Constraint created time
          format: date-time
          type: string
        updatedAt:
          description: Constraint updated time
          format: date-time
          type: string
      required:
        - constraintId
        - constraintValue
        - createdAt
        - updatedAt
      type: object
    RoleConstraintsConfigResponseDto:
      properties:
        apiGroupId:
          description: API Group Id constraint associated with
          type: number
        constraintId:
          description: Constraint variable Id
          type: number
        constraintLabel:
          description: Constraint display Label
          type: string
        constraintTableName:
          description: Constraint Table Name
          type: string
        constraintTableVariableName:
          description: Constraint Table Variable Name
          type: string
      required:
        - constraintId
        - apiGroupId
        - constraintTableVariableName
        - constraintTableName
        - constraintLabel
      type: object
    RoleFunctionObj:
      properties:
        id:
          description: Role functional area id
          type: number
        name:
          description: Role functional area name
          type: string
        subFunctions:
          description: List of sub functional area available to functional area
          items:
            $ref: "#/components/schemas/RoleSubFunctionObj"
          type: array
      required:
        - id
        - name
        - subFunctions
      type: object
    RoleNameViewDto:
      properties:
        description:
          description: details of the Role
          type: string
        name:
          description: Name of the Role
          type: string
        roleId:
          description: Id of the Role
          type: number
        type:
          description: Type of the Role {"predefined":1,"custom":0}
          enum:
            - 1
            - 0
          type: number
      required:
        - roleId
        - name
        - type
        - description
      type: object
    RoleObfuscationConfigResponseDto:
      properties:
        apiGroupId:
          description: API Group Id obfuscation associated with
          type: number
        obfuscationDescription:
          description: Obfuscation field description
          type: string
        obfuscationFieldId:
          description: Obfuscation field Id
          type: number
        obfuscationLabel:
          description: Obfuscation field Label
          type: string
        obfuscationName:
          description: Obfuscation field Name
          type: string
      required:
        - obfuscationFieldId
        - apiGroupId
        - obfuscationName
        - obfuscationDescription
        - obfuscationLabel
      type: object
    RoleObfuscationResDto:
      properties:
        createdAt:
          description: Obfuscation created time
          format: date-time
          type: string
        obfuscationFieldId:
          description: Obfuscation field Id
          type: number
        obfuscationValue:
          description: Obfuscation filed value
          type: boolean
        updatedAt:
          description: Obfuscation updated time
          format: date-time
          type: string
      required:
        - obfuscationFieldId
        - obfuscationValue
        - createdAt
        - updatedAt
      type: object
    RolePageObj:
      properties:
        displayName:
          description: Page display name
          type: string
        pageId:
          description: Page id
          type: number
        pageName:
          description: Page unique name
          type: string
      required:
        - pageId
        - pageName
        - displayName
      type: object
    RoleScopeConfigResponseDto:
      properties:
        allowedInObfuscation:
          description: Is Scope allowed in obfuscation
          type: boolean
        apiGroupId:
          description: Api group Id scope associated with
          type: number
        excludable:
          description: Does Scope field support exclude
          type: boolean
        scopeDescription:
          description: Scope field description
          type: string
        scopeFieldId:
          description: Scope field Id
          type: number
        scopeName:
          description: Scope unique field name
          type: string
      required:
        - excludable
        - scopeFieldId
        - apiGroupId
        - scopeName
        - scopeDescription
        - allowedInObfuscation
      type: object
    RoleScopeResDto:
      properties:
        createdAt:
          description: Scope created time
          format: date-time
          type: string
        excluded:
          description: Scope is excluded or included
          type: boolean
        scopeFieldId:
          description: Scope field Id
          type: number
        scopeValue:
          description: Scope filed value
          type: string
        updatedAt:
          description: Scope updated time
          format: date-time
          type: string
      required:
        - scopeFieldId
        - scopeValue
        - excluded
        - createdAt
        - updatedAt
      type: object
    RoleSubFunctionObj:
      properties:
        apiGroupIds:
          description: Api groups associated to sub functional area
          items:
            type: number
          type: array
        id:
          description: Role Sub functional area id
          type: number
        name:
          description: Role Sub functional area name
          type: string
        pageIds:
          description: Pages associated to sub functional area
          items:
            type: number
          type: array
      required:
        - id
        - name
        - pageIds
        - apiGroupIds
      type: object
    RoleViewDto:
      properties:
        aliasName:
          description: Alias name of the Role
          type: string
        createdBy:
          description: Role is created by
          type: string
        description:
          description: details of the Role
          type: string
        lastEdited:
          description: Role Updated at
          format: date-time
          type: string
        name:
          description: Name of the Role
          type: string
        obfuscated:
          description: Whether any data is obfuscated of the Role
          type: boolean
        roleId:
          description: Id of the Role
          type: number
        scoped:
          description: Whether any data is scoped of the Role
          type: boolean
        type:
          description: Type of the Role {"predefined":1,"custom":0}
          enum:
            - 1
            - 0
          type: number
      required:
        - roleId
        - name
        - type
        - obfuscated
        - scoped
        - description
        - lastEdited
        - createdBy
        - aliasName
      type: object
    UpdateRoleApiGroupDto:
      properties:
        apiGroupId:
          description: Api group id
          type: number
        constraints:
          description: Constraint detail for a page in a role
          items:
            $ref: "#/components/schemas/ConstraintObj"
          type: array
        obfuscation:
          allOf:
            - $ref: "#/components/schemas/ObfuscationObj"
          description: Obfuscation detail for a api group in a role
        permission:
          description: Permission provided to api group
          enum:
            - none
            - r
            - rw
            - rwa
          type: string
      required:
        - apiGroupId
        - permission
      type: object
    getRolesNameResponseDto:
      properties:
        count:
          description: Total number of roles fitting search criteria
          type: number
        roles:
          description: roles name list based on role Ids
          items:
            $ref: "#/components/schemas/RoleNameViewDto"
          type: array
      required:
        - count
        - roles
      type: object
    getRolesResponseDto:
      properties:
        count:
          description: Total number of roles fitting search criteria
          type: number
        roles:
          description: One page of roles list fitting search criteria
          items:
            $ref: "#/components/schemas/RoleViewDto"
          type: array
      required:
        - count
        - roles
      type: object
info:
  contact: {}
  description: RBAC api specification
  title: ms-rbac
  version: 1.0.0
openapi: 3.0.0
paths:
  /rbac/roles:
    get:
      description: This API return details of all roles, as filtered by query.
      operationId: RolesController_findAll
      parameters:
        - description: Filter Roles based on Obfuscation
          in: query
          name: obfuscation
          required: false
          schema:
            enum:
              - enabled
              - disabled
            type: string
        - description: Filter Roles based on Scope
          in: query
          name: scope
          required: false
          schema:
            enum:
              - limited
              - no_limit
            type: string
        - description: type of the Role
          in: query
          name: type
          required: false
          schema:
            enum:
              - custom
              - predefined
            type: string
        - description: Search substring in roles name
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: offset as the page start
          in: query
          name: offset
          required: false
          schema:
            type: number
        - description: limit should be between 1 and 100
          in: query
          name: limit
          required: false
          schema:
            type: number
        - in: query
          name: sortby
          required: false
          schema:
            type: string
        - description: Order asc or desc
          in: query
          name: sortorder
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getRolesResponseDto"
          description: List of Roles
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
          description: Internal server error
      summary: Get list of all Roles
      tags:
        - roles
    post:
      description: This API will create a new custom role.
      operationId: RolesController_createRole
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostRoleRequestDTO"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRoleResponseDTO"
          description: ""
        "400":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Missing header tenant id
                    type: string
                  path:
                    example: rbac/role/2
                    type: string
                  statusCode:
                    example: 400
                    type: integer
                  timestamp:
                    example: "2023-10-16T16:07:35.539Z"
                    type: string
                type: object
          description: Bad user input
        "500":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    type: string
                  path:
                    example: rbac/role/2
                    type: string
                  statusCode:
                    example: 500
                    type: integer
                  timestamp:
                    example: "2023-10-16T16:07:35.539Z"
                    type: string
                type: object
          description: Internal server error
      summary: Create new custom Role
      tags:
        - roles
    x-netskope-params:
      apiGroup: ms-rbac
      customerFacing: false
      nsBeta: true
      serviceConfig: ms-rbac
      version: 2
  /rbac/roles/config:
    get:
      description: This API will return metadata for creating roles.
      operationId: RolesController_getConfig
      parameters:
        - description: api group name to filter config
          in: query
          name: apigroup
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleConfigResponseDto"
          description: Config required to create roles
      summary: Get config for creating roles
      tags:
        - roles
    x-netskope-params:
      apiGroup: ms-rbac
      customerFacing: false
      nsBeta: true
      serviceConfig: ms-rbac
      version: 2
  /rbac/roles/name:
    get:
      description: This API will return the roles name for the requested ids.
      operationId: RolesController_findRolesNameByIds
      parameters:
        - description: comma separated role ids
          in: query
          name: roleids
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getRolesNameResponseDto"
          description: List of Roles
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
          description: Internal server error
      summary: Get names of requested Roles
      tags:
        - roles
    x-netskope-params:
      apiGroup: ms-rbac
      customerFacing: false
      nsBeta: true
      serviceConfig: ms-rbac
      version: 2
  /rbac/roles/{rid}:
    delete:
      description: This API will delete a custom role.
      operationId: RolesController_deleteRole
      parameters:
        - description: Role id
          in: path
          name: rid
          required: true
          schema:
            type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                  status: success
          description: ""
        "400":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Missing header tenant id
                    type: string
                  path:
                    example: rbac/role/2
                    type: string
                  statusCode:
                    example: 400
                    type: integer
                  timestamp:
                    example: "2023-10-16T16:07:35.539Z"
                    type: string
                type: object
          description: Bad user input
        "500":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    type: string
                  path:
                    example: rbac/role/2
                    type: string
                  statusCode:
                    example: 500
                    type: integer
                  timestamp:
                    example: "2023-10-16T16:07:35.539Z"
                    type: string
                type: object
          description: Internal server error
      summary: Delete the custom role
      tags:
        - roles
    get:
      description: This API will return the Roles detail for the requested role id.
      operationId: RolesController_getRole
      parameters:
        - description: Role id
          in: path
          name: rid
          required: true
          schema:
            type: number
        - description: apigroup name to filter roles details.
          in: query
          name: apigroup
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoleResponseDTO"
          description: Detail of a role
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
          description: Internal server error
      summary: Get Roles detail
      tags:
        - roles
    patch:
      description: This API will update a custom role.
      operationId: RolesController_updateRole
      parameters:
        - description: Role id
          in: path
          name: rid
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchRoleRequestDto"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatchRoleResponseDto"
          description: ""
        "400":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Missing header tenant id
                    type: string
                  path:
                    example: rbac/role/2
                    type: string
                  statusCode:
                    example: 400
                    type: integer
                  timestamp:
                    example: "2023-10-16T16:07:35.539Z"
                    type: string
                type: object
          description: Bad user input
        "500":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    type: string
                  path:
                    example: rbac/role/2
                    type: string
                  statusCode:
                    example: 500
                    type: integer
                  timestamp:
                    example: "2023-10-16T16:07:35.539Z"
                    type: string
                type: object
          description: Internal server error
      summary: Partial Update the custom role
      tags:
        - roles
    put:
      description: This API will Replace custom role details.
      operationId: RolesController_ReplaceRoleDetails
      parameters:
        - description: Role id
          in: path
          name: rid
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutRoleRequestDto"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutRoleResponseDto"
          description: ""
        "400":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Missing header tenant id
                    type: string
                  path:
                    example: rbac/role/2
                    type: string
                  statusCode:
                    example: 400
                    type: integer
                  timestamp:
                    example: "2023-10-16T16:07:35.539Z"
                    type: string
                type: object
          description: Bad user input
        "500":
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    type: string
                  path:
                    example: rbac/role/2
                    type: string
                  statusCode:
                    example: 500
                    type: integer
                  timestamp:
                    example: "2023-10-16T16:07:35.539Z"
                    type: string
                type: object
          description: Internal server error
      summary: Replace custom role with new details
      tags:
        - roles
    x-netskope-params:
      apiGroup: ms-rbac
      customerFacing: false
      nsBeta: true
      serviceConfig: ms-rbac
      version: 2
servers:
  - description: Development Server
    url: http://localhost:3022
