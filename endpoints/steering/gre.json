{
  "openapi": "3.0.0",
  "info": {
    "title": "steering-mgmt",
    "description": "steering mgmt service GRE CRUD operations.",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "gre_pop_response_200": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "total": {
            "type": "integer",
            "example": 1
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gre_pop_result_item"
            }
          }
        }
      },
      "gre_tunnel_request_post": {
        "type": "object",
        "properties": {
          "site": {
            "type": "string"
          },
          "srcipidentity": {
            "type": "string"
          },
          "pops": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "string"
            }
          },
          "vendor": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "sourcetype": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "enable": {
            "type": "boolean"
          },
          "options": {
            "type": "object",
            "properties": {
              "xff": {
                "type": "object",
                "properties": {
                  "enable": {
                    "type": "boolean",
                    "example": false
                  },
                  "iplist": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "gre_tunnel_request_patch": {
        "type": "object",
        "properties": {
          "site": {
            "type": "string"
          },
          "srcipidentity": {
            "type": "string"
          },
          "pops": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "string"
            }
          },
          "vendor": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "sourcetype": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "enable": {
            "type": "boolean"
          },
          "options": {
            "type": "object",
            "properties": {
              "xff": {
                "type": "object",
                "properties": {
                  "enable": {
                    "type": "boolean",
                    "example": false
                  },
                  "iplist": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "gre_tunnel_response_200": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "total": {
            "type": "integer",
            "example": 1
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gre_tunnel_result_item"
            }
          }
        }
      },
      "gre_patch_response_200": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "result": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gre_tunnel_result_item"
            }
          }
        }
      },
      "gre_response_200": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "result": {
            "type": "string"
          }
        }
      },
      "gre_response_201": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 201
          },
          "result": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gre_tunnel_result_item"
            }
          }
        }
      },
      "gre_response_400": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 400
          },
          "result": {
            "type": "string"
          }
        }
      },
      "gre_response_403": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 403
          },
          "result": {
            "type": "string"
          }
        }
      },
      "gre_response_404": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 404
          },
          "result": {
            "type": "string"
          }
        }
      },
      "gre_response_405": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 405
          },
          "result": {
            "type": "string"
          }
        }
      },
      "gre_response_409": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 409
          },
          "result": {
            "type": "string"
          }
        }
      },
      "gre_response_429": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 429
          },
          "result": {
            "type": "string"
          }
        }
      },
      "gre_response_500": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 500
          },
          "result": {
            "type": "string"
          }
        }
      },
      "gre_pop_result_item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "gateway": {
            "type": "string"
          },
          "probeip": {
            "type": "string"
          },
          "distance": {
            "type": "string"
          },
          "acceptingtunnels": {
            "type": "boolean"
          }
        }
      },
      "gre_tunnel_result_item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "site": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "sourcetype": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "srcipidentity": {
            "type": "string"
          },
          "pops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gre_tunnel_pop_result_item"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "options": {
            "type": "object",
            "properties": {
              "xff": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "example": false
                  },
                  "iplist": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "version": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "gre_tunnel_pop_result_item": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "gateway": {
            "type": "string"
          },
          "probeip": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          },
          "usertrafficStatus": {
            "type": "string"
          },
          "usertrafficLast": {
            "type": "string"
          },
          "keepaliveStatus": {
            "type": "string"
          },
          "keepaliveLast": {
            "type": "string"
          },
          "throughput": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/gre/pops": {
      "x-netskope-params": {
        "serviceConfig": "steering",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "gre"
      },
      "get": {
        "summary": "Get GRE points of presence(POPs) list",
        "description": "API to get list of GRE POPs. You can filter by parameters. Use one parameter at a time. Only lat and long should be used together. All parameters are allowed to use offset and limit in combination.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "POP name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "description": "POP region, requires ISO-3166 region code and return POPs closest to value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "description": "POP country, requires ISO-3166 country code and return POPs closest to value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "required": false,
            "description": "POP latitude, lat requires long in combination and return POPs closest to value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long",
            "in": "query",
            "required": false,
            "description": "POP longitude, long requires lat in combination and return POPs closest to value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ip",
            "in": "query",
            "required": false,
            "description": "POP ipaddress, return POPs closest to value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Provide comma separated list of fields to be displayed",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "Offset used to shift the output window",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of POPs to retrieve",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 0,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_pop_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_400"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_403"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_429"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_405"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_500"
                }
              }
            }
          }
        }
      }
    },
    "/gre/pops/{id}": {
      "x-netskope-params": {
        "serviceConfig": "steering",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "gre"
      },
      "get": {
        "summary": "Get GRE point of presence(POP)",
        "description": "API to get GRE POP using id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "POP id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Provide comma separated list of fields to be displayed",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_pop_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_400"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_403"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_404"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_405"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_429"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_500"
                }
              }
            }
          }
        }
      }
    },
    "/gre/tunnels": {
      "x-netskope-params": {
        "serviceConfig": "steering",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "gre"
      },
      "get": {
        "summary": "Get GRE tunnels list",
        "description": "API to get list of GRE tunnels. You can filter by parameters. Use one of these parameters at a time. Only offset and limit are allowed in combination with other parameters",
        "parameters": [
          {
            "name": "site",
            "in": "query",
            "required": false,
            "description": "GRE tunnel site",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srcipidentity",
            "in": "query",
            "required": false,
            "description": "GRE tunnel source ip identity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pop",
            "in": "query",
            "required": false,
            "description": "GRE tunnel POP name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "GRE tunnel status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourcetype",
            "in": "query",
            "required": false,
            "description": "GRE tunnel sourcetype",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortby",
            "in": "query",
            "required": false,
            "description": "GRE tunnel sortby column",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortorder",
            "in": "query",
            "required": false,
            "description": "GRE tunnel sortorder asc or desc. Default is asc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Provide comma separated list of fields to be displayed",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "Offset used to shift the window",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of records to retrieve",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 0,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_tunnel_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_400"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_403"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_405"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_429"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_500"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create GRE tunnel",
        "description": "API to create new GRE tunnel. You can pass json body with tunnel details.",
        "requestBody": {
          "description": "GRE tunnel object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/gre_tunnel_request_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_201"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_400"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_403"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_405"
                }
              }
            }
          },
          "409": {
            "description": "Already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_409"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_429"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_500"
                }
              }
            }
          }
        }
      }
    },
    "/gre/tunnels/{id}": {
      "x-netskope-params": {
        "serviceConfig": "steering",
        "version": 2,
        "customerFacing": true,
        "apiGroup": "gre"
      },
      "get": {
        "summary": "Get GRE tunnel",
        "description": "API to get GRE tunnel using id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "GRE tunnel id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Provide comma separated list of fields to be displayed",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_tunnel_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_400"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_403"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_404"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_405"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_429"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_500"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update GRE tunnel",
        "description": "API to update GRE tunnel using id. You can pass json body with fields that needs to be updated.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "GRE tunnel id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "GRE tunnel object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/gre_tunnel_request_patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_patch_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_400"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_403"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_404"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_405"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_429"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_500"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete GRE tunnel",
        "description": "API to delete GRE tunnel using id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "GRE tunnel id",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_200"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_403"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_404"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_405"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_429"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gre_response_500"
                }
              }
            }
          }
        }
      }
    }
  }
}
