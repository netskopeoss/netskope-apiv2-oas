components:
  schemas:
    npa_policy_request:
      properties:
        description:
          example: any
          type: string
        enabled:
          example: "1"
          type: string
        group_id:
          example: "1"
          type: string
        group_name:
          example: My policy group
          type: string
        rule_data:
          $ref: "#/components/schemas/npa_policy_rule_data"
        rule_name:
          example: vantest
          type: string
        rule_order:
          properties:
            order:
              enum:
                - top
                - bottom
                - before
                - after
              type: string
            position:
              example: 5
              type: integer
            rule_id:
              example: 1
              type: integer
            rule_name:
              example: api-policy-managed
              type: string
          type: object
      type: object
    npa_policy_response:
      items:
        $ref: "#/components/schemas/npa_policy_response_item"
      type: array
    npa_policy_response_400:
      properties:
        result:
          type: string
        status:
          example: 400
          type: integer
      type: object
    npa_policy_response_item:
      properties:
        group_id:
          example: 1
          type: integer
        rule_data:
          $ref: "#/components/schemas/npa_policy_rule_data"
        rule_id:
          example: 1
          type: integer
        rule_name:
          example: van-test
          type: string
      type: object
    npa_policy_rule_data:
      properties:
        access_method:
          enum:
            - Client
            - Clientless
          type: string
        b_negateNetLocation:
          type: boolean
        b_negateSrcCountries:
          type: boolean
        classification:
          type: string
        dlp_actions:
          $ref: "#/components/schemas/npa_policy_rule_dlp"
        external_dlp:
          type: boolean
        json_version:
          example: 3
          type: integer
        match_criteria_action:
          properties:
            action_name:
              enum:
                - allow
                - block
              type: string
          type: object
        net_location_obj:
          example:
            - 190.123.150.10
            - 190.218.0.0/16
          items:
            type: string
          type: array
        organization_units:
          example:
            - engineering/qa
          items:
            type: string
          type: array
        policy_type:
          enum:
            - private-app
          type: string
        privateAppIds:
          example:
            - "100"
            - "201"
          items:
            type: string
          type: array
        privateAppTagIds:
          example:
            - "1"
            - "2"
          items:
            type: string
          type: array
        privateAppTags:
          example:
            - tag1
            - tag2
          items:
            type: string
          type: array
        privateApps:
          example:
            - app1
            - app2
          items:
            type: string
          type: array
        privateAppsWithActivities:
          items:
            properties:
              activities:
                items:
                  properties:
                    activity:
                      enum:
                        - any
                      type: string
                    list_of_constraints:
                      example: []
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              appName:
                example: "[172.31.12.135]"
                type: string
            type: object
          type: array
        show_dlp_profile_action_table:
          type: boolean
        srcCountries:
          example:
            - US
            - AF
            - CN
          items:
            type: string
          type: array
        userGroups:
          example:
            - usergroup/group1
          items:
            type: string
          type: array
        userType:
          enum:
            - user
          type: string
        users:
          example:
            - vphan@netskope.com
          items:
            type: string
          type: array
        version:
          example: 1
          type: integer
      type: object
    npa_policy_rule_dlp:
      items:
        properties:
          actions:
            example:
              - allow
            items:
              enum:
                - allow
                - block
                - alert
                - quanrantine
                - bypass
              type: string
            type: array
          dlp_profile:
            example: Payment Card
            type: string
        type: object
      type: array
info:
  description: NPA policy CRUD operations.
  title: npa_policy
  version: 1.0.0
openapi: 3.0.0
paths:
  /policy/npa/rules:
    get:
      description: Get list of npa policies
      parameters:
        - description: Return values only from specified fields
          in: query
          name: fields
          required: false
          schema:
            type: string
        - description: Query string based on query operaters
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: Max number of policies to retrieve. Default will be all policies.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: The offset of the first policy in the list to retrieve.
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description:
            Sort retrieved policies by specified field. Default is policy
            id
          in: query
          name: sortby
          required: false
          schema:
            type: string
        - description: Sort in either asc or desc order. The default is asc order
          in: query
          name: sortorder
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/npa_policy_response"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/npa_policy_response_400"
          description: Invalid request
      summary: Get list of npa policies
    post:
      description: Create a policy
      parameters:
        - description: flag to skip output except status code
          in: query
          name: silent
          required: false
          schema:
            enum:
              - "1"
              - "0"
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/npa_policy_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/npa_policy_response_item"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/npa_policy_response_400"
          description: Invalid request
      summary: Create a npa policy
    x-netskope-params:
      apiGroup: npa_policy
      customerFacing: true
      rateLimit:
        readRoutes:
          hour: 1000
          second: 30
        writeRoutes:
          hour: 1000
          second: 30
      serviceConfig: provisioner-pycore-ws
      version: 2
  /policy/npa/rules/{id}:
    delete:
      description: Delete a npa policy with rule id
      parameters:
        - description: npa policy id
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/npa_policy_response_item"
                  status:
                    enum:
                      - success
                      - error
                    type: string
                type: object
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/npa_policy_response_400"
          description: Invalid request
      summary: Delete a npa policy
    get:
      description: Get a npa policy based on policy rule id
      parameters:
        - description: npa policy id
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
        - description: Return values only from specified fields
          in: query
          name: fields
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/npa_policy_response_item"
                  status:
                    enum:
                      - success
                      - error
                    type: string
                type: object
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/npa_policy_response_400"
          description: Invalid request
      summary: Get a npa policy
    patch:
      description: Patch a npa policy based on rule id
      parameters:
        - description: policy rule id
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
        - description: flag to skip output except status code
          in: query
          name: silent
          required: false
          schema:
            enum:
              - "1"
              - "0"
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/npa_policy_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/npa_policy_response_item"
                  status:
                    enum:
                      - success
                      - error
                    type: string
                type: object
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/npa_policy_response_400"
          description: Invalid request
      summary: Patch a npa policy
    x-netskope-params:
      apiGroup: npa_policy
      customerFacing: true
      rateLimit:
        readRoutes:
          hour: 1000
          second: 30
        writeRoutes:
          hour: 1000
          second: 30
      serviceConfig: provisioner-pycore-ws
      version: 2
