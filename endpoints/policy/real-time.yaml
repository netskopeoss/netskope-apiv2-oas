components:
  schemas:
    CreateOrUpdateMissingDataSuccessResponseObject:
      properties:
        message:
          type: string
      type: object
    DataLossPreventionConfigObject:
      properties:
        continuePolicyEvaluation:
          default: false
          description:
            Whether to continue policy evaluation after the match or not.
            Default value is false. It can only be set to true if at-least one profile
            action is of type "alert". Please note that when a match occurs for a
            profile with an action other than "alert", Netskope stops processing your
            policies.
          type: boolean
        profiles:
          items:
            $ref: "#/components/schemas/DataLossPreventionProfileObject"
          type: array
      required:
        - profiles
      type: object
    DataLossPreventionProfileObject:
      properties:
        action:
          enum:
            - block
            - allow
            - alert
            - useralert
          type: string
        profileId:
          type: string
        templateId:
          description:
            Template id is required and only allowed if the action type
            is "block" or "useralert". If set for action "allow" or "alert" a 400
            error is returned.
          type: string
      required:
        - profileId
        - action
      type: object
    DestinationCriteriaAppOrCategoryObject:
      properties:
        activities:
          items:
            type: string
          type: array
        ids:
          items:
            type: string
          type: array
      required:
        - ids
        - activities
      type: object
    DestinationCriteriaConfigObject:
      oneOf:
        - properties:
            applications:
              $ref: "#/components/schemas/DestinationCriteriaAppOrCategoryObject"
          type: object
        - properties:
            categories:
              $ref: "#/components/schemas/DestinationCriteriaAppOrCategoryObject"
          type: object
      type: object
    ErrorResponseObject:
      properties:
        message:
          type: string
      type: object
    NetworkLocationSourceCriteriaObject:
      properties:
        exclude:
          default: false
          type: boolean
        networkLocationProfileIds:
          items:
            type: string
          type: array
      required:
        - networkLocationProfileIds
      type: object
    OnCriteriaMatchObject:
      description:
        '"Threat Protection" and "Data Loss Prevention" are mutually exclusive.
        Only 1 of those criteria could be specified. If no "Threat Protection" and
        "Data Loss Prevention" criteria is specified, a default action must be provided.'
      properties:
        action:
          description:
            Policy action if no "Threat Protection" or "DLP" profile is
            specified. Or if policy matches but Threat Protection and DLP content
            scan does not detect anything. Also note that if "Continue Policy Evaluation"
            is set to true for "DLP" policy, this action is unavailable and cannot
            be set.
          enum:
            - block
            - allow
            - alert
          type: string
        dataLossPrevention:
          $ref: "#/components/schemas/DataLossPreventionConfigObject"
        templateId:
          description: Template id is required only if the action type is "block".
          type: string
        threatProtection:
          $ref: "#/components/schemas/ThreatProtectionConfigObject"
      type: object
    PolicyPriorityObject:
      properties:
        policyGroupId:
          type: string
        position:
          description:
            position where this policy will be inserted within the containing
            group, use 0 to insert at beginning or -1 to insert at end
          type: integer
      required:
        - policyGroupId
        - position
      type: object
    RTPReadObject:
      properties:
        description:
          type: string
        destinationCriteria:
          $ref: "#/components/schemas/DestinationCriteriaConfigObject"
        enabled:
          type: boolean
        id:
          type: string
        name:
          type: string
        onCriteriaMatch:
          $ref: "#/components/schemas/OnCriteriaMatchObject"
        priority:
          $ref: "#/components/schemas/PolicyPriorityObject"
        sourceCriteria:
          $ref: "#/components/schemas/SourceCriteriaConfigObject"
      type: object
    RTPRequestPayloadObject:
      properties:
        description:
          type: string
        destinationCriteria:
          $ref: "#/components/schemas/DestinationCriteriaConfigObject"
        enabled:
          default: true
          type: boolean
        name:
          type: string
        onCriteriaMatch:
          $ref: "#/components/schemas/OnCriteriaMatchObject"
        priority:
          $ref: "#/components/schemas/PolicyPriorityObject"
        sourceCriteria:
          $ref: "#/components/schemas/SourceCriteriaConfigObject"
      required:
        - name
        - priority
        - onCriteriaMatch
        - destinationCriteria
      type: object
    SourceCriteriaConfigObject:
      properties:
        httpHeaderProfileIds:
          items:
            type: string
          type: array
        network:
          anyOf:
            - properties:
                userIp:
                  $ref: "#/components/schemas/NetworkLocationSourceCriteriaObject"
              type: object
            - properties:
                egressIp:
                  $ref: "#/components/schemas/NetworkLocationSourceCriteriaObject"
              type: object
          type: object
        userConfidenceIndex:
          properties:
            operator:
              enum:
                - lt
                - gt
              type: string
            score:
              maximum: 1000
              minimum: 0
              type: integer
          type: object
    ThreatProtectionAction:
      properties:
        action:
          enum:
            - block
            - allow
            - alert
          type: string
        templateId:
          description:
            Template id is only required if the action type is "block".
            If set for action "allow" or "alert" a 400 error is returned.
          type: string
      required:
        - action
      type: object
    ThreatProtectionConfigObject:
      properties:
        actions:
          properties:
            highSeverity:
              $ref: "#/components/schemas/ThreatProtectionAction"
            lowSeverity:
              $ref: "#/components/schemas/ThreatProtectionAction"
            mediumSeverity:
              $ref: "#/components/schemas/ThreatProtectionAction"
          required:
            - lowSeverity
            - mediumSeverity
            - highSeverity
          type: object
        patientZeroProtection:
          default: false
          type: boolean
        profileId:
          type: string
      required:
        - profileId
        - actions
      type: object
info:
  description: Real-Time Policy API specification.
  title: Real-Time Policy APIs
  version: 0.0.1
openapi: 3.0.0
paths:
  /policy/realtime/rules:
    get:
      parameters:
        - example:
            id, name, enabled, description, priority, sourceCriteria, destinationCriteria,
            onCriteriaMatch
          in: query
          name: fields
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/RTPReadObject"
                type: array
          description: The record is retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Bad Request.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Internal server error.
      summary: Get all Real-Time Policies.
      tags:
        - real-time-policy
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RTPRequestPayloadObject"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/RTPReadObject"
                  - $ref: "#/components/schemas/CreateOrUpdateMissingDataSuccessResponseObject"
          description: The record has been successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Bad request.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Internal server error.
      summary: Create a new Real-Time Policy.
      tags:
        - real-time-policy
    x-netskope-params:
      apiGroup: real-time-policy
      customerFacing: true
      nsPartner: true
      rateLimit:
        readRoutes:
          second: 4
        writeRoutes:
          second: 1
      serviceConfig: ms-rtp-shim
      version: 2
  /policy/realtime/rules/{id}:
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                  name:
                    type: string
                type: object
          description: The record has been successfully deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Internal server error.
      summary: Delete a Real-Time Policy.
      tags:
        - real-time-policy
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RTPReadObject"
          description: The record is retrieved successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Internal server error.
      summary: Get a Real-Time Policy by id.
      tags:
        - real-time-policy
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RTPRequestPayloadObject"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/RTPReadObject"
                  - $ref: "#/components/schemas/CreateOrUpdateMissingDataSuccessResponseObject"
          description: The record has been successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseObject"
          description: Internal server error.
      summary: Update a Real-Time Policy.
      tags:
        - real-time-policy
    x-netskope-params:
      apiGroup: real-time-policy
      customerFacing: true
      nsPartner: true
      rateLimit:
        readRoutes:
          second: 4
        writeRoutes:
          second: 1
      serviceConfig: ms-rtp-shim
      version: 2
