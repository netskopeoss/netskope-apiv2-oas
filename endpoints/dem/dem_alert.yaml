components:
  schemas:
    Alert:
      properties:
        alertCategory:
          $ref: "#/components/schemas/AlertCategory"
        alertRule:
          properties:
            id:
              description: alert rule id
              type: integer
            name:
              description: alert rule name
              type: string
          type: object
        alertType:
          $ref: "#/components/schemas/AlertType"
        closeTime:
          description: alert close time in unix time in second
          format: int64
          type: integer
        condition:
          description: condition by which the alert was triggered
          type: string
        id:
          type: string
        impactType:
          description: type of the entity impacted by the alert
          type: string
        impacts:
          items:
            properties:
              id:
                description: id of the impacted entity
                type: string
              name:
                description: name of the impacted entity
                type: string
            type: object
          type: array
        lastUpdateTime:
          description: alert's last update time in unix time in second
          format: int64
          type: integer
        notifications:
          items:
            $ref: "#/components/schemas/Notification"
          type: array
        openTime:
          description: alert start time in unix time in second
          format: int64
          type: integer
        severity:
          $ref: "#/components/schemas/AlertSeverity"
        status:
          $ref: "#/components/schemas/AlertStatus"
      type: object
    AlertCategory:
      enum:
        - Network
        - Platform
        - Private Apps
      type: string
    AlertEntityDetail:
      properties:
        entities:
          items:
            $ref: "#/components/schemas/ImpactEntity"
          type: array
        limit:
          description: limit of entities returned
          format: int32
          type: integer
        offset:
          description: current offset
          format: int32
          type: integer
        totalCount:
          description: total count of entities impacted by the alert
          format: int32
          type: integer
      type: object
    AlertGeoDetail:
      properties:
        geolocations:
          items:
            properties:
              geo:
                $ref: "#/components/schemas/GeoLocation"
              impactedPops:
                format: int32
                type: integer
              impactedPublishers:
                format: int32
                type: integer
              impactedServices:
                format: int32
                type: integer
              impactedUsers:
                format: int32
                type: integer
              name:
                type: string
              status:
                type: string
            type: object
          type: array
        impactType:
          description: type of the impacted entities
          type: string
        totalCount:
          format: int32
          type: integer
      type: object
    AlertQuery:
      properties:
        alertCategory:
          description: alert rule categories
          items:
            $ref: "#/components/schemas/AlertCategory"
          type: array
        alertType:
          description: alert rule types
          items:
            $ref: "#/components/schemas/AlertType"
          type: array
        id:
          description: id of an alert for look up
          type: string
        limit:
          default: 10
          description: the maximun number of alerts returned to caller; for pagination
          format: int32
          type: integer
        offset:
          default: 0
          description:
            the starting offset from which found alerts will be returned;
            for pagination
          format: int32
          type: integer
        openTime:
          description: Open time for filtering alerts
          format: int64
          type: integer
        severity:
          description: severity levels of alerts
          items:
            $ref: "#/components/schemas/AlertSeverity"
          type: array
        sortBy:
          description: for the sorting order when querying alerts
          properties:
            desc:
              default: false
              description: whether sorting in desc order
              type: boolean
            field:
              description:
                field name for sorting; sortable field (alertCategory,
                alertType, severity, status, openTime)
              type: string
          type: object
      type: object
    AlertRuleCondition:
      properties:
        filter:
          $ref: "#/components/schemas/AlertRuleFilter"
        measure:
          description: name of the measurement
          type: string
        thresholds:
          $ref: "#/components/schemas/ThresholdCondition"
        window:
          description: time window in seconds withing whih metrics are aggregated
          format: int32
          type: integer
      type: object
    AlertRuleCriteria:
      oneOf:
        - properties:
            condition:
              $ref: "#/components/schemas/AlertRuleCondition"
          type: object
        - properties:
            and:
              items:
                $ref: "#/components/schemas/AlertRuleCondition"
              type: array
          type: object
        - properties:
            or:
              items:
                $ref: "#/components/schemas/AlertRuleCondition"
              type: array
          type: object
      properties:
        duration:
          description: the amount of time in seconds that the threshold must be violated
          format: int32
          type: integer
      type: object
    AlertRuleFilter:
      oneOf:
        - properties:
            scopeEntity:
              $ref: "#/components/schemas/ScopeEntity"
          type: object
        - properties:
            and:
              items:
                $ref: "#/components/schemas/AlertRuleFilter"
              type: array
          type: object
        - properties:
            or:
              items:
                $ref: "#/components/schemas/AlertRuleFilter"
              type: array
          type: object
        - properties:
            not:
              items:
                $ref: "#/components/schemas/AlertRuleFilter"
              type: array
          type: object
    AlertRuleResponse:
      allOf:
        - $ref: "#/components/schemas/PostAlertRuleRequest"
        - properties:
            id:
              type: string
            lastUpdateTime:
              description: unix time in second when the rule was last updated
              format: int64
              type: integer
            numOfAlerts:
              description: number of active alerts
              format: int32
              type: integer
    AlertSeverity:
      description: alert severity
      enum:
        - info
        - low
        - medium
        - high
        - critical
      type: string
    AlertStatus:
      enum:
        - open
        - closed
        - expired
        - obsolete
      type: string
    AlertType:
      enum:
        - Tunnel Status
        - Tunnel Flapping
        - Service Status
        - Publisher Resource Consumption
      type: string
    ErrorResponse:
      properties:
        code:
          description: short code for types of DEM backend error
          type: string
        id:
          description: id (UUID) of the error
          type: string
        message:
          description: user facing message for the error
          type: string
      type: object
    GeoLocation:
      properties:
        city:
          type: string
        country:
          type: string
        latitude:
          format: int64
          type: integer
        longitude:
          format: int64
          type: integer
        state:
          type: string
      type: object
    ImpactEntity:
      properties:
        impactType:
          description: type of the impacted entity
          type: string
        metricType:
          description: type of the metric for the entity
          type: string
        metricValues:
          items:
            $ref: "#/components/schemas/MetricValue"
          type: array
        name:
          description: name of the impacted entity
          type: string
        pop:
          description: netskope pop associated with the impacted entity
          type: string
        publisher:
          description: name of NPA publisher
          type: string
        resource:
          description: name of publisher resource
          type: string
        service:
          description: name of platform service
          type: string
        site:
          description: name of a tunnel site
          type: string
        sourceIP:
          description: source IP of a tunnel
          type: string
        status:
          description: the latest status of the impacted entity
          enum:
            - triggered
            - resolved
          type: string
      type: object
    MetricValue:
      properties:
        timestamp:
          description: unix time in second
          format: int64
          type: integer
        value:
          format: int64
          type: integer
      type: object
    Notification:
      properties:
        alertId:
          format: int64
          type: integer
        notifyAt:
          description: timestamp when notification is sent
          format: int64
          type: integer
        receiverId:
          format: int64
          type: integer
        receiverName:
          description: name of the receiver
          type: string
        receiverType:
          $ref: "#/components/schemas/ReceiverType"
        status:
          description: status of notification
          enum:
            - pending
            - processed
            - error
          type: string
      type: object
    PatchAlertRuleRequest:
      properties:
        enabled:
          description: whether the alert rule is enabled
          type: boolean
      type: object
    PatchReceiverRequest:
      description: request object for partially updating receiver
      properties:
        disabled:
          description: disable or enable a receiver
          type: boolean
        name:
          type: string
        ownerEmail:
          type: string
      type: object
    PostAlertRuleRequest:
      properties:
        category:
          $ref: "#/components/schemas/AlertCategory"
        criteria:
          $ref: "#/components/schemas/AlertRuleCriteria"
        criteriaType:
          description: condition for alert trigger; only support one type - event
          type: string
        emailReceiver:
          description: emails to receive alert notification
          type: string
        enabled:
          default: true
          description: whether the alert rule is enabled
          type: boolean
        name:
          type: string
        severity:
          $ref: "#/components/schemas/AlertSeverity"
        type:
          $ref: "#/components/schemas/AlertType"
        webhookReceivers:
          items:
            properties:
              id:
                description: id of notification receiver
                type: string
            type: object
          type: array
      type: object
    PostReceiverRequest:
      allOf:
        - $ref: "#/components/schemas/ReceiverSetting"
        - properties:
            name:
              description: name of the receiver
              type: string
            type:
              $ref: "#/components/schemas/ReceiverType"
    ReceiverResponse:
      allOf:
        - $ref: "#/components/schemas/PostReceiverRequest"
        - properties:
            id:
              type: string
            lastConnectTime:
              description: timestamp when the receiver was last connected
              format: int64
              type: integer
            lastUpdateTime:
              description: timestamp when the receiver was last updated
              format: int64
              type: integer
            numOfRules:
              description: number of alert rules associated to the receiver
              format: int32
              type: integer
            status:
              $ref: "#/components/schemas/ReceiverStatus"
    ReceiverSetting:
      oneOf:
        - properties:
            slackSettings:
              properties:
                ownerEmail:
                  description:
                    email for receiving messages when the backend fails in
                    setting alert notification to the slack
                  type: string
                url:
                  description: url for slack webhook connection
                  type: string
              type: object
          type: object
        - properties:
            webhookSettings:
              properties:
                customHeaders:
                  items:
                    properties:
                      key:
                        description: key of the custom header
                        type: string
                      value:
                        description: value of the custom header
                        type: string
                    type: object
                  type: array
                ownerEmail:
                  description:
                    email for receiving messages when the backend fails in
                    setting alert notification to the custom webhook
                  type: string
                url:
                  description: url for custom webhook connection
                  type: string
              type: object
          type: object
    ReceiverStatus:
      description: notification receiver status
      enum:
        - verified
        - error_connection
        - error_auth
      type: string
    ReceiverStatusRequest:
      allOf:
        - $ref: "#/components/schemas/ReceiverSetting"
        - properties:
            type:
              $ref: "#/components/schemas/ReceiverType"
      description: request object for checking webhook receiver status
    ReceiverStatusResponse:
      description: response object for checking webhook receiver status
      properties:
        status:
          $ref: "#/components/schemas/ReceiverStatus"
      type: object
    ReceiverType:
      description: type of notification receiver
      enum:
        - webhook
        - slack
      type: string
    ScopeEntity:
      properties:
        attributes:
          additionalProperties:
            type: string
          description: additional attributes of the scope entity
          type: object
        id:
          description: id of the scope entity
          type: string
        name:
          description: name of the scope entity
          type: string
        pop:
          description: netskope pop associated with the scope entity
          type: string
        service:
          description: name of service
          type: string
        type:
          description: type of the alert rule scope entity
          type: string
      type: object
    Threshold:
      oneOf:
        - properties:
            eq:
              additionalProperties:
                type: number
              description: threshold with equal condition
              type: object
          type: object
        - properties:
            ge:
              additionalProperties:
                type: number
              description: threshold with greater or equal to condition
              type: object
          type: object
        - properties:
            le:
              additionalProperties:
                type: number
              description: threshold with less or equal to condition
              type: object
          type: object
    ThresholdCondition:
      oneOf:
        - properties:
            threshold:
              $ref: "#/components/schemas/Threshold"
          type: object
        - properties:
            and:
              items:
                $ref: "#/components/schemas/ThresholdCondition"
              type: array
          type: object
        - properties:
            or:
              items:
                $ref: "#/components/schemas/ThresholdCondition"
              type: array
          type: object
info:
  contact:
    email: hliu@netskope.com
  description:
    APIs for CRUD operations on alert/notification configurations and for
    getting data on alert entities
  title: Netskope DEM Alert Backend endpoints
  version: ""
openapi: 3.0.3
paths:
  /dem/alert/receiver/templates:
    get:
      operationId: getReceiverTemplates
      parameters:
        - description: type of the notification receivers for filtering
          in: query
          name: receiverType
          required: false
          schema:
            $ref: "#/components/schemas/ReceiverType"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    messageTemplate:
                      description: message template for the receiver
                      type: string
                    receiverType:
                      description: type of the receiver
                      type: string
                  type: object
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid status value
      summary: Get message templates for notification receivers
      tags:
        - alert receiver
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alert/receivers:
    get:
      operationId: findReceivers
      parameters:
        - description: status of receiver
          in: query
          name: status
          required: false
          schema:
            $ref: "#/components/schemas/ReceiverStatus"
        - description: type of the notification channels for filtering
          in: query
          name: type
          required: false
          schema:
            $ref: "#/components/schemas/ReceiverType"
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  receivers:
                    items:
                      $ref: "#/components/schemas/ReceiverResponse"
                    type: array
                  remainingQuota:
                    description: remaining quota on allowed webhook receivers
                    format: int32
                    type: integer
                  totalCount:
                    description: total number of receivers matching the query criteria
                    format: int32
                    type: integer
                type: object
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid status value
      summary: Finds notification receivers/channels by query parameters
      tags:
        - alert receiver
    post:
      description: Add a new notification receiver/channel
      operationId: addReceiver
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostReceiverRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReceiverResponse"
          description: Successful operation
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input; validation exception
      summary: Add a new notification receiver/channel
      tags:
        - alert receiver
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alert/receivers/getstatus:
    post:
      description: Get the status of a notification receiver/channel
      operationId: getReceiverStatus
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReceiverStatusRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ReceiverStatusResponse"
                type: array
          description: successful operation
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input; validation exception
      summary: Get the status of a notification receiver/channel
      tags:
        - alert receiver
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alert/receivers/{id}:
    delete:
      description: delete a notification receiver/channel
      operationId: deleteReceiver
      parameters:
        - description: Notification receiver/channel id to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  message:
                    description: message specifying the receiver has been deleted
                    example: Notification receiver with ID xx has been deleted
                    type: string
                type: object
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid notification channel id
      summary: Deletes a notification receiver/channel
      tags:
        - alert receiver
    get:
      description: Returns a single notification receiver/channel
      operationId: getReceiverById
      parameters:
        - description: ID of notification receiver/channel to return
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReceiverResponse"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid ID supplied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Notification channel not found
      summary: Find notification receiver/channel by ID
      tags:
        - alert receiver
    patch:
      description:
        Update the name of an existing receiver, or disable/enable a receiver;
        Use update request for changing other receiver settings
      operationId: patchReceiverById
      parameters:
        - description: ID of notification receiver/channel to return
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchReceiverRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReceiverResponse"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid ID supplied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Notification channel not found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Validation exception
      summary: Patch an existing notification receiver/channel
      tags:
        - alert receiver
    put:
      description: Update an existing receiver
      operationId: updateReceiverById
      parameters:
        - description: ID of notification receiver/channel to return
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostReceiverRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReceiverResponse"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid ID supplied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Notification channel not found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Validation exception
      summary: Update an existing notification receiver/channel
      tags:
        - alert receiver
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alert/rules:
    get:
      operationId: findAlertRules
      parameters:
        - description: category of the alerts for filtering
          in: query
          name: category
          required: false
          schema:
            $ref: "#/components/schemas/AlertCategory"
        - description: type of the alerts for filtering
          in: query
          name: type
          required: false
          schema:
            $ref: "#/components/schemas/AlertType"
        - description: enabled flag for filtering
          in: query
          name: enabled
          required: false
          schema:
            type: boolean
        - description: severity of the alert rules for filtering
          in: query
          name: severity
          required: false
          schema:
            $ref: "#/components/schemas/AlertSeverity"
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  remainingQuota:
                    description: remaining quota on allowed alert rules
                    format: int32
                    type: integer
                  rules:
                    items:
                      $ref: "#/components/schemas/AlertRuleResponse"
                    type: array
                  totalCount:
                    description: total number of alerts rulesmatching the query criteria
                    format: int32
                    type: integer
                type: object
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid status value
      summary: Finds alert rules by query parameters
      tags:
        - alert rule
    post:
      description: Add a new alert rule
      operationId: addAlertRule
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostAlertRuleRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRuleResponse"
          description: Successful operation
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid input; validation exception
      summary: Add a new alert rule
      tags:
        - alert rule
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alert/rules/entities:
    get:
      operationId: findAlertScopeEntities
      parameters:
        - description: type of the alert scope entity
          in: query
          name: entityType
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  entities:
                    items:
                      $ref: "#/components/schemas/ScopeEntity"
                    type: array
                  totalCount:
                    description: total number of entities matching the query criteria
                    format: int32
                    type: integer
                type: object
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid status value
      summary: Finds the scope entities for the specified alert type
      tags:
        - alert rule
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alert/rules/{id}:
    delete:
      description: delete an alert rule
      operationId: deleteAlertRule
      parameters:
        - description: Alert Rule id to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  message:
                    description: message specifying the rule has been deleted
                    example: Alert rule with ID xx has been deleted
                    type: string
                type: object
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid alert rule id
      summary: Deletes an alert rule
      tags:
        - alert rule
    get:
      description: Returns a single alert rule
      operationId: getAlertRuleById
      parameters:
        - description: ID of alert rule to return
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRuleResponse"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid ID supplied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Alert rule not found
      summary: Find alert rule by ID
      tags:
        - alert rule
    patch:
      description: Update allowed properties of an existing alert rule by Id
      operationId: patchAlertRule
      parameters:
        - description: Alert Rule id to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchAlertRuleRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRuleResponse"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid ID supplied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Alert rule not found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Validation exception
      summary: Update allowed properties of an existing alert rule
      tags:
        - alert rule
    put:
      description: Update/Overwrite an existing alert rule by Id
      operationId: updateAlertRule
      parameters:
        - description: Alert Rule id to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostAlertRuleRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRuleResponse"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid ID supplied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Alert rule not found
        "405":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Validation exception
      summary: Update/Overwrite an existing alert rule
      tags:
        - alert rule
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alerts/getalerts:
    post:
      operationId: findAlerts
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertQuery"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  alerts:
                    items:
                      $ref: "#/components/schemas/Alert"
                    type: array
                  limit:
                    format: int32
                    type: integer
                  offset:
                    description: current offset of the returned records
                    format: int32
                    type: integer
                  totalCount:
                    description: total number of alerts matching the query criteria
                    format: int32
                    type: integer
                type: object
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid request parameter value
      summary: Finds alerts by query parameters
      tags:
        - alert
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alerts/{id}:
    get:
      description: Returns a single alert record
      operationId: getAlertById
      parameters:
        - description: ID of the alert record to return
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alert"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Alert record not found
      summary: Find alert record by ID
      tags:
        - alert
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alerts/{id}/entities:
    get:
      description: Returns a list of impactedEntities
      operationId: getAlertEntities
      parameters:
        - description: ID of the alert record to return
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: offset of the impacted entities
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: number of the impacted entities to return
          in: query
          name: limit
          required: false
          schema:
            default: 5
            format: int32
            type: integer
        - description: fields for sorting query results
          in: query
          name: sortby
          required: false
          schema:
            type: string
        - description: ordering direction for sorting query results
          in: query
          name: sortorder
          required: false
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - description:
            granularity of the metric values for the impact entities (in
            seconds)
          in: query
          name: granularity
          required: false
          schema:
            default: 5
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertEntityDetail"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid ID supplied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Alert record not found
      summary: Find details of entities impacted by the alert
      tags:
        - alert
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
  /dem/alerts/{id}/geolocations:
    get:
      description: Returns a list of geo locations associated with the alert
      operationId: getAlertGeoLocations
      parameters:
        - description: ID of the alert record to return
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertGeoDetail"
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Invalid ID supplied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Alert record not found
      summary: Find geo locations impacted by the alert
      tags:
        - alert
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem_alert
      customerFacing: true
      serviceConfig: dem-alert
      version: 2
tags:
  - description: Alerts triggered
    name: alert
  - description: Alert rule configuration
    name: alert rule
  - description: Alert receiver configuration
    name: alert receiver
