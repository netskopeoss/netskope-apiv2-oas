components:
  schemas:
    AbsoluteDate:
      properties:
        absolute:
          format: date-time
          title: Absolute
          type: string
      required:
        - absolute
      title: AbsoluteDate
      type: object
    DefinitionsComparisonOutput:
      properties:
        name:
          title: Name
          type: string
        type:
          enum:
            - binary
            - logical
            - unary
          title: Type
          type: string
      required:
        - name
        - type
      title: DefinitionsComparisonOutput
      type: object
    DefinitionsFieldOutput:
      properties:
        name:
          title: Name
          type: string
        sources:
          items:
            type: string
          title: Sources
          type: array
      required:
        - name
        - sources
      title: DefinitionsFieldOutput
      type: object
    DefinitionsFunctionOutput:
      properties:
        name:
          title: Name
          type: string
        valid_on_keys:
          title: Valid On Keys
          type: boolean
      required:
        - name
        - valid_on_keys
      title: DefinitionsFunctionOutput
      type: object
    DefinitionsOutput:
      properties:
        comparisons:
          items:
            $ref: "#/components/schemas/DefinitionsComparisonOutput"
          title: Comparisons
          type: array
        functions:
          items:
            $ref: "#/components/schemas/DefinitionsFunctionOutput"
          title: Functions
          type: array
        keys:
          items:
            $ref: "#/components/schemas/DefinitionsFieldOutput"
          title: Keys
          type: array
        metrics:
          items:
            $ref: "#/components/schemas/DefinitionsFieldOutput"
          title: Metrics
          type: array
      required:
        - metrics
        - keys
        - functions
        - comparisons
      title: DefinitionsOutput
      type: object
    ErrorDict:
      properties:
        ctx:
          title: Ctx
        loc:
          anyOf:
            - items:
                anyOf:
                  - type: string
                  - type: integer
              type: array
            - type: "null"
          title: Loc
        msg:
          title: Msg
          type: string
        type:
          anyOf:
            - type: string
            - type: "null"
          title: Type
      required:
        - msg
      title: ErrorDict
      type: object
    ErrorMessage:
      additionalProperties: false
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ErrorDict"
          title: Detail
          type: array
      required:
        - detail
      title: ErrorMessage
      type: object
    FocusRangeInterval:
      additionalProperties: false
      properties:
        end:
          anyOf:
            - type: number
            - format: date-time
              type: string
          title: End
        metric:
          title: Metric
          type: string
        start:
          anyOf:
            - type: number
            - format: date-time
              type: string
          title: Start
      required:
        - metric
        - start
        - end
      title: FocusRangeInterval
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    QueryInput:
      additionalProperties: false
      properties:
        begin:
          anyOf:
            - $ref: "#/components/schemas/AbsoluteDate"
            - $ref: "#/components/schemas/RelativeDate"
            - type: "null"
          title: Begin
        end:
          anyOf:
            - $ref: "#/components/schemas/AbsoluteDate"
            - $ref: "#/components/schemas/RelativeDate"
            - type: "null"
          title: End
        from:
          enum:
            - rum
            - traceroute
            - traceroute_pop
            - http
            - alert
            - ux_score
          title: The source of data
          type: string
        groupby:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Groupby
        having:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Having
        limit:
          anyOf:
            - default: 100
              exclusiveMaximum: 10000.0
              minimum: 0.0
              type: integer
            - type: "null"
          default: 100
          title: Limit
        offset:
          anyOf:
            - exclusiveMaximum: 100000.0
              minimum: 0.0
              type: integer
            - type: "null"
          title: Offset
        options:
          $ref: "#/components/schemas/catwalk__requestor__query__Options"
        orderby:
          items:
            maxItems: 2
            minItems: 2
            prefixItems:
              - type: string
              - enum:
                  - asc
                  - desc
                type: string
            type: array
          title: Orderby
          type: array
        select:
          items:
            anyOf:
              - type: string
              - type: object
              - items: {}
                type: array
          minItems: 1
          title: Select
          type: array
        where:
          anyOf:
            - {}
            - type: "null"
          title: Where
      required:
        - select
        - from
      title: QueryInput
      type: object
    RelativeDate:
      properties:
        relative:
          format: date-time
          title: Relative
          type: string
      required:
        - relative
      title: RelativeDate
      type: object
    RumApdexInput:
      properties:
        begin:
          anyOf:
            - $ref: "#/components/schemas/AbsoluteDate"
            - $ref: "#/components/schemas/RelativeDate"
            - type: "null"
          title: Begin
        end:
          anyOf:
            - $ref: "#/components/schemas/AbsoluteDate"
            - $ref: "#/components/schemas/RelativeDate"
            - type: "null"
          title: End
        groupby:
          items:
            type: string
          minItems: 1
          title: Groupby
          type: array
        orderby:
          items:
            maxItems: 2
            minItems: 2
            prefixItems:
              - type: string
              - enum:
                  - asc
                  - desc
                type: string
            type: array
          title: Orderby
          type: array
        pregroupby:
          items:
            type: string
          minItems: 1
          title: Pregroupby
          type: array
        where:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Where
      title: RumApdexInput
      type: object
    TraceRouteInput:
      properties:
        begin:
          anyOf:
            - $ref: "#/components/schemas/AbsoluteDate"
            - $ref: "#/components/schemas/RelativeDate"
            - type: "null"
          title: Begin
        end:
          anyOf:
            - $ref: "#/components/schemas/AbsoluteDate"
            - $ref: "#/components/schemas/RelativeDate"
            - type: "null"
          title: End
        focus_on:
          items:
            $ref: "#/components/schemas/FocusRangeInterval"
          title: Focus On
          type: array
        from:
          default: traceroute
          enum:
            - traceroute
            - traceroute_pop
          title: Standard traceroute or traceroute to pops
          type: string
        options:
          allOf:
            - $ref: "#/components/schemas/catwalk__requestor__traceroute__Options"
          default:
            sampling: true
        orderby:
          items:
            maxItems: 2
            minItems: 2
            prefixItems:
              - type: string
              - enum:
                  - asc
                  - desc
                type: string
            type: array
          title: Orderby
          type: array
        where:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Where
      title: TraceRouteInput
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
      type: object
    catwalk__requestor__query__Options:
      additionalProperties: false
      properties: {}
      title: Options
      type: object
    catwalk__requestor__traceroute__Options:
      properties:
        sampling:
          default: true
          title: Sampling
          type: boolean
      title: Options
      type: object
info:
  description: "

    API endpoints `/query/*` to request metrics data,

    This API is not for querying DEM Enterprise's configuration like Stations or
    Probes.

    Please look at `/config/docs` for details.


    Method Not Allowed

    ------------------


    The status *405 Method Not Allowed* is returned when the requested endpoint exists

    but the Method (GET, PUT, POST...) does not match anything.

    "
  title: DEM Enterprise Data Request API
  version: v1
openapi: 3.1.0
paths:
  /dem/query/definitions:
    get:
      operationId: get_fields_api_v1_query_definitions_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefinitionsOutput"
          description: Successful Response
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Too many requests (quota exceeded)
      summary: Get the description of all available fields
      tags:
        - Documentation
    x-netskope-params:
      apiGroup: dem-workbench-query
      customerFacing: true
      nsBeta: true
      serviceConfig: dem-workbench-query
      version: 2
  /dem/query/getdata:
    post:
      description:
        "## Overview\n\nThis path allows to query measures from RUM (Real\
        \ User Monitoring) and Net-Tracer.\n\nThe body **MUST** contains the following\
        \ attributes:\n\n - `select`: a list of expression to query (see below for\
        \ details),\n - `from`: either `\"rum\"` or `\"traceroute\"`\n\nThe following\
        \ attributes are optionals:\n\n - `groupby`: group the results by the given\
        \ list of column,\n - `limit`: limit the number of results,\n - `offset`:\
        \ limit the number of results,\n - `begin` and `until`: the time range to\
        \ query (default is the last hour)\n - `orderby`: a list of column to sort\
        \ the result\n\n### Fields\n\nYou can use the `/query/definitions` path to\
        \ get the list of available fields\nand functions.\n\nFields are usually intended\
        \ for a specific source (`\"rum\"` or `\"traceroute\"`).\n\n### Aliases\n\n\
        An expression can be aliased using the syntax `{<name>: <expression>}`. For\
        \ example, given the expression\n`[\"avg\", \"rtt_e2e\"]`, we can specify\
        \ an alias as `{\"rtt\": [\"avg\", \"rtt_e2e\"]}`.\n\n### Examples\n\nSome\
        \ examples are available above in the **Request body** section."
      operationId: query_all_api_v1_query_getdata_post
      requestBody:
        content:
          application/json:
            examples:
              nettracer_rtt:
                summary: End to end RTT by runner (traceroute)
                value:
                  from: traceroute
                  groupby:
                    - runner_id
                  limit: 10
                  select:
                    - runner_id
                    - rtt:
                        - avg
                        - rtt_e2e
              top_country:
                summary: Top countries by page views (RUM)
                value:
                  from: rum
                  groupby:
                    - country
                  limit: 20
                  orderby:
                    - - "#pages"
                      - desc
                  select:
                    - country
                    - "#pages":
                        - countFor
                        - pages
            schema:
              $ref: "#/components/schemas/QueryInput"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Query All Api V1 Query Getdata Post
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Too many requests (quota exceeded)
      summary: Query RUM, Traceroute and HTTP Measures
      tags:
        - Querying
      x-netskope-route-params:
        hiddenFromUI: true
    x-netskope-params:
      apiGroup: dem-workbench-query
      customerFacing: true
      nsBeta: true
      rateLimit:
        readRoutes:
          second: 30
        writeRoutes:
          second: 30
      serviceConfig: dem-workbench-query
      version: 2
  /dem/query/getrumapdex:
    post:
      operationId: apdex_rum_api_v1_query_getrumapdex_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RumApdexInput"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Apdex Rum Api V1 Query Getrumapdex Post
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Too many requests (quota exceeded)
      summary: Query User Apdex (temporary route)
      tags:
        - Querying
    x-netskope-params:
      apiGroup: dem-workbench-query
      customerFacing: true
      nsBeta: true
      serviceConfig: dem-workbench-query
      version: 2
  /dem/query/gettraceroute:
    post:
      operationId: traceroute_api_v1_query_gettraceroute_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceRouteInput"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Traceroute Api V1 Query Gettraceroute Post
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
          description: Too many requests (quota exceeded)
      summary: Query Traceroute Graphs
      tags:
        - Querying
    x-netskope-params:
      apiGroup: dem-workbench-query
      customerFacing: true
      nsBeta: true
      serviceConfig: dem-workbench-query
      version: 2
